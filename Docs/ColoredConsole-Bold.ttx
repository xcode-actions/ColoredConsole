<?xml version="1.0" encoding="UTF-8"?>
<ttFont sfntVersion="\x00\x01\x00\x00" ttLibVersion="3.44">
  <GlyphOrder>
    <!-- The 'id' attribute is only for humans; it is ignored when parsed. -->
    <GlyphID name=".notdef"/>
    <GlyphID name=".newline"/>
    <GlyphID name=".space"/>
    <GlyphID name="A"/>
    <GlyphID name="B"/>
    <GlyphID name="C"/>
    <GlyphID name="D"/>
    <GlyphID name="E"/>
    <GlyphID name="F"/>
    <GlyphID name="G"/>
    <GlyphID name="H"/>
    <GlyphID name="I"/>
    <GlyphID name="J"/>
    <GlyphID name="K"/>
    <GlyphID name="L"/>
    <GlyphID name="M"/>
    <GlyphID name="N"/>
    <GlyphID name="O"/>
    <GlyphID name="P"/>
    <GlyphID name="Q"/>
    <GlyphID name="R"/>
    <GlyphID name="S"/>
    <GlyphID name="T"/>
    <GlyphID name="U"/>
    <GlyphID name="V"/>
    <GlyphID name="W"/>
    <GlyphID name="X"/>
    <GlyphID name="Y"/>
    <GlyphID name="Z"/>
    <GlyphID name="a"/>
    <GlyphID name="b"/>
    <GlyphID name="c"/>
    <GlyphID name="d"/>
    <GlyphID name="e"/>
    <GlyphID name="f"/>
    <GlyphID name="g"/>
    <GlyphID name="h"/>
    <GlyphID name="i"/>
    <GlyphID name="j"/>
    <GlyphID name="k"/>
    <GlyphID name="l"/>
    <GlyphID name="m"/>
    <GlyphID name="n"/>
    <GlyphID name="o"/>
    <GlyphID name="p"/>
    <GlyphID name="q"/>
    <GlyphID name="r"/>
    <GlyphID name="s"/>
    <GlyphID name="t"/>
    <GlyphID name="u"/>
    <GlyphID name="v"/>
    <GlyphID name="w"/>
    <GlyphID name="x"/>
    <GlyphID name="y"/>
    <GlyphID name="z"/>
    <GlyphID name="zero"/>
    <GlyphID name="one"/>
    <GlyphID name="two"/>
    <GlyphID name="three"/>
    <GlyphID name="four"/>
    <GlyphID name="five"/>
    <GlyphID name="six"/>
    <GlyphID name="seven"/>
    <GlyphID name="eight"/>
    <GlyphID name="nine"/>
    <GlyphID name="asterisk"/>
    <GlyphID name="backslash"/>
    <GlyphID name="colon"/>
    <GlyphID name="comma"/>
    <GlyphID name="exclam"/>
    <GlyphID name="numbersign"/>
    <GlyphID name="period"/>
    <GlyphID name="question"/>
    <GlyphID name="quotedbl"/>
    <GlyphID name="quotesingle"/>
    <GlyphID name="semicolon"/>
    <GlyphID name="slash"/>
    <GlyphID name="underscore"/>
    <GlyphID name="braceleft"/>
    <GlyphID name="braceright"/>
    <GlyphID name="bracketleft"/>
    <GlyphID name="bracketright"/>
    <GlyphID name="parenleft"/>
    <GlyphID name="parenright"/>
    <GlyphID name="hyphen"/>
    <GlyphID name="dollar"/>
    <GlyphID name="tilde"/>
    <GlyphID name="equal"/>
    <GlyphID name="greater"/>
    <GlyphID name="less"/>
    <GlyphID name="percent"/>
    <GlyphID name="plus"/>
    <GlyphID name="bar"/>
    <GlyphID name="at"/>
    <GlyphID name="ampersand"/>
    <GlyphID name="circum"/>
    <GlyphID name="grave"/>
    <!-- extra GlyphIDs -->
  </GlyphOrder>
  <head>
    <!-- Most of this table will be recalculated by the compiler -->
    <tableVersion value="1.0"/>
    <fontRevision value="3.206"/>
    <checkSumAdjustment value="0xde139fe2"/>
    <magicNumber value="0x5f0f3cf5"/>
    <flags value="00000000 00000011"/>
    <unitsPerEm value="1000"/>
    <created value="Tue Sep  8 09:59:06 2015"/>
    <modified value="Wed Sep  9 19:53:23 2015"/>
    <xMin value="-634"/>
    <yMin value="-500"/>
    <xMax value="1192"/>
    <yMax value="1050"/>
    <macStyle value="00000000 00000001"/>
    <lowestRecPPEM value="7"/>
    <fontDirectionHint value="2"/>
    <indexToLocFormat value="0"/>
    <glyphDataFormat value="0"/>
  </head>
  <hhea>
    <tableVersion value="0x00010000"/>
    <ascent value="935"/>
    <descent value="-265"/>
    <lineGap value="0"/>
    <advanceWidthMax value="600"/>
    <minLeftSideBearing value="-634"/>
    <minRightSideBearing value="-1192"/>
    <xMaxExtent value="1192"/>
    <caretSlopeRise value="1"/>
    <caretSlopeRun value="0"/>
    <caretOffset value="0"/>
    <reserved0 value="0"/>
    <reserved1 value="0"/>
    <reserved2 value="0"/>
    <reserved3 value="0"/>
    <metricDataFormat value="0"/>
    <numberOfHMetrics value="1"/>
  </hhea>
  <maxp>
    <!-- Most of this table will be recalculated by the compiler -->
    <tableVersion value="0x10000"/>
    <numGlyphs value="130"/>
    <maxPoints value="480"/>
    <maxContours value="91"/>
    <maxCompositePoints value="94"/>
    <maxCompositeContours value="7"/>
    <maxZones value="2"/>
    <maxTwilightPoints value="36"/>
    <maxStorage value="52"/>
    <maxFunctionDefs value="119"/>
    <maxInstructionDefs value="0"/>
    <maxStackElements value="204"/>
    <maxSizeOfInstructions value="2967"/>
    <maxComponentElements value="3"/>
    <maxComponentDepth value="1"/>
  </maxp>
  <hmtx>
    <mtx name=".notdef" width="600" lsb="90"/>
    <mtx name="A" width="600" lsb="-11"/>
    <mtx name="B" width="600" lsb="56"/>
    <mtx name="C" width="600" lsb="34"/>
    <mtx name="D" width="600" lsb="52"/>
    <mtx name="E" width="600" lsb="93"/>
    <mtx name="F" width="600" lsb="108"/>
    <mtx name="G" width="600" lsb="23"/>
    <mtx name="H" width="600" lsb="52"/>
    <mtx name="I" width="600" lsb="75"/>
    <mtx name="J" width="600" lsb="39"/>
    <mtx name="K" width="600" lsb="59"/>
    <mtx name="L" width="600" lsb="93"/>
    <mtx name="M" width="600" lsb="17"/>
    <mtx name="N" width="600" lsb="52"/>
    <mtx name="O" width="600" lsb="23"/>
    <mtx name="P" width="600" lsb="62"/>
    <mtx name="Q" width="600" lsb="32"/>
    <mtx name="R" width="600" lsb="58"/>
    <mtx name="S" width="600" lsb="12"/>
    <mtx name="T" width="600" lsb="22"/>
    <mtx name="U" width="600" lsb="42"/>
    <mtx name="V" width="600" lsb="0"/>
    <mtx name="W" width="600" lsb="-3"/>
    <mtx name="X" width="600" lsb="4"/>
    <mtx name="Y" width="600" lsb="-8"/>
    <mtx name="Z" width="600" lsb="39"/>
    <mtx name="a" width="600" lsb="35"/>
    <mtx name="ampersand" width="600" lsb="37"/>
    <mtx name="circum" width="600" lsb="39"/>
    <mtx name="tilde" width="600" lsb="22"/>
    <mtx name="asterisk" width="600" lsb="78"/>
    <mtx name="at" width="600" lsb="-2"/>
    <mtx name="b" width="600" lsb="70"/>
    <mtx name="backslash" width="600" lsb="29"/>
    <mtx name="bar" width="600" lsb="226"/>
    <mtx name="braceleft" width="600" lsb="105"/>
    <mtx name="braceright" width="600" lsb="133"/>
    <mtx name="bracketleft" width="600" lsb="156"/>
    <mtx name="bracketright" width="600" lsb="136"/>
    <mtx name="c" width="600" lsb="69"/>
    <mtx name="colon" width="600" lsb="195"/>
    <mtx name="comma" width="600" lsb="188"/>
    <mtx name="d" width="600" lsb="40"/>
    <mtx name="dollar" width="600" lsb="42"/>
    <mtx name="e" width="600" lsb="46"/>
    <mtx name="eight" width="600" lsb="43"/>
    <mtx name="equal" width="600" lsb="73"/>
    <mtx name="exclam" width="600" lsb="210"/>
    <mtx name="f" width="600" lsb="76"/>
    <mtx name="five" width="600" lsb="39"/>
    <mtx name="four" width="600" lsb="45"/>
    <mtx name="g" width="600" lsb="31"/>
    <mtx name="grave" width="600" lsb="163"/>
    <mtx name="greater" width="600" lsb="70"/>
    <mtx name="h" width="600" lsb="70"/>
    <mtx name="hyphen" width="600" lsb="108"/>
    <mtx name="i" width="600" lsb="86"/>
    <mtx name="j" width="600" lsb="70"/>
    <mtx name="k" width="600" lsb="70"/>
    <mtx name="l" width="600" lsb="33"/>
    <mtx name="less" width="600" lsb="70"/>
    <mtx name="m" width="600" lsb="27"/>
    <mtx name="n" width="600" lsb="70"/>
    <mtx name="nine" width="600" lsb="44"/>
    <mtx name="numbersign" width="600" lsb="35"/>
    <mtx name="o" width="600" lsb="42"/>
    <mtx name="one" width="600" lsb="58"/>
    <mtx name="p" width="600" lsb="70"/>
    <mtx name="parenleft" width="600" lsb="101"/>
    <mtx name="parenright" width="600" lsb="150"/>
    <mtx name="percent" width="600" lsb="3"/>
    <mtx name="period" width="600" lsb="189"/>
    <mtx name="plus" width="600" lsb="83"/>
    <mtx name="q" width="600" lsb="42"/>
    <mtx name="question" width="600" lsb="56"/>
    <mtx name="quotedbl" width="600" lsb="129"/>
    <mtx name="quotesingle" width="600" lsb="225"/>
    <mtx name="r" width="600" lsb="75"/>
    <mtx name="s" width="600" lsb="48"/>
    <mtx name="semicolon" width="600" lsb="191"/>
    <mtx name="seven" width="600" lsb="68"/>
    <mtx name="six" width="600" lsb="50"/>
    <mtx name="slash" width="600" lsb="29"/>
    <mtx name=".space" width="600" lsb="0"/>
    <mtx name="t" width="600" lsb="58"/>
    <mtx name="three" width="600" lsb="18"/>
    <mtx name="two" width="600" lsb="40"/>
    <mtx name="u" width="600" lsb="70"/>
    <mtx name="underscore" width="600" lsb="50"/>
    <mtx name=".newline" width="600" lsb="0"/>
    <mtx name="v" width="600" lsb="29"/>
    <mtx name="w" width="600" lsb="3"/>
    <mtx name="x" width="600" lsb="22"/>
    <mtx name="y" width="600" lsb="28"/>
    <mtx name="z" width="600" lsb="72"/>
    <mtx name="zero" width="600" lsb="50"/>
    <!-- extra mtxs -->
  </hmtx>
  <cmap>
    <tableVersion version="0"/>
    <cmap_format_12 platformID="0" platEncID="4" format="12" reserved="0" length="460" language="0" nGroups="37">
      <map code="0xd" name=".newline"/>
      <!-- ???? -->
      <map code="0x20" name=".space"/>
      <!-- SPACE -->
      <map code="0x21" name="exclam"/>
      <!-- EXCLAMATION MARK -->
      <map code="0x22" name="quotedbl"/>
      <!-- QUOTATION MARK -->
      <map code="0x23" name="numbersign"/>
      <!-- NUMBER SIGN -->
      <map code="0x24" name="dollar"/>
      <!-- DOLLAR SIGN -->
      <map code="0x25" name="percent"/>
      <!-- PERCENT SIGN -->
      <map code="0x26" name="ampersand"/>
      <!-- AMPERSAND -->
      <map code="0x27" name="quotesingle"/>
      <!-- APOSTROPHE -->
      <map code="0x28" name="parenleft"/>
      <!-- LEFT PARENTHESIS -->
      <map code="0x29" name="parenright"/>
      <!-- RIGHT PARENTHESIS -->
      <map code="0x2a" name="asterisk"/>
      <!-- ASTERISK -->
      <map code="0x2b" name="plus"/>
      <!-- PLUS SIGN -->
      <map code="0x2c" name="comma"/>
      <!-- COMMA -->
      <map code="0x2d" name="hyphen"/>
      <!-- HYPHEN-MINUS -->
      <map code="0x2e" name="period"/>
      <!-- FULL STOP -->
      <map code="0x2f" name="slash"/>
      <!-- SOLIDUS -->
      <map code="0x30" name="zero"/>
      <!-- DIGIT ZERO -->
      <map code="0x31" name="one"/>
      <!-- DIGIT ONE -->
      <map code="0x32" name="two"/>
      <!-- DIGIT TWO -->
      <map code="0x33" name="three"/>
      <!-- DIGIT THREE -->
      <map code="0x34" name="four"/>
      <!-- DIGIT FOUR -->
      <map code="0x35" name="five"/>
      <!-- DIGIT FIVE -->
      <map code="0x36" name="six"/>
      <!-- DIGIT SIX -->
      <map code="0x37" name="seven"/>
      <!-- DIGIT SEVEN -->
      <map code="0x38" name="eight"/>
      <!-- DIGIT EIGHT -->
      <map code="0x39" name="nine"/>
      <!-- DIGIT NINE -->
      <map code="0x3a" name="colon"/>
      <!-- COLON -->
      <map code="0x3b" name="semicolon"/>
      <!-- SEMICOLON -->
      <map code="0x3c" name="less"/>
      <!-- LESS-THAN SIGN -->
      <map code="0x3d" name="equal"/>
      <!-- EQUALS SIGN -->
      <map code="0x3e" name="greater"/>
      <!-- GREATER-THAN SIGN -->
      <map code="0x3f" name="question"/>
      <!-- QUESTION MARK -->
      <map code="0x40" name="at"/>
      <!-- COMMERCIAL AT -->
      <map code="0x41" name="A"/>
      <!-- LATIN CAPITAL LETTER A -->
      <map code="0x42" name="B"/>
      <!-- LATIN CAPITAL LETTER B -->
      <map code="0x43" name="C"/>
      <!-- LATIN CAPITAL LETTER C -->
      <map code="0x44" name="D"/>
      <!-- LATIN CAPITAL LETTER D -->
      <map code="0x45" name="E"/>
      <!-- LATIN CAPITAL LETTER E -->
      <map code="0x46" name="F"/>
      <!-- LATIN CAPITAL LETTER F -->
      <map code="0x47" name="G"/>
      <!-- LATIN CAPITAL LETTER G -->
      <map code="0x48" name="H"/>
      <!-- LATIN CAPITAL LETTER H -->
      <map code="0x49" name="I"/>
      <!-- LATIN CAPITAL LETTER I -->
      <map code="0x4a" name="J"/>
      <!-- LATIN CAPITAL LETTER J -->
      <map code="0x4b" name="K"/>
      <!-- LATIN CAPITAL LETTER K -->
      <map code="0x4c" name="L"/>
      <!-- LATIN CAPITAL LETTER L -->
      <map code="0x4d" name="M"/>
      <!-- LATIN CAPITAL LETTER M -->
      <map code="0x4e" name="N"/>
      <!-- LATIN CAPITAL LETTER N -->
      <map code="0x4f" name="O"/>
      <!-- LATIN CAPITAL LETTER O -->
      <map code="0x50" name="P"/>
      <!-- LATIN CAPITAL LETTER P -->
      <map code="0x51" name="Q"/>
      <!-- LATIN CAPITAL LETTER Q -->
      <map code="0x52" name="R"/>
      <!-- LATIN CAPITAL LETTER R -->
      <map code="0x53" name="S"/>
      <!-- LATIN CAPITAL LETTER S -->
      <map code="0x54" name="T"/>
      <!-- LATIN CAPITAL LETTER T -->
      <map code="0x55" name="U"/>
      <!-- LATIN CAPITAL LETTER U -->
      <map code="0x56" name="V"/>
      <!-- LATIN CAPITAL LETTER V -->
      <map code="0x57" name="W"/>
      <!-- LATIN CAPITAL LETTER W -->
      <map code="0x58" name="X"/>
      <!-- LATIN CAPITAL LETTER X -->
      <map code="0x59" name="Y"/>
      <!-- LATIN CAPITAL LETTER Y -->
      <map code="0x5a" name="Z"/>
      <!-- LATIN CAPITAL LETTER Z -->
      <map code="0x5b" name="bracketleft"/>
      <!-- LEFT SQUARE BRACKET -->
      <map code="0x5c" name="backslash"/>
      <!-- REVERSE SOLIDUS -->
      <map code="0x5d" name="bracketright"/>
      <!-- RIGHT SQUARE BRACKET -->
      <map code="0x5e" name="circum"/>
      <!-- CIRCUMFLEX ACCENT -->
      <map code="0x5f" name="underscore"/>
      <!-- LOW LINE -->
      <map code="0x60" name="grave"/>
      <!-- GRAVE ACCENT -->
      <map code="0x61" name="a"/>
      <!-- LATIN SMALL LETTER A -->
      <map code="0x62" name="b"/>
      <!-- LATIN SMALL LETTER B -->
      <map code="0x63" name="c"/>
      <!-- LATIN SMALL LETTER C -->
      <map code="0x64" name="d"/>
      <!-- LATIN SMALL LETTER D -->
      <map code="0x65" name="e"/>
      <!-- LATIN SMALL LETTER E -->
      <map code="0x66" name="f"/>
      <!-- LATIN SMALL LETTER F -->
      <map code="0x67" name="g"/>
      <!-- LATIN SMALL LETTER G -->
      <map code="0x68" name="h"/>
      <!-- LATIN SMALL LETTER H -->
      <map code="0x69" name="i"/>
      <!-- LATIN SMALL LETTER I -->
      <map code="0x6a" name="j"/>
      <!-- LATIN SMALL LETTER J -->
      <map code="0x6b" name="k"/>
      <!-- LATIN SMALL LETTER K -->
      <map code="0x6c" name="l"/>
      <!-- LATIN SMALL LETTER L -->
      <map code="0x6d" name="m"/>
      <!-- LATIN SMALL LETTER M -->
      <map code="0x6e" name="n"/>
      <!-- LATIN SMALL LETTER N -->
      <map code="0x6f" name="o"/>
      <!-- LATIN SMALL LETTER O -->
      <map code="0x70" name="p"/>
      <!-- LATIN SMALL LETTER P -->
      <map code="0x71" name="q"/>
      <!-- LATIN SMALL LETTER Q -->
      <map code="0x72" name="r"/>
      <!-- LATIN SMALL LETTER R -->
      <map code="0x73" name="s"/>
      <!-- LATIN SMALL LETTER S -->
      <map code="0x74" name="t"/>
      <!-- LATIN SMALL LETTER T -->
      <map code="0x75" name="u"/>
      <!-- LATIN SMALL LETTER U -->
      <map code="0x76" name="v"/>
      <!-- LATIN SMALL LETTER V -->
      <map code="0x77" name="w"/>
      <!-- LATIN SMALL LETTER W -->
      <map code="0x78" name="x"/>
      <!-- LATIN SMALL LETTER X -->
      <map code="0x79" name="y"/>
      <!-- LATIN SMALL LETTER Y -->
      <map code="0x7a" name="z"/>
      <!-- LATIN SMALL LETTER Z -->
      <map code="0x7b" name="braceleft"/>
      <!-- LEFT CURLY BRACKET -->
      <map code="0x7c" name="bar"/>
      <!-- VERTICAL LINE -->
      <map code="0x7d" name="braceright"/>
      <!-- RIGHT CURLY BRACKET -->
      <map code="0x7e" name="tilde"/>
      <!-- TILDE -->
      <!-- extra maps -->
    </cmap_format_12>
  </cmap>
  <fpgm>
    <assembly>
      PUSHB[ ]	/* 1 value pushed */
      0
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        NEQ[ ]	/* NotEqual */
        IF[ ]	/* If */
          RCVT[ ]	/* ReadCVT */
        EIF[ ]	/* EndIf */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        MPPEM[ ]	/* MeasurePixelPerEm */
        PUSHW[ ]	/* 1 value pushed */
        14
        LTEQ[ ]	/* LessThenOrEqual */
        MPPEM[ ]	/* MeasurePixelPerEm */
        PUSHB[ ]	/* 1 value pushed */
        6
        GTEQ[ ]	/* GreaterThanOrEqual */
        AND[ ]	/* LogicalAnd */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          52
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 1 value pushed */
          40
        EIF[ ]	/* EndIf */
        ADD[ ]	/* Add */
        FLOOR[ ]	/* Floor */
        DUP[ ]	/* DuplicateTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        NEQ[ ]	/* NotEqual */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          SUB[ ]	/* Subtract */
          PUSHW[ ]	/* 2 values pushed */
          2048 2048
          MUL[ ]	/* Multiply */
          MUL[ ]	/* Multiply */
          SWAP[ ]	/* SwapTopStack */
          DIV[ ]	/* Divide */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          PUSHB[ ]	/* 1 value pushed */
          0
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        0
        RS[ ]	/* ReadStore */
        SWAP[ ]	/* SwapTopStack */
        WCVTP[ ]	/* WriteCVTInPixels */
        PUSHB[ ]	/* 3 values pushed */
        0 1 0
        RS[ ]	/* ReadStore */
        ADD[ ]	/* Add */
        WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      1
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        32
        ADD[ ]	/* Add */
        FLOOR[ ]	/* Floor */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      2
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        ABS[ ]	/* Absolute */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        192
        LT[ ]	/* LessThan */
        PUSHB[ ]	/* 1 value pushed */
        4
        MINDEX[ ]	/* MoveXToTopStack */
        AND[ ]	/* LogicalAnd */
        PUSHB[ ]	/* 3 values pushed */
        40 1 10
        RS[ ]	/* ReadStore */
        RCVT[ ]	/* ReadCVT */
        MUL[ ]	/* Multiply */
        RCVT[ ]	/* ReadCVT */
        GT[ ]	/* GreaterThan */
        OR[ ]	/* LogicalOr */
        IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          SWAP[ ]	/* SwapTopStack */
          POP[ ]	/* PopTopStack */
        ELSE[ ]	/* Else */
          ROLL[ ]	/* RollTopThreeStack */
          IF[ ]	/* If */
            DUP[ ]	/* DuplicateTopStack */
            PUSHB[ ]	/* 1 value pushed */
            80
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              POP[ ]	/* PopTopStack */
              PUSHB[ ]	/* 1 value pushed */
              64
            EIF[ ]	/* EndIf */
          ELSE[ ]	/* Else */
            DUP[ ]	/* DuplicateTopStack */
            PUSHB[ ]	/* 1 value pushed */
            56
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              POP[ ]	/* PopTopStack */
              PUSHB[ ]	/* 1 value pushed */
              56
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 2 values pushed */
          1 10
          RS[ ]	/* ReadStore */
          RCVT[ ]	/* ReadCVT */
          MUL[ ]	/* Multiply */
          RCVT[ ]	/* ReadCVT */
          SUB[ ]	/* Subtract */
          ABS[ ]	/* Absolute */
          PUSHB[ ]	/* 1 value pushed */
          40
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            PUSHB[ ]	/* 2 values pushed */
            1 10
            RS[ ]	/* ReadStore */
            RCVT[ ]	/* ReadCVT */
            MUL[ ]	/* Multiply */
            RCVT[ ]	/* ReadCVT */
            DUP[ ]	/* DuplicateTopStack */
            PUSHB[ ]	/* 1 value pushed */
            48
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              POP[ ]	/* PopTopStack */
              PUSHB[ ]	/* 1 value pushed */
              48
            EIF[ ]	/* EndIf */
          ELSE[ ]	/* Else */
            DUP[ ]	/* DuplicateTopStack */
            PUSHB[ ]	/* 1 value pushed */
            192
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              DUP[ ]	/* DuplicateTopStack */
              FLOOR[ ]	/* Floor */
              DUP[ ]	/* DuplicateTopStack */
              ROLL[ ]	/* RollTopThreeStack */
              ROLL[ ]	/* RollTopThreeStack */
              SUB[ ]	/* Subtract */
              DUP[ ]	/* DuplicateTopStack */
              PUSHB[ ]	/* 1 value pushed */
              10
              LT[ ]	/* LessThan */
              IF[ ]	/* If */
                ADD[ ]	/* Add */
              ELSE[ ]	/* Else */
                DUP[ ]	/* DuplicateTopStack */
                PUSHB[ ]	/* 1 value pushed */
                32
                LT[ ]	/* LessThan */
                IF[ ]	/* If */
                  POP[ ]	/* PopTopStack */
                  PUSHB[ ]	/* 1 value pushed */
                  10
                  ADD[ ]	/* Add */
                ELSE[ ]	/* Else */
                  DUP[ ]	/* DuplicateTopStack */
                  PUSHB[ ]	/* 1 value pushed */
                  54
                  LT[ ]	/* LessThan */
                  IF[ ]	/* If */
                    POP[ ]	/* PopTopStack */
                    PUSHB[ ]	/* 1 value pushed */
                    54
                    ADD[ ]	/* Add */
                  ELSE[ ]	/* Else */
                    ADD[ ]	/* Add */
                  EIF[ ]	/* EndIf */
                EIF[ ]	/* EndIf */
              EIF[ ]	/* EndIf */
            ELSE[ ]	/* Else */
              PUSHB[ ]	/* 1 value pushed */
              1
              CALL[ ]	/* CallFunction */
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          SWAP[ ]	/* SwapTopStack */
          PUSHB[ ]	/* 1 value pushed */
          0
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NEG[ ]	/* Negate */
          EIF[ ]	/* EndIf */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      3
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        RCVT[ ]	/* ReadCVT */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        SUB[ ]	/* Subtract */
        ABS[ ]	/* Absolute */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        5
        RS[ ]	/* ReadStore */
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          5
          SWAP[ ]	/* SwapTopStack */
          WS[ ]	/* WriteStore */
          PUSHB[ ]	/* 1 value pushed */
          6
          SWAP[ ]	/* SwapTopStack */
          WS[ ]	/* WriteStore */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        1
        ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      4
      FDEF[ ]	/* FunctionDefinition */
        SWAP[ ]	/* SwapTopStack */
        POP[ ]	/* PopTopStack */
        SWAP[ ]	/* SwapTopStack */
        POP[ ]	/* PopTopStack */
        DUP[ ]	/* DuplicateTopStack */
        ABS[ ]	/* Absolute */
        PUSHB[ ]	/* 2 values pushed */
        5 98
        WS[ ]	/* WriteStore */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        6
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 2 values pushed */
        1 10
        RS[ ]	/* ReadStore */
        RCVT[ ]	/* ReadCVT */
        MUL[ ]	/* Multiply */
        PUSHB[ ]	/* 2 values pushed */
        1 10
        RS[ ]	/* ReadStore */
        PUSHB[ ]	/* 1 value pushed */
        3
        ADD[ ]	/* Add */
        RCVT[ ]	/* ReadCVT */
        MUL[ ]	/* Multiply */
        PUSHB[ ]	/* 1 value pushed */
        3
        LOOPCALL[ ]	/* LoopAndCallFunction */
        POP[ ]	/* PopTopStack */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        6
        RS[ ]	/* ReadStore */
        DUP[ ]	/* DuplicateTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        DUP[ ]	/* DuplicateTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        PUSHB[ ]	/* 1 value pushed */
        1
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 2 values pushed */
        48 5
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        MINDEX[ ]	/* MoveXToTopStack */
        LTEQ[ ]	/* LessThenOrEqual */
        IF[ ]	/* If */
          ADD[ ]	/* Add */
          LT[ ]	/* LessThan */
        ELSE[ ]	/* Else */
          SUB[ ]	/* Subtract */
          GT[ ]	/* GreaterThan */
        EIF[ ]	/* EndIf */
        IF[ ]	/* If */
          SWAP[ ]	/* SwapTopStack */
        EIF[ ]	/* EndIf */
        POP[ ]	/* PopTopStack */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        64
        GTEQ[ ]	/* GreaterThanOrEqual */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          1
          CALL[ ]	/* CallFunction */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          PUSHB[ ]	/* 1 value pushed */
          64
        EIF[ ]	/* EndIf */
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          NEG[ ]	/* Negate */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      5
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        7
        RS[ ]	/* ReadStore */
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 3 values pushed */
        0 2 0
        RS[ ]	/* ReadStore */
        ADD[ ]	/* Add */
        WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      6
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        7
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        SUB[ ]	/* Subtract */
        PUSHB[ ]	/* 1 value pushed */
        2
        DIV[ ]	/* Divide */
        FLOOR[ ]	/* Floor */
        PUSHB[ ]	/* 1 value pushed */
        1
        MUL[ ]	/* Multiply */
        PUSHB[ ]	/* 1 value pushed */
        1
        ADD[ ]	/* Add */
        PUSHB[ ]	/* 1 value pushed */
        5
        LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      7
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        RCVT[ ]	/* ReadCVT */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        11
        RS[ ]	/* ReadStore */
        MUL[ ]	/* Multiply */
        PUSHW[ ]	/* 1 value pushed */
        1024
        DIV[ ]	/* Divide */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          64
          ADD[ ]	/* Add */
        EIF[ ]	/* EndIf */
        FLOOR[ ]	/* Floor */
        PUSHB[ ]	/* 1 value pushed */
        1
        MUL[ ]	/* Multiply */
        ADD[ ]	/* Add */
        WCVTP[ ]	/* WriteCVTInPixels */
        PUSHB[ ]	/* 1 value pushed */
        1
        ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      8
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        7 11 0
        RS[ ]	/* ReadStore */
        RCVT[ ]	/* ReadCVT */
        WS[ ]	/* WriteStore */
        LOOPCALL[ ]	/* LoopAndCallFunction */
        POP[ ]	/* PopTopStack */
        PUSHB[ ]	/* 3 values pushed */
        0 1 0
        RS[ ]	/* ReadStore */
        ADD[ ]	/* Add */
        WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      9
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        0
        RS[ ]	/* ReadStore */
        SWAP[ ]	/* SwapTopStack */
        WCVTP[ ]	/* WriteCVTInPixels */
        PUSHB[ ]	/* 3 values pushed */
        0 1 0
        RS[ ]	/* ReadStore */
        ADD[ ]	/* Add */
        WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      10
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        RCVT[ ]	/* ReadCVT */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        1
        CALL[ ]	/* CallFunction */
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        RS[ ]	/* ReadStore */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        ADD[ ]	/* Add */
        DUP[ ]	/* DuplicateTopStack */
        RCVT[ ]	/* ReadCVT */
        ROLL[ ]	/* RollTopThreeStack */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        DUP[ ]	/* DuplicateTopStack */
        ABS[ ]	/* Absolute */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        32
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          PUSHB[ ]	/* 1 value pushed */
          0
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 1 value pushed */
          48
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            32
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 1 value pushed */
            64
          EIF[ ]	/* EndIf */
        EIF[ ]	/* EndIf */
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          NEG[ ]	/* Negate */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        WCVTP[ ]	/* WriteCVTInPixels */
        WCVTP[ ]	/* WriteCVTInPixels */
        PUSHB[ ]	/* 1 value pushed */
        1
        ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      11
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        RCVT[ ]	/* ReadCVT */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        1
        CALL[ ]	/* CallFunction */
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        RS[ ]	/* ReadStore */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        ADD[ ]	/* Add */
        DUP[ ]	/* DuplicateTopStack */
        RCVT[ ]	/* ReadCVT */
        ROLL[ ]	/* RollTopThreeStack */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        DUP[ ]	/* DuplicateTopStack */
        ABS[ ]	/* Absolute */
        PUSHB[ ]	/* 1 value pushed */
        36
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          0
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 1 value pushed */
          64
        EIF[ ]	/* EndIf */
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          NEG[ ]	/* Negate */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        WCVTP[ ]	/* WriteCVTInPixels */
        WCVTP[ ]	/* WriteCVTInPixels */
        PUSHB[ ]	/* 1 value pushed */
        1
        ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      12
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 3 values pushed */
        11 10 3
        RCVT[ ]	/* ReadCVT */
        IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
        ELSE[ ]	/* Else */
          SWAP[ ]	/* SwapTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
        LOOPCALL[ ]	/* LoopAndCallFunction */
        POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      13
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        2 2
        RCVT[ ]	/* ReadCVT */
        PUSHB[ ]	/* 1 value pushed */
        100
        SUB[ ]	/* Subtract */
        WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      14
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        1
        ADD[ ]	/* Add */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        12
        RS[ ]	/* ReadStore */
        MD[1]	/* MeasureDistance */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          12
          SWAP[ ]	/* SwapTopStack */
          WS[ ]	/* WriteStore */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        13
        RS[ ]	/* ReadStore */
        MD[1]	/* MeasureDistance */
        PUSHB[ ]	/* 1 value pushed */
        0
        GT[ ]	/* GreaterThan */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          13
          SWAP[ ]	/* SwapTopStack */
          WS[ ]	/* WriteStore */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      15
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        16
        DIV[ ]	/* Divide */
        FLOOR[ ]	/* Floor */
        PUSHB[ ]	/* 1 value pushed */
        1
        MUL[ ]	/* Multiply */
        DUP[ ]	/* DuplicateTopStack */
        PUSHW[ ]	/* 1 value pushed */
        1024
        MUL[ ]	/* Multiply */
        ROLL[ ]	/* RollTopThreeStack */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        PUSHB[ ]	/* 1 value pushed */
        14
        RS[ ]	/* ReadStore */
        ADD[ ]	/* Add */
        DUP[ ]	/* DuplicateTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        ADD[ ]	/* Add */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        14
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        SWAP[ ]	/* SwapTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      16
      FDEF[ ]	/* FunctionDefinition */
        MPPEM[ ]	/* MeasurePixelPerEm */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          PUSHB[ ]	/* 2 values pushed */
          4 100
          WCVTP[ ]	/* WriteCVTInPixels */
        EIF[ ]	/* EndIf */
        DEPTH[ ]	/* GetDepthStack */
        PUSHB[ ]	/* 1 value pushed */
        13
        NEG[ ]	/* Negate */
        SWAP[ ]	/* SwapTopStack */
        JROT[ ]	/* JumpRelativeOnTrue */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      17
      FDEF[ ]	/* FunctionDefinition */
        MPPEM[ ]	/* MeasurePixelPerEm */
        LTEQ[ ]	/* LessThenOrEqual */
        IF[ ]	/* If */
          MPPEM[ ]	/* MeasurePixelPerEm */
          GTEQ[ ]	/* GreaterThanOrEqual */
          IF[ ]	/* If */
            PUSHB[ ]	/* 2 values pushed */
            4 100
            WCVTP[ ]	/* WriteCVTInPixels */
          EIF[ ]	/* EndIf */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
        DEPTH[ ]	/* GetDepthStack */
        PUSHB[ ]	/* 1 value pushed */
        19
        NEG[ ]	/* Negate */
        SWAP[ ]	/* SwapTopStack */
        JROT[ ]	/* JumpRelativeOnTrue */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      18
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 15
        RS[ ]	/* ReadStore */
        NEQ[ ]	/* NotEqual */
        IF[ ]	/* If */
          PUSHB[ ]	/* 2 values pushed */
          15 15
          RS[ ]	/* ReadStore */
          PUSHB[ ]	/* 1 value pushed */
          1
          SUB[ ]	/* Subtract */
          WS[ ]	/* WriteStore */
          PUSHB[ ]	/* 1 value pushed */
          15
          CALL[ ]	/* CallFunction */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        0
        RS[ ]	/* ReadStore */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 2 values pushed */
        12 2
        CINDEX[ ]	/* CopyXToTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 2 values pushed */
        13 2
        CINDEX[ ]	/* CopyXToTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 1 value pushed */
        1
        SZPS[ ]	/* SetZonePointerS */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 2 values pushed */
          1 0
          RS[ ]	/* ReadStore */
          ADD[ ]	/* Add */
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          WS[ ]	/* WriteStore */
          ROLL[ ]	/* RollTopThreeStack */
          ROLL[ ]	/* RollTopThreeStack */
          DUP[ ]	/* DuplicateTopStack */
          ROLL[ ]	/* RollTopThreeStack */
          SWAP[ ]	/* SwapTopStack */
          SUB[ ]	/* Subtract */
          PUSHB[ ]	/* 1 value pushed */
          14
          LOOPCALL[ ]	/* LoopAndCallFunction */
          POP[ ]	/* PopTopStack */
          SWAP[ ]	/* SwapTopStack */
          PUSHB[ ]	/* 1 value pushed */
          1
          SUB[ ]	/* Subtract */
          DUP[ ]	/* DuplicateTopStack */
          ROLL[ ]	/* RollTopThreeStack */
          SWAP[ ]	/* SwapTopStack */
          SUB[ ]	/* Subtract */
          PUSHB[ ]	/* 1 value pushed */
          14
          LOOPCALL[ ]	/* LoopAndCallFunction */
          POP[ ]	/* PopTopStack */
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 2 values pushed */
          1 0
          RS[ ]	/* ReadStore */
          ADD[ ]	/* Add */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          WS[ ]	/* WriteStore */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          SUB[ ]	/* Subtract */
          PUSHB[ ]	/* 1 value pushed */
          14
          LOOPCALL[ ]	/* LoopAndCallFunction */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        12
        RS[ ]	/* ReadStore */
        GC[1]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        13
        RS[ ]	/* ReadStore */
        GC[1]	/* GetCoordOnPVector */
        ADD[ ]	/* Add */
        PUSHB[ ]	/* 1 value pushed */
        2
        DIV[ ]	/* Divide */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          64
          ADD[ ]	/* Add */
        EIF[ ]	/* EndIf */
        FLOOR[ ]	/* Floor */
        PUSHB[ ]	/* 1 value pushed */
        1
        MUL[ ]	/* Multiply */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        11
        RS[ ]	/* ReadStore */
        MUL[ ]	/* Multiply */
        PUSHW[ ]	/* 1 value pushed */
        1024
        DIV[ ]	/* Divide */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          64
          ADD[ ]	/* Add */
        EIF[ ]	/* EndIf */
        FLOOR[ ]	/* Floor */
        PUSHB[ ]	/* 1 value pushed */
        1
        MUL[ ]	/* Multiply */
        ADD[ ]	/* Add */
        PUSHB[ ]	/* 2 values pushed */
        0 0
        SZP0[ ]	/* SetZonePointer0 */
        SWAP[ ]	/* SwapTopStack */
        WCVTP[ ]	/* WriteCVTInPixels */
        PUSHB[ ]	/* 1 value pushed */
        1
        RS[ ]	/* ReadStore */
        PUSHB[ ]	/* 1 value pushed */
        0
        MIAP[0]	/* MoveIndirectAbsPt */
        PUSHB[ ]	/* 3 values pushed */
        1 1 1
        RS[ ]	/* ReadStore */
        ADD[ ]	/* Add */
        WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      19
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[0]	/* SetFPVectorToAxis */
        PUSHB[ ]	/* 2 values pushed */
        0 2
        RCVT[ ]	/* ReadCVT */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          15
          SWAP[ ]	/* SwapTopStack */
          WS[ ]	/* WriteStore */
          DUP[ ]	/* DuplicateTopStack */
          RCVT[ ]	/* ReadCVT */
          PUSHB[ ]	/* 1 value pushed */
          11
          SWAP[ ]	/* SwapTopStack */
          WS[ ]	/* WriteStore */
          PUSHB[ ]	/* 1 value pushed */
          10
          SWAP[ ]	/* SwapTopStack */
          PUSHB[ ]	/* 1 value pushed */
          3
          ADD[ ]	/* Add */
          WS[ ]	/* WriteStore */
          DUP[ ]	/* DuplicateTopStack */
          ADD[ ]	/* Add */
          PUSHB[ ]	/* 1 value pushed */
          1
          SUB[ ]	/* Subtract */
          PUSHB[ ]	/* 6 values pushed */
          16 16 1 0 14 0
          WS[ ]	/* WriteStore */
          WS[ ]	/* WriteStore */
          ROLL[ ]	/* RollTopThreeStack */
          ADD[ ]	/* Add */
          PUSHB[ ]	/* 2 values pushed */
          18 6
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 1 value pushed */
          117
          CALL[ ]	/* CallFunction */
        ELSE[ ]	/* Else */
          CLEAR[ ]	/* ClearStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      20
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 19
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      21
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        1 19
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      22
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        2 19
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      23
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        3 19
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      24
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        4 19
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      25
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        5 19
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      26
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        6 19
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      27
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        7 19
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      28
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        8 19
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      29
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        9 19
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      41
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 1 value pushed */
        1
        DELTAP1[ ]	/* DeltaExceptionP1 */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      42
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 1 value pushed */
        1
        DELTAP2[ ]	/* DeltaExceptionP2 */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      43
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 1 value pushed */
        1
        DELTAP3[ ]	/* DeltaExceptionP3 */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      30
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[0]	/* SetFPVectorToAxis */
        PUSHB[ ]	/* 1 value pushed */
        13
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 2 values pushed */
        0 2
        RCVT[ ]	/* ReadCVT */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          15
          SWAP[ ]	/* SwapTopStack */
          WS[ ]	/* WriteStore */
          DUP[ ]	/* DuplicateTopStack */
          RCVT[ ]	/* ReadCVT */
          PUSHB[ ]	/* 1 value pushed */
          11
          SWAP[ ]	/* SwapTopStack */
          WS[ ]	/* WriteStore */
          PUSHB[ ]	/* 1 value pushed */
          10
          SWAP[ ]	/* SwapTopStack */
          PUSHB[ ]	/* 1 value pushed */
          3
          ADD[ ]	/* Add */
          WS[ ]	/* WriteStore */
          DUP[ ]	/* DuplicateTopStack */
          ADD[ ]	/* Add */
          PUSHB[ ]	/* 1 value pushed */
          1
          SUB[ ]	/* Subtract */
          PUSHB[ ]	/* 6 values pushed */
          16 16 1 0 14 0
          WS[ ]	/* WriteStore */
          WS[ ]	/* WriteStore */
          ROLL[ ]	/* RollTopThreeStack */
          ADD[ ]	/* Add */
          PUSHB[ ]	/* 2 values pushed */
          18 6
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 1 value pushed */
          117
          CALL[ ]	/* CallFunction */
        ELSE[ ]	/* Else */
          CLEAR[ ]	/* ClearStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      31
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 30
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      32
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        1 30
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      33
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        2 30
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      34
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        3 30
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      35
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        4 30
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      36
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        5 30
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      37
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        6 30
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      38
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        7 30
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      39
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        8 30
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      40
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        9 30
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      44
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        ALIGNRP[ ]	/* AlignRelativePt */
        PUSHB[ ]	/* 1 value pushed */
        1
        ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      45
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        ADD[ ]	/* Add */
        PUSHB[ ]	/* 1 value pushed */
        16
        ADD[ ]	/* Add */
        DUP[ ]	/* DuplicateTopStack */
        RS[ ]	/* ReadStore */
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        1
        ADD[ ]	/* Add */
        RS[ ]	/* ReadStore */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        SUB[ ]	/* Subtract */
        PUSHB[ ]	/* 1 value pushed */
        1
        ADD[ ]	/* Add */
        PUSHB[ ]	/* 1 value pushed */
        44
        LOOPCALL[ ]	/* LoopAndCallFunction */
        POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      46
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        45
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        45
        LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      47
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        GC[1]	/* GetCoordOnPVector */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        11
        RS[ ]	/* ReadStore */
        MUL[ ]	/* Multiply */
        PUSHW[ ]	/* 1 value pushed */
        1024
        DIV[ ]	/* Divide */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          64
          ADD[ ]	/* Add */
        EIF[ ]	/* EndIf */
        FLOOR[ ]	/* Floor */
        PUSHB[ ]	/* 1 value pushed */
        1
        MUL[ ]	/* Multiply */
        ADD[ ]	/* Add */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        SHPIX[ ]	/* ShiftZoneByPixel */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        NEQ[ ]	/* NotEqual */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          GC[1]	/* GetCoordOnPVector */
          DUP[ ]	/* DuplicateTopStack */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          11
          RS[ ]	/* ReadStore */
          MUL[ ]	/* Multiply */
          PUSHW[ ]	/* 1 value pushed */
          1024
          DIV[ ]	/* Divide */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          0
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            64
            ADD[ ]	/* Add */
          EIF[ ]	/* EndIf */
          FLOOR[ ]	/* Floor */
          PUSHB[ ]	/* 1 value pushed */
          1
          MUL[ ]	/* Multiply */
          ADD[ ]	/* Add */
          SWAP[ ]	/* SwapTopStack */
          SUB[ ]	/* Subtract */
          SHPIX[ ]	/* ShiftZoneByPixel */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      48
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[0]	/* SetFPVectorToAxis */
        PUSHB[ ]	/* 2 values pushed */
        0 2
        RCVT[ ]	/* ReadCVT */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          1
          SZPS[ ]	/* SetZonePointerS */
          PUSHB[ ]	/* 1 value pushed */
          47
          LOOPCALL[ ]	/* LoopAndCallFunction */
          PUSHB[ ]	/* 2 values pushed */
          5 1
          SZP2[ ]	/* SetZonePointer2 */
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            IUP[0]	/* InterpolateUntPts */
          EIF[ ]	/* EndIf */
        ELSE[ ]	/* Else */
          CLEAR[ ]	/* ClearStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      49
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[0]	/* SetFPVectorToAxis */
        PUSHB[ ]	/* 1 value pushed */
        13
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 2 values pushed */
        0 2
        RCVT[ ]	/* ReadCVT */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          1
          SZPS[ ]	/* SetZonePointerS */
          PUSHB[ ]	/* 1 value pushed */
          47
          LOOPCALL[ ]	/* LoopAndCallFunction */
          PUSHB[ ]	/* 2 values pushed */
          5 1
          SZP2[ ]	/* SetZonePointer2 */
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            IUP[0]	/* InterpolateUntPts */
          EIF[ ]	/* EndIf */
        ELSE[ ]	/* Else */
          CLEAR[ ]	/* ClearStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      50
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        SHC[1]	/* ShiftContourByLastPt */
        PUSHB[ ]	/* 1 value pushed */
        1
        ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      51
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[0]	/* SetFPVectorToAxis */
        PUSHB[ ]	/* 1 value pushed */
        1
        RCVT[ ]	/* ReadCVT */
        MUL[ ]	/* Multiply */
        PUSHW[ ]	/* 1 value pushed */
        1024
        DIV[ ]	/* Divide */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          64
          ADD[ ]	/* Add */
        EIF[ ]	/* EndIf */
        FLOOR[ ]	/* Floor */
        PUSHB[ ]	/* 1 value pushed */
        1
        MUL[ ]	/* Multiply */
        PUSHB[ ]	/* 1 value pushed */
        1
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        11
        RS[ ]	/* ReadStore */
        MUL[ ]	/* Multiply */
        PUSHW[ ]	/* 1 value pushed */
        1024
        DIV[ ]	/* Divide */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          64
          ADD[ ]	/* Add */
        EIF[ ]	/* EndIf */
        FLOOR[ ]	/* Floor */
        PUSHB[ ]	/* 1 value pushed */
        1
        MUL[ ]	/* Multiply */
        PUSHB[ ]	/* 1 value pushed */
        1
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZPS[ ]	/* SetZonePointerS */
        PUSHB[ ]	/* 5 values pushed */
        0 0 0 0 0
        WCVTP[ ]	/* WriteCVTInPixels */
        MIAP[0]	/* MoveIndirectAbsPt */
        SWAP[ ]	/* SwapTopStack */
        SHPIX[ ]	/* ShiftZoneByPixel */
        PUSHB[ ]	/* 2 values pushed */
        50 1
        SZP2[ ]	/* SetZonePointer2 */
        LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      52
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        ALIGNRP[ ]	/* AlignRelativePt */
        DUP[ ]	/* DuplicateTopStack */
        GC[1]	/* GetCoordOnPVector */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        11
        RS[ ]	/* ReadStore */
        MUL[ ]	/* Multiply */
        PUSHW[ ]	/* 1 value pushed */
        1024
        DIV[ ]	/* Divide */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          64
          ADD[ ]	/* Add */
        EIF[ ]	/* EndIf */
        FLOOR[ ]	/* Floor */
        PUSHB[ ]	/* 1 value pushed */
        1
        MUL[ ]	/* Multiply */
        ADD[ ]	/* Add */
        PUSHB[ ]	/* 1 value pushed */
        0
        RS[ ]	/* ReadStore */
        SUB[ ]	/* Subtract */
        SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      53
      FDEF[ ]	/* FunctionDefinition */
        MDAP[0]	/* MoveDirectAbsPt */
        SLOOP[ ]	/* SetLoopVariable */
        ALIGNRP[ ]	/* AlignRelativePt */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      54
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        ALIGNRP[ ]	/* AlignRelativePt */
        DUP[ ]	/* DuplicateTopStack */
        GC[1]	/* GetCoordOnPVector */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        11
        RS[ ]	/* ReadStore */
        MUL[ ]	/* Multiply */
        PUSHW[ ]	/* 1 value pushed */
        1024
        DIV[ ]	/* Divide */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          64
          ADD[ ]	/* Add */
        EIF[ ]	/* EndIf */
        FLOOR[ ]	/* Floor */
        PUSHB[ ]	/* 1 value pushed */
        1
        MUL[ ]	/* Multiply */
        ADD[ ]	/* Add */
        PUSHB[ ]	/* 1 value pushed */
        0
        RS[ ]	/* ReadStore */
        SUB[ ]	/* Subtract */
        PUSHB[ ]	/* 1 value pushed */
        1
        RS[ ]	/* ReadStore */
        MUL[ ]	/* Multiply */
        SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      55
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        2 0
        SZPS[ ]	/* SetZonePointerS */
        CINDEX[ ]	/* CopyXToTopStack */
        DUP[ ]	/* DuplicateTopStack */
        MDAP[0]	/* MoveDirectAbsPt */
        DUP[ ]	/* DuplicateTopStack */
        GC[1]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        0
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        MD[0]	/* MeasureDistance */
        ROLL[ ]	/* RollTopThreeStack */
        ROLL[ ]	/* RollTopThreeStack */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        DUP[ ]	/* DuplicateTopStack */
        IF[ ]	/* If */
          DIV[ ]	/* Divide */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        1
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 3 values pushed */
        54 1 1
        SZP2[ ]	/* SetZonePointer2 */
        SZP1[ ]	/* SetZonePointer1 */
        LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      56
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZPS[ ]	/* SetZonePointerS */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        PUSHB[ ]	/* 1 value pushed */
        9
        RS[ ]	/* ReadStore */
        CALL[ ]	/* CallFunction */
        NEG[ ]	/* Negate */
        ROLL[ ]	/* RollTopThreeStack */
        MDAP[0]	/* MoveDirectAbsPt */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        ALIGNRP[ ]	/* AlignRelativePt */
        ROLL[ ]	/* RollTopThreeStack */
        SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      57
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZPS[ ]	/* SetZonePointerS */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        DUP[ ]	/* DuplicateTopStack */
        MDAP[0]	/* MoveDirectAbsPt */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 1 value pushed */
        9
        RS[ ]	/* ReadStore */
        CALL[ ]	/* CallFunction */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        96
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          64
          LTEQ[ ]	/* LessThenOrEqual */
          IF[ ]	/* If */
            PUSHB[ ]	/* 4 values pushed */
            2 32 3 32
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 4 values pushed */
            2 38 3 26
          EIF[ ]	/* EndIf */
          WS[ ]	/* WriteStore */
          WS[ ]	/* WriteStore */
          SWAP[ ]	/* SwapTopStack */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          8
          RS[ ]	/* ReadStore */
          DUP[ ]	/* DuplicateTopStack */
          ROLL[ ]	/* RollTopThreeStack */
          SWAP[ ]	/* SwapTopStack */
          GC[1]	/* GetCoordOnPVector */
          SWAP[ ]	/* SwapTopStack */
          GC[1]	/* GetCoordOnPVector */
          SWAP[ ]	/* SwapTopStack */
          SUB[ ]	/* Subtract */
          SWAP[ ]	/* SwapTopStack */
          GC[0]	/* GetCoordOnPVector */
          ADD[ ]	/* Add */
          PUSHB[ ]	/* 1 value pushed */
          4
          RS[ ]	/* ReadStore */
          PUSHB[ ]	/* 1 value pushed */
          2
          DIV[ ]	/* Divide */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          0
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            64
            ADD[ ]	/* Add */
          EIF[ ]	/* EndIf */
          FLOOR[ ]	/* Floor */
          PUSHB[ ]	/* 1 value pushed */
          1
          MUL[ ]	/* Multiply */
          ADD[ ]	/* Add */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          1
          CALL[ ]	/* CallFunction */
          DUP[ ]	/* DuplicateTopStack */
          ROLL[ ]	/* RollTopThreeStack */
          ROLL[ ]	/* RollTopThreeStack */
          SUB[ ]	/* Subtract */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          2
          RS[ ]	/* ReadStore */
          ADD[ ]	/* Add */
          ABS[ ]	/* Absolute */
          SWAP[ ]	/* SwapTopStack */
          PUSHB[ ]	/* 1 value pushed */
          3
          RS[ ]	/* ReadStore */
          SUB[ ]	/* Subtract */
          ABS[ ]	/* Absolute */
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            2
            RS[ ]	/* ReadStore */
            SUB[ ]	/* Subtract */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 1 value pushed */
            3
            RS[ ]	/* ReadStore */
            ADD[ ]	/* Add */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          3
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          2
          DIV[ ]	/* Divide */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          0
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            64
            ADD[ ]	/* Add */
          EIF[ ]	/* EndIf */
          FLOOR[ ]	/* Floor */
          PUSHB[ ]	/* 1 value pushed */
          1
          MUL[ ]	/* Multiply */
          SUB[ ]	/* Subtract */
          SWAP[ ]	/* SwapTopStack */
          DUP[ ]	/* DuplicateTopStack */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          4
          MINDEX[ ]	/* MoveXToTopStack */
          SWAP[ ]	/* SwapTopStack */
          GC[0]	/* GetCoordOnPVector */
          SUB[ ]	/* Subtract */
          SHPIX[ ]	/* ShiftZoneByPixel */
        ELSE[ ]	/* Else */
          SWAP[ ]	/* SwapTopStack */
          PUSHB[ ]	/* 1 value pushed */
          8
          RS[ ]	/* ReadStore */
          GC[0]	/* GetCoordOnPVector */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          8
          RS[ ]	/* ReadStore */
          GC[1]	/* GetCoordOnPVector */
          SWAP[ ]	/* SwapTopStack */
          GC[1]	/* GetCoordOnPVector */
          SWAP[ ]	/* SwapTopStack */
          SUB[ ]	/* Subtract */
          ADD[ ]	/* Add */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          4
          RS[ ]	/* ReadStore */
          PUSHB[ ]	/* 1 value pushed */
          2
          DIV[ ]	/* Divide */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          0
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            64
            ADD[ ]	/* Add */
          EIF[ ]	/* EndIf */
          FLOOR[ ]	/* Floor */
          PUSHB[ ]	/* 1 value pushed */
          1
          MUL[ ]	/* Multiply */
          ADD[ ]	/* Add */
          SWAP[ ]	/* SwapTopStack */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          1
          CALL[ ]	/* CallFunction */
          SWAP[ ]	/* SwapTopStack */
          PUSHB[ ]	/* 1 value pushed */
          4
          RS[ ]	/* ReadStore */
          ADD[ ]	/* Add */
          PUSHB[ ]	/* 1 value pushed */
          1
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 1 value pushed */
          5
          CINDEX[ ]	/* CopyXToTopStack */
          SUB[ ]	/* Subtract */
          PUSHB[ ]	/* 1 value pushed */
          5
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          2
          DIV[ ]	/* Divide */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          0
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            64
            ADD[ ]	/* Add */
          EIF[ ]	/* EndIf */
          FLOOR[ ]	/* Floor */
          PUSHB[ ]	/* 1 value pushed */
          1
          MUL[ ]	/* Multiply */
          PUSHB[ ]	/* 1 value pushed */
          4
          MINDEX[ ]	/* MoveXToTopStack */
          SUB[ ]	/* Subtract */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          ADD[ ]	/* Add */
          ABS[ ]	/* Absolute */
          SWAP[ ]	/* SwapTopStack */
          PUSHB[ ]	/* 1 value pushed */
          3
          CINDEX[ ]	/* CopyXToTopStack */
          ADD[ ]	/* Add */
          ABS[ ]	/* Absolute */
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
          ELSE[ ]	/* Else */
            SWAP[ ]	/* SwapTopStack */
            POP[ ]	/* PopTopStack */
          EIF[ ]	/* EndIf */
          SWAP[ ]	/* SwapTopStack */
          DUP[ ]	/* DuplicateTopStack */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          4
          MINDEX[ ]	/* MoveXToTopStack */
          SWAP[ ]	/* SwapTopStack */
          GC[0]	/* GetCoordOnPVector */
          SUB[ ]	/* Subtract */
          SHPIX[ ]	/* ShiftZoneByPixel */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      58
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZPS[ ]	/* SetZonePointerS */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        5
        MINDEX[ ]	/* MoveXToTopStack */
        DUP[ ]	/* DuplicateTopStack */
        MDAP[0]	/* MoveDirectAbsPt */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        SWAP[ ]	/* SwapTopStack */
        ALIGNRP[ ]	/* AlignRelativePt */
        SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      59
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZPS[ ]	/* SetZonePointerS */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        8
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        GC[0]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        GC[1]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        1
        CALL[ ]	/* CallFunction */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      60
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZPS[ ]	/* SetZonePointerS */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        PUSHB[ ]	/* 1 value pushed */
        0
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          MDAP[0]	/* MoveDirectAbsPt */
          DUP[ ]	/* DuplicateTopStack */
          ALIGNRP[ ]	/* AlignRelativePt */
          SWAP[ ]	/* SwapTopStack */
          POP[ ]	/* PopTopStack */
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          GC[1]	/* GetCoordOnPVector */
          SWAP[ ]	/* SwapTopStack */
          GC[1]	/* GetCoordOnPVector */
          SWAP[ ]	/* SwapTopStack */
          SUB[ ]	/* Subtract */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          5
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          GC[1]	/* GetCoordOnPVector */
          SWAP[ ]	/* SwapTopStack */
          GC[1]	/* GetCoordOnPVector */
          SWAP[ ]	/* SwapTopStack */
          SUB[ ]	/* Subtract */
          PUSHB[ ]	/* 1 value pushed */
          6
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          5
          CINDEX[ ]	/* CopyXToTopStack */
          MD[0]	/* MeasureDistance */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          SUB[ ]	/* Subtract */
          PUSHW[ ]	/* 2 values pushed */
          2048 2048
          MUL[ ]	/* Multiply */
          MUL[ ]	/* Multiply */
          SWAP[ ]	/* SwapTopStack */
          DUP[ ]	/* DuplicateTopStack */
          IF[ ]	/* If */
            DIV[ ]	/* Divide */
          ELSE[ ]	/* Else */
            POP[ ]	/* PopTopStack */
          EIF[ ]	/* EndIf */
          MUL[ ]	/* Multiply */
          PUSHW[ ]	/* 1 value pushed */
          1024
          DIV[ ]	/* Divide */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          0
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            64
            ADD[ ]	/* Add */
          EIF[ ]	/* EndIf */
          FLOOR[ ]	/* Floor */
          PUSHB[ ]	/* 1 value pushed */
          1
          MUL[ ]	/* Multiply */
          ADD[ ]	/* Add */
          SWAP[ ]	/* SwapTopStack */
          MDAP[0]	/* MoveDirectAbsPt */
          SWAP[ ]	/* SwapTopStack */
          DUP[ ]	/* DuplicateTopStack */
          DUP[ ]	/* DuplicateTopStack */
          ALIGNRP[ ]	/* AlignRelativePt */
          ROLL[ ]	/* RollTopThreeStack */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SWAP[ ]	/* SwapTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      61
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZPS[ ]	/* SetZonePointerS */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        8
        RS[ ]	/* ReadStore */
        DUP[ ]	/* DuplicateTopStack */
        MDAP[0]	/* MoveDirectAbsPt */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        DUP[ ]	/* DuplicateTopStack */
        ADD[ ]	/* Add */
        PUSHB[ ]	/* 1 value pushed */
        32
        ADD[ ]	/* Add */
        FLOOR[ ]	/* Floor */
        PUSHB[ ]	/* 1 value pushed */
        2
        DIV[ ]	/* Divide */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          64
          ADD[ ]	/* Add */
        EIF[ ]	/* EndIf */
        FLOOR[ ]	/* Floor */
        PUSHB[ ]	/* 1 value pushed */
        1
        MUL[ ]	/* Multiply */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        ALIGNRP[ ]	/* AlignRelativePt */
        ROLL[ ]	/* RollTopThreeStack */
        SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      62
      FDEF[ ]	/* FunctionDefinition */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        MDAP[0]	/* MoveDirectAbsPt */
        GC[0]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        GC[0]	/* GetCoordOnPVector */
        GT[ ]	/* GreaterThan */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          ALIGNRP[ ]	/* AlignRelativePt */
        EIF[ ]	/* EndIf */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 2 values pushed */
        46 1
        SZP1[ ]	/* SetZonePointer1 */
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      63
      FDEF[ ]	/* FunctionDefinition */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        MDAP[0]	/* MoveDirectAbsPt */
        GC[0]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        GC[0]	/* GetCoordOnPVector */
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          ALIGNRP[ ]	/* AlignRelativePt */
        EIF[ ]	/* EndIf */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 2 values pushed */
        46 1
        SZP1[ ]	/* SetZonePointer1 */
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      64
      FDEF[ ]	/* FunctionDefinition */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        MDAP[0]	/* MoveDirectAbsPt */
        GC[0]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        GC[0]	/* GetCoordOnPVector */
        GT[ ]	/* GreaterThan */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          ALIGNRP[ ]	/* AlignRelativePt */
        EIF[ ]	/* EndIf */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        MDAP[0]	/* MoveDirectAbsPt */
        GC[0]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        GC[0]	/* GetCoordOnPVector */
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          ALIGNRP[ ]	/* AlignRelativePt */
        EIF[ ]	/* EndIf */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 2 values pushed */
        46 1
        SZP1[ ]	/* SetZonePointer1 */
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      65
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        56
        CALL[ ]	/* CallFunction */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        MDAP[0]	/* MoveDirectAbsPt */
        GC[0]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        GC[0]	/* GetCoordOnPVector */
        GT[ ]	/* GreaterThan */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          ALIGNRP[ ]	/* AlignRelativePt */
        EIF[ ]	/* EndIf */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 2 values pushed */
        46 1
        SZP1[ ]	/* SetZonePointer1 */
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      66
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        57
        CALL[ ]	/* CallFunction */
        ROLL[ ]	/* RollTopThreeStack */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        ALIGNRP[ ]	/* AlignRelativePt */
        PUSHB[ ]	/* 1 value pushed */
        4
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        ROLL[ ]	/* RollTopThreeStack */
        SHPIX[ ]	/* ShiftZoneByPixel */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        MDAP[0]	/* MoveDirectAbsPt */
        GC[0]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        GC[0]	/* GetCoordOnPVector */
        GT[ ]	/* GreaterThan */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          ALIGNRP[ ]	/* AlignRelativePt */
        EIF[ ]	/* EndIf */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 2 values pushed */
        46 1
        SZP1[ ]	/* SetZonePointer1 */
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        4
        RS[ ]	/* ReadStore */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 1 value pushed */
        46
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      67
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZPS[ ]	/* SetZonePointerS */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        MINDEX[ ]	/* MoveXToTopStack */
        DUP[ ]	/* DuplicateTopStack */
        MDAP[0]	/* MoveDirectAbsPt */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        PUSHB[ ]	/* 1 value pushed */
        9
        RS[ ]	/* ReadStore */
        CALL[ ]	/* CallFunction */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        ALIGNRP[ ]	/* AlignRelativePt */
        DUP[ ]	/* DuplicateTopStack */
        MDAP[0]	/* MoveDirectAbsPt */
        SWAP[ ]	/* SwapTopStack */
        SHPIX[ ]	/* ShiftZoneByPixel */
        PUSHB[ ]	/* 2 values pushed */
        46 1
        SZP1[ ]	/* SetZonePointer1 */
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      68
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        8 4
        CINDEX[ ]	/* CopyXToTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZPS[ ]	/* SetZonePointerS */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        DUP[ ]	/* DuplicateTopStack */
        MDAP[0]	/* MoveDirectAbsPt */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 1 value pushed */
        9
        RS[ ]	/* ReadStore */
        CALL[ ]	/* CallFunction */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        96
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          64
          LTEQ[ ]	/* LessThenOrEqual */
          IF[ ]	/* If */
            PUSHB[ ]	/* 4 values pushed */
            2 32 3 32
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 4 values pushed */
            2 38 3 26
          EIF[ ]	/* EndIf */
          WS[ ]	/* WriteStore */
          WS[ ]	/* WriteStore */
          SWAP[ ]	/* SwapTopStack */
          DUP[ ]	/* DuplicateTopStack */
          GC[1]	/* GetCoordOnPVector */
          PUSHB[ ]	/* 1 value pushed */
          4
          RS[ ]	/* ReadStore */
          PUSHB[ ]	/* 1 value pushed */
          2
          DIV[ ]	/* Divide */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          0
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            64
            ADD[ ]	/* Add */
          EIF[ ]	/* EndIf */
          FLOOR[ ]	/* Floor */
          PUSHB[ ]	/* 1 value pushed */
          1
          MUL[ ]	/* Multiply */
          ADD[ ]	/* Add */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          1
          CALL[ ]	/* CallFunction */
          DUP[ ]	/* DuplicateTopStack */
          ROLL[ ]	/* RollTopThreeStack */
          ROLL[ ]	/* RollTopThreeStack */
          SUB[ ]	/* Subtract */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          2
          RS[ ]	/* ReadStore */
          ADD[ ]	/* Add */
          ABS[ ]	/* Absolute */
          SWAP[ ]	/* SwapTopStack */
          PUSHB[ ]	/* 1 value pushed */
          3
          RS[ ]	/* ReadStore */
          SUB[ ]	/* Subtract */
          ABS[ ]	/* Absolute */
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            2
            RS[ ]	/* ReadStore */
            SUB[ ]	/* Subtract */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 1 value pushed */
            3
            RS[ ]	/* ReadStore */
            ADD[ ]	/* Add */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          3
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          2
          DIV[ ]	/* Divide */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          0
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            64
            ADD[ ]	/* Add */
          EIF[ ]	/* EndIf */
          FLOOR[ ]	/* Floor */
          PUSHB[ ]	/* 1 value pushed */
          1
          MUL[ ]	/* Multiply */
          SUB[ ]	/* Subtract */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          GC[0]	/* GetCoordOnPVector */
          SUB[ ]	/* Subtract */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SWAP[ ]	/* SwapTopStack */
          DUP[ ]	/* DuplicateTopStack */
          ALIGNRP[ ]	/* AlignRelativePt */
          SWAP[ ]	/* SwapTopStack */
          SHPIX[ ]	/* ShiftZoneByPixel */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          DUP[ ]	/* DuplicateTopStack */
          DUP[ ]	/* DuplicateTopStack */
          GC[0]	/* GetCoordOnPVector */
          SWAP[ ]	/* SwapTopStack */
          GC[1]	/* GetCoordOnPVector */
          PUSHB[ ]	/* 1 value pushed */
          1
          CALL[ ]	/* CallFunction */
          SWAP[ ]	/* SwapTopStack */
          SUB[ ]	/* Subtract */
          SHPIX[ ]	/* ShiftZoneByPixel */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 2 values pushed */
        46 1
        SZP1[ ]	/* SetZonePointer1 */
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      69
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        56
        CALL[ ]	/* CallFunction */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 2 values pushed */
        46 1
        SZP1[ ]	/* SetZonePointer1 */
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      70
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        57
        CALL[ ]	/* CallFunction */
        POP[ ]	/* PopTopStack */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        ALIGNRP[ ]	/* AlignRelativePt */
        PUSHB[ ]	/* 1 value pushed */
        4
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        SWAP[ ]	/* SwapTopStack */
        SHPIX[ ]	/* ShiftZoneByPixel */
        PUSHB[ ]	/* 2 values pushed */
        46 1
        SZP1[ ]	/* SetZonePointer1 */
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        4
        RS[ ]	/* ReadStore */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 1 value pushed */
        46
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      71
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZP2[ ]	/* SetZonePointer2 */
        DUP[ ]	/* DuplicateTopStack */
        GC[1]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        0
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 3 values pushed */
        0 1 1
        SZP2[ ]	/* SetZonePointer2 */
        SZP1[ ]	/* SetZonePointer1 */
        SZP0[ ]	/* SetZonePointer0 */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 1 value pushed */
        52
        LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      72
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZP2[ ]	/* SetZonePointer2 */
        DUP[ ]	/* DuplicateTopStack */
        GC[1]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        0
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 3 values pushed */
        0 1 1
        SZP2[ ]	/* SetZonePointer2 */
        SZP1[ ]	/* SetZonePointer1 */
        SZP0[ ]	/* SetZonePointer0 */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 1 value pushed */
        52
        LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      73
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 1
        SZP1[ ]	/* SetZonePointer1 */
        SZP0[ ]	/* SetZonePointer0 */
        PUSHB[ ]	/* 1 value pushed */
        53
        LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      74
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        55
        LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      75
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZPS[ ]	/* SetZonePointerS */
        RCVT[ ]	/* ReadCVT */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        MDAP[0]	/* MoveDirectAbsPt */
        DUP[ ]	/* DuplicateTopStack */
        GC[0]	/* GetCoordOnPVector */
        ROLL[ ]	/* RollTopThreeStack */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        SHPIX[ ]	/* ShiftZoneByPixel */
        PUSHB[ ]	/* 2 values pushed */
        46 1
        SZP1[ ]	/* SetZonePointer1 */
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      76
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        8
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 1 value pushed */
        75
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      77
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        0 0 68
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      78
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        0 1 68
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      79
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        1 0 68
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      80
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        1 1 68
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      81
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        0 0 69
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      82
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        0 1 69
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      83
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        1 0 69
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      84
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        1 1 69
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      85
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        0 0 65
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      86
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        0 1 65
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      87
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        1 0 65
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      88
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        1 1 65
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      89
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        0 0 67
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      90
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        0 1 67
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      91
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        1 0 67
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      92
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        1 1 67
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      93
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        0 0 70
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      94
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        0 1 70
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      95
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        1 0 70
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      96
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        1 1 70
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      97
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        0 0 66
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      98
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        0 1 66
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      99
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        1 0 66
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      100
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        1 1 66
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      101
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        58
        CALL[ ]	/* CallFunction */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 2 values pushed */
        46 1
        SZP1[ ]	/* SetZonePointer1 */
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      102
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        58
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        62
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      103
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        58
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        63
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      104
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZPS[ ]	/* SetZonePointerS */
        PUSHB[ ]	/* 1 value pushed */
        58
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        64
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      105
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        59
        CALL[ ]	/* CallFunction */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 2 values pushed */
        46 1
        SZP1[ ]	/* SetZonePointer1 */
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      106
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        59
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        62
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      107
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        59
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        63
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      108
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        59
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        64
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      109
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        60
        CALL[ ]	/* CallFunction */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 2 values pushed */
        46 1
        SZP1[ ]	/* SetZonePointer1 */
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      110
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        60
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        62
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      111
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        60
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        63
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      112
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        60
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        64
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      113
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        61
        CALL[ ]	/* CallFunction */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 2 values pushed */
        46 1
        SZP1[ ]	/* SetZonePointer1 */
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      114
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        61
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        62
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      115
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        61
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        63
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      116
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        61
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        64
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      117
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 4 values pushed */
        9 4 2 3
        RCVT[ ]	/* ReadCVT */
        IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
        ELSE[ ]	/* Else */
          SWAP[ ]	/* SwapTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
        WS[ ]	/* WriteStore */
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        8
        NEG[ ]	/* Negate */
        PUSHB[ ]	/* 1 value pushed */
        3
        DEPTH[ ]	/* GetDepthStack */
        LT[ ]	/* LessThan */
        JROT[ ]	/* JumpRelativeOnTrue */
        PUSHB[ ]	/* 2 values pushed */
        5 1
        SZP2[ ]	/* SetZonePointer2 */
        RCVT[ ]	/* ReadCVT */
        IF[ ]	/* If */
          IUP[0]	/* InterpolateUntPts */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
    </assembly>
  </fpgm>
  <prep>
    <assembly>
      SVTCA[0]	/* SetFPVectorToAxis */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHW[ ]	/* 1 value pushed */
      200
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
        PUSHB[ ]	/* 2 values pushed */
        1 1
        INSTCTRL[ ]	/* SetInstrExecControl */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      1
      PUSHW[ ]	/* 2 values pushed */
      2048 2048
      MUL[ ]	/* Multiply */
      WCVTF[ ]	/* WriteCVTInFUnits */
      PUSHB[ ]	/* 2 values pushed */
      0 6
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 5 values pushed */
      68 48 28 3 0
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      0 6
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 8 values pushed */
      55 8 35 8 17 7 3 8
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      0 6
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 8 values pushed */
      65 6 45 6 26 5 3 8
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      0 9
      WS[ ]	/* WriteStore */
      PUSHW[ ]	/* 5 values pushed */
      3584 2304 1152 3 9
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      0 12
      WS[ ]	/* WriteStore */
      PUSHW[ ]	/* 5 values pushed */
      64 64 64 3 9
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      3 0
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 2 values pushed */
      36 1
      GETINFO[ ]	/* GetInfo */
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
        PUSHB[ ]	/* 1 value pushed */
        64
        GETINFO[ ]	/* GetInfo */
        IF[ ]	/* If */
          PUSHB[ ]	/* 2 values pushed */
          3 100
          WCVTP[ ]	/* WriteCVTInPixels */
          PUSHB[ ]	/* 2 values pushed */
          38 1
          GETINFO[ ]	/* GetInfo */
          LTEQ[ ]	/* LessThenOrEqual */
          IF[ ]	/* If */
            PUSHW[ ]	/* 3 values pushed */
            2176 1 1088
            GETINFO[ ]	/* GetInfo */
            MUL[ ]	/* Multiply */
            EQ[ ]	/* Equal */
            IF[ ]	/* If */
              PUSHB[ ]	/* 2 values pushed */
              3 0
              WCVTP[ ]	/* WriteCVTInPixels */
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
        EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 8 values pushed */
      57 8 37 8 19 7 3 12
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHW[ ]	/* 1 value pushed */
      511
      SCANCTRL[ ]	/* ScanConversionControl */
      PUSHB[ ]	/* 1 value pushed */
      4
      SCANTYPE[ ]	/* ScanType */
      PUSHB[ ]	/* 2 values pushed */
      2 0
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 2 values pushed */
      5 100
      WCVTP[ ]	/* WriteCVTInPixels */
    </assembly>
  </prep>
  <cvt>
    <cv index="0" value="0"/>
    <cv index="1" value="0"/>
    <cv index="2" value="0"/>
    <cv index="3" value="0"/>
    <cv index="4" value="0"/>
    <cv index="5" value="0"/>
    <cv index="6" value="0"/>
    <cv index="7" value="0"/>
    <cv index="8" value="0"/>
    <cv index="9" value="0"/>
    <cv index="10" value="0"/>
    <cv index="11" value="0"/>
    <cv index="12" value="0"/>
    <cv index="13" value="0"/>
    <cv index="14" value="0"/>
    <cv index="15" value="163"/>
    <cv index="16" value="163"/>
    <cv index="17" value="116"/>
    <cv index="18" value="116"/>
    <cv index="19" value="693"/>
    <cv index="20" value="0"/>
    <cv index="21" value="531"/>
    <cv index="22" value="0"/>
    <cv index="23" value="-222"/>
    <cv index="24" value="935"/>
    <cv index="25" value="-265"/>
    <cv index="26" value="711"/>
    <cv index="27" value="-17"/>
    <cv index="28" value="549"/>
    <cv index="29" value="-17"/>
    <cv index="30" value="-222"/>
    <cv index="31" value="935"/>
    <cv index="32" value="-265"/>
    <cv index="33" value="163"/>
    <cv index="34" value="163"/>
    <cv index="35" value="116"/>
    <cv index="36" value="116"/>
    <cv index="37" value="693"/>
    <cv index="38" value="0"/>
    <cv index="39" value="758"/>
    <cv index="40" value="531"/>
    <cv index="41" value="-17"/>
    <cv index="42" value="-222"/>
    <cv index="43" value="935"/>
    <cv index="44" value="-265"/>
    <cv index="45" value="711"/>
    <cv index="46" value="-17"/>
    <cv index="47" value="759"/>
    <cv index="48" value="549"/>
    <cv index="49" value="-17"/>
    <cv index="50" value="-222"/>
    <cv index="51" value="935"/>
    <cv index="52" value="-265"/>
    <cv index="53" value="163"/>
    <cv index="54" value="163"/>
    <cv index="55" value="116"/>
    <cv index="56" value="116"/>
    <cv index="57" value="693"/>
    <cv index="58" value="0"/>
    <cv index="59" value="759"/>
    <cv index="60" value="531"/>
    <cv index="61" value="0"/>
    <cv index="62" value="-222"/>
    <cv index="63" value="935"/>
    <cv index="64" value="-265"/>
    <cv index="65" value="711"/>
    <cv index="66" value="-17"/>
    <cv index="67" value="809"/>
    <cv index="68" value="549"/>
    <cv index="69" value="-17"/>
    <cv index="70" value="-222"/>
    <cv index="71" value="935"/>
    <cv index="72" value="-265"/>
  </cvt>
  <loca>
    <!-- The 'loca' table will be calculated by the compiler -->
  </loca>
  <glyf>
    <!-- The xMin, yMin, xMax and yMax values
         will be recalculated by the compiler. -->
    <TTGlyph name=".notdef"/>
    <!-- contains no outline data -->
    <TTGlyph name="A" xMin="-11" yMin="0" xMax="612" yMax="693">
      <contour>
        <pt x="197" y="150" on="1"/>
        <pt x="161" y="0" on="1"/>
        <pt x="-11" y="0" on="1"/>
        <pt x="201" y="693" on="1"/>
        <pt x="400" y="693" on="1"/>
        <pt x="612" y="0" on="1"/>
        <pt x="436" y="0" on="1"/>
        <pt x="400" y="150" on="1"/>
      </contour>
      <contour>
        <pt x="373" y="268" on="1"/>
        <pt x="298" y="575" on="1"/>
        <pt x="223" y="268" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 6 values pushed */
          9 1 4 1 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 22 values pushed */
            6 1 4 5 1 3 0 4 3 98 0 1 1 57 75 2 1 0 0 58 0 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 22 values pushed */
              0 1 4 1 114 6 1 4 5 1 3 0 4 3 98 2 1 0 0 58 0 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 30 values pushed */
              0 1 4 1 114 2 1 0 3 0 115 6 1 4 3 3 4 85 6 1 4 4 3 90 5
              1 3 4 3 78
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 18 values pushed */
          8 8 0 0 8 10 8 10 0 7 0 7 17 17 17 7 8 23
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="B" xMin="56" yMin="0" xMax="571" yMax="693">
      <contour>
        <pt x="571" y="92" on="0"/>
        <pt x="414" y="0" on="0"/>
        <pt x="286" y="0" on="1"/>
        <pt x="56" y="0" on="1"/>
        <pt x="56" y="693" on="1"/>
        <pt x="276" y="693" on="1"/>
        <pt x="395" y="693" on="0"/>
        <pt x="541" y="610" on="0"/>
        <pt x="541" y="516" on="1"/>
        <pt x="541" y="457" on="0"/>
        <pt x="469" y="381" on="0"/>
        <pt x="414" y="367" on="1"/>
        <pt x="480" y="356" on="0"/>
        <pt x="571" y="279" on="0"/>
        <pt x="571" y="203" on="1"/>
      </contour>
      <contour>
        <pt x="376" y="540" on="0"/>
        <pt x="325" y="577" on="0"/>
        <pt x="270" y="577" on="1"/>
        <pt x="220" y="577" on="1"/>
        <pt x="220" y="416" on="1"/>
        <pt x="276" y="416" on="1"/>
        <pt x="328" y="416" on="0"/>
        <pt x="376" y="455" on="0"/>
        <pt x="376" y="499" on="1"/>
      </contour>
      <contour>
        <pt x="402" y="262" on="0"/>
        <pt x="343" y="306" on="0"/>
        <pt x="287" y="306" on="1"/>
        <pt x="220" y="306" on="1"/>
        <pt x="220" y="120" on="1"/>
        <pt x="280" y="120" on="1"/>
        <pt x="337" y="120" on="0"/>
        <pt x="402" y="158" on="0"/>
        <pt x="402" y="210" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 6 values pushed */
          11 1 4 3 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 29 values pushed */
            0 3 0 4 5 3 4 99 0 2 2 1 91 0 1 1 57 75 0 5 5 0 91 0 0
            0 58 0 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 27 values pushed */
              0 1 0 2 3 1 2 99 0 3 0 4 5 3 4 99 0 5 5 0 91 0 0 0 58
              0 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 32 values pushed */
              0 1 0 2 3 1 2 99 0 3 0 4 5 3 4 99 0 5 0 0 5 87 0 5 5
              0 91 0 0 5 0 79
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 9 values pushed */
          33 36 33 42 33 33 6 8 26
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="C" xMin="34" yMin="-17" xMax="589" yMax="711">
      <contour>
        <pt x="430" y="711" on="0"/>
        <pt x="534" y="673" on="0"/>
        <pt x="580" y="635" on="1"/>
        <pt x="500" y="538" on="1"/>
        <pt x="437" y="589" on="0"/>
        <pt x="362" y="589" on="1"/>
        <pt x="291" y="589" on="0"/>
        <pt x="204" y="469" on="0"/>
        <pt x="204" y="348" on="1"/>
        <pt x="204" y="227" on="0"/>
        <pt x="290" y="110" on="0"/>
        <pt x="365" y="110" on="1"/>
        <pt x="411" y="110" on="0"/>
        <pt x="477" y="142" on="0"/>
        <pt x="515" y="172" on="1"/>
        <pt x="589" y="77" on="1"/>
        <pt x="497" y="-17" on="0"/>
        <pt x="356" y="-17" on="1"/>
        <pt x="261" y="-17" on="0"/>
        <pt x="116" y="67" on="0"/>
        <pt x="34" y="232" on="0"/>
        <pt x="34" y="348" on="1"/>
        <pt x="34" y="461" on="0"/>
        <pt x="118" y="625" on="0"/>
        <pt x="266" y="711" on="0"/>
        <pt x="358" y="711" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 15 values pushed */
          2 1 0 3 14 3 2 1 0 15 1 2 1 3 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 22 values pushed */
            0 0 0 3 91 4 1 3 3 65 75 0 1 1 2 91 0 2 2 66 2 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 20 values pushed */
              4 1 3 0 0 1 3 0 99 0 1 1 2 91 0 2 2 66 2 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 25 values pushed */
              4 1 3 0 0 1 3 0 99 0 1 2 2 1 87 0 1 1 2 91 0 2 1 2 79
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 12 values pushed */
          0 0 0 25 0 24 36 36 36 5 8 23
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="D" xMin="52" yMin="0" xMax="574" yMax="693">
      <contour>
        <pt x="574" y="0" on="0"/>
        <pt x="239" y="0" on="1"/>
        <pt x="52" y="0" on="1"/>
        <pt x="52" y="693" on="1"/>
        <pt x="227" y="693" on="1"/>
        <pt x="384" y="693" on="0"/>
        <pt x="574" y="546" on="0"/>
        <pt x="574" y="350" on="1"/>
      </contour>
      <contour>
        <pt x="405" y="479" on="0"/>
        <pt x="325" y="574" on="0"/>
        <pt x="251" y="574" on="1"/>
        <pt x="216" y="574" on="1"/>
        <pt x="216" y="119" on="1"/>
        <pt x="251" y="119" on="1"/>
        <pt x="326" y="119" on="0"/>
        <pt x="405" y="222" on="0"/>
        <pt x="405" y="350" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 21 values pushed */
            0 2 2 1 91 0 1 1 57 75 0 3 3 0 91 0 0 0 58 0 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 19 values pushed */
              0 1 0 2 3 1 2 99 0 3 3 0 91 0 0 0 58 0 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 24 values pushed */
              0 1 0 2 3 1 2 99 0 3 0 0 3 87 0 3 3 0 91 0 0 3 0 79
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 7 values pushed */
          33 36 33 32 4 8 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="E" xMin="93" yMin="0" xMax="546" yMax="693">
      <contour>
        <pt x="257" y="409" on="1"/>
        <pt x="497" y="409" on="1"/>
        <pt x="497" y="295" on="1"/>
        <pt x="257" y="295" on="1"/>
        <pt x="257" y="118" on="1"/>
        <pt x="546" y="118" on="1"/>
        <pt x="546" y="0" on="1"/>
        <pt x="93" y="0" on="1"/>
        <pt x="93" y="693" on="1"/>
        <pt x="546" y="693" on="1"/>
        <pt x="529" y="576" on="1"/>
        <pt x="257" y="576" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 29 values pushed */
            0 0 0 1 2 0 1 97 0 5 5 4 89 0 4 4 57 75 0 2 2 3 89 0 3
            3 58 3 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 27 values pushed */
              0 4 0 5 0 4 5 97 0 0 0 1 2 0 1 97 0 2 2 3 89 0 3 3 58
              3 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 32 values pushed */
              0 4 0 5 0 4 5 97 0 0 0 1 2 0 1 97 0 2 3 3 2 85 0 2 2
              3 89 0 3 2 3 77
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 9 values pushed */
          17 17 17 17 17 16 6 8 26
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="F" xMin="108" yMin="0" xMax="563" yMax="693">
      <contour>
        <pt x="273" y="393" on="1"/>
        <pt x="515" y="393" on="1"/>
        <pt x="515" y="275" on="1"/>
        <pt x="273" y="275" on="1"/>
        <pt x="273" y="0" on="1"/>
        <pt x="108" y="0" on="1"/>
        <pt x="108" y="693" on="1"/>
        <pt x="563" y="693" on="1"/>
        <pt x="547" y="576" on="1"/>
        <pt x="273" y="576" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 24 values pushed */
            0 0 0 1 2 0 1 97 0 4 4 3 89 0 3 3 57 75 0 2 2 58 2 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 22 values pushed */
              0 3 0 4 0 3 4 97 0 0 0 1 2 0 1 97 0 2 2 58 2 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 29 values pushed */
              0 2 1 2 115 0 3 0 4 0 3 4 97 0 0 1 1 0 85 0 0 0 1 89 0
              1 0 1 77
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 8 values pushed */
          17 17 17 17 16 5 8 25
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="G" xMin="23" yMin="-17" xMax="568" yMax="711">
      <contour>
        <pt x="178" y="-17" on="0"/>
        <pt x="23" y="170" on="0"/>
        <pt x="23" y="348" on="1"/>
        <pt x="23" y="463" on="0"/>
        <pt x="107" y="627" on="0"/>
        <pt x="254" y="711" on="0"/>
        <pt x="345" y="711" on="1"/>
        <pt x="416" y="711" on="0"/>
        <pt x="521" y="666" on="0"/>
        <pt x="565" y="625" on="1"/>
        <pt x="479" y="536" on="1"/>
        <pt x="446" y="565" on="0"/>
        <pt x="389" y="591" on="0"/>
        <pt x="353" y="591" on="1"/>
        <pt x="278" y="591" on="0"/>
        <pt x="192" y="472" on="0"/>
        <pt x="192" y="347" on="1"/>
        <pt x="192" y="213" on="0"/>
        <pt x="256" y="103" on="0"/>
        <pt x="327" y="103" on="1"/>
        <pt x="374" y="103" on="0"/>
        <pt x="413" y="124" on="1"/>
        <pt x="413" y="283" on="1"/>
        <pt x="326" y="283" on="1"/>
        <pt x="310" y="397" on="1"/>
        <pt x="568" y="397" on="1"/>
        <pt x="568" y="53" on="1"/>
        <pt x="454" y="-17" on="0"/>
        <pt x="326" y="-17" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 18 values pushed */
          9 1 1 0 10 1 4 1 21 1 2 3 26 1 5 2 4 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 30 values pushed */
            0 4 0 3 2 4 3 97 0 1 1 0 91 0 0 0 65 75 0 2 2 5 91 6 1
            5 5 66 5 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 28 values pushed */
              0 0 0 1 4 0 1 99 0 4 0 3 2 4 3 97 0 2 2 5 91 6 1 5 5
              66 5 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 33 values pushed */
              0 0 0 1 4 0 1 99 0 4 0 3 2 4 3 97 0 2 5 5 2 87 0 2 2
              5 91 6 1 5 2 5 79
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 14 values pushed */
          0 0 0 28 0 27 17 18 36 37 37 7 8 25
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="H" xMin="52" yMin="0" xMax="548" yMax="693">
      <contour>
        <pt x="384" y="292" on="1"/>
        <pt x="216" y="292" on="1"/>
        <pt x="216" y="0" on="1"/>
        <pt x="52" y="0" on="1"/>
        <pt x="52" y="693" on="1"/>
        <pt x="216" y="693" on="1"/>
        <pt x="216" y="427" on="1"/>
        <pt x="384" y="427" on="1"/>
        <pt x="384" y="693" on="1"/>
        <pt x="548" y="693" on="1"/>
        <pt x="548" y="0" on="1"/>
        <pt x="384" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 21 values pushed */
            0 3 0 0 1 3 0 97 4 1 2 2 57 75 5 1 1 1 58 1 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 21 values pushed */
              0 3 0 0 1 3 0 97 4 1 2 2 1 89 5 1 1 1 58 1 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 27 values pushed */
              4 1 2 3 1 2 85 0 3 0 0 1 3 0 97 4 1 2 2 1 89 5 1 1 2
              1 77
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 9 values pushed */
          17 17 17 17 17 16 6 8 26
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="I" xMin="75" yMin="0" xMax="525" yMax="693">
      <contour>
        <pt x="525" y="573" on="1"/>
        <pt x="382" y="573" on="1"/>
        <pt x="382" y="121" on="1"/>
        <pt x="525" y="121" on="1"/>
        <pt x="525" y="0" on="1"/>
        <pt x="75" y="0" on="1"/>
        <pt x="75" y="121" on="1"/>
        <pt x="218" y="121" on="1"/>
        <pt x="218" y="573" on="1"/>
        <pt x="75" y="573" on="1"/>
        <pt x="75" y="693" on="1"/>
        <pt x="525" y="693" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 23 values pushed */
            4 1 0 0 5 89 0 5 5 57 75 3 1 1 1 2 89 0 2 2 58 2 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 21 values pushed */
              0 5 4 1 0 1 5 0 97 3 1 1 1 2 89 0 2 2 58 2 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 27 values pushed */
              0 5 4 1 0 1 5 0 97 3 1 1 2 2 1 85 3 1 1 1 2 89 0 2 1
              2 77
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 9 values pushed */
          17 17 17 17 17 16 6 8 26
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="J" xMin="39" yMin="-15" xMax="527" yMax="693">
      <contour>
        <pt x="527" y="249" on="1"/>
        <pt x="527" y="127" on="0"/>
        <pt x="380" y="-15" on="0"/>
        <pt x="248" y="-15" on="1"/>
        <pt x="184" y="-15" on="0"/>
        <pt x="87" y="17" on="0"/>
        <pt x="39" y="50" on="1"/>
        <pt x="101" y="151" on="1"/>
        <pt x="137" y="127" on="0"/>
        <pt x="199" y="107" on="0"/>
        <pt x="239" y="107" on="1"/>
        <pt x="294" y="107" on="0"/>
        <pt x="363" y="178" on="0"/>
        <pt x="363" y="248" on="1"/>
        <pt x="363" y="573" on="1"/>
        <pt x="151" y="573" on="1"/>
        <pt x="151" y="693" on="1"/>
        <pt x="527" y="693" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 10 values pushed */
          7 1 1 2 6 1 0 1 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 21 values pushed */
            0 2 2 3 89 0 3 3 57 75 0 1 1 0 91 0 0 0 66 0 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 19 values pushed */
              0 3 0 2 1 3 2 97 0 1 1 0 91 0 0 0 66 0 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 24 values pushed */
              0 3 0 2 1 3 2 97 0 1 0 0 1 87 0 1 1 0 91 0 0 1 0 79
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 7 values pushed */
          17 19 37 34 4 8 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="K" xMin="59" yMin="0" xMax="608" yMax="693">
      <contour>
        <pt x="59" y="0" on="1"/>
        <pt x="59" y="693" on="1"/>
        <pt x="223" y="693" on="1"/>
        <pt x="223" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="417" y="693" on="1"/>
        <pt x="589" y="693" on="1"/>
        <pt x="393" y="382" on="1"/>
        <pt x="608" y="0" on="1"/>
        <pt x="419" y="0" on="1"/>
        <pt x="228" y="370" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 7 values pushed */
          9 6 2 1 0 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 14 values pushed */
            2 1 0 0 57 75 3 4 2 1 1 58 1 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 14 values pushed */
              2 1 0 0 1 89 3 4 2 1 1 58 1 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 20 values pushed */
              2 1 0 1 1 0 85 2 1 0 0 1 89 3 4 2 1 0 1 77
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 14 values pushed */
          0 0 8 7 5 4 0 3 0 3 17 5 8 21
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="L" xMin="93" yMin="0" xMax="557" yMax="693">
      <contour>
        <pt x="93" y="693" on="1"/>
        <pt x="257" y="693" on="1"/>
        <pt x="257" y="130" on="1"/>
        <pt x="557" y="130" on="1"/>
        <pt x="541" y="0" on="1"/>
        <pt x="93" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 16 values pushed */
            0 0 0 57 75 0 1 1 2 90 0 2 2 58 2 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 16 values pushed */
              0 0 1 0 114 0 1 1 2 90 0 2 2 58 2 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 21 values pushed */
              0 0 1 0 114 0 1 2 2 1 85 0 1 1 2 90 0 2 1 2 78
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 6 values pushed */
          17 17 16 3 8 23
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="M" xMin="17" yMin="0" xMax="583" yMax="693">
      <contour>
        <pt x="583" y="0" on="1"/>
        <pt x="439" y="0" on="1"/>
        <pt x="431" y="297" on="1"/>
        <pt x="430" y="319" on="0"/>
        <pt x="430" y="357" on="1"/>
        <pt x="430" y="407" on="0"/>
        <pt x="436" y="502" on="0"/>
        <pt x="440" y="554" on="1"/>
        <pt x="362" y="118" on="1"/>
        <pt x="238" y="118" on="1"/>
        <pt x="153" y="554" on="1"/>
        <pt x="164" y="439" on="0"/>
        <pt x="164" y="347" on="1"/>
        <pt x="163" y="294" on="1"/>
        <pt x="158" y="0" on="1"/>
        <pt x="17" y="0" on="1"/>
        <pt x="56" y="693" on="1"/>
        <pt x="225" y="693" on="1"/>
        <pt x="302" y="245" on="1"/>
        <pt x="375" y="693" on="1"/>
        <pt x="544" y="693" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          18 10 7 3 1 3 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 21 values pushed */
            0 1 3 0 3 1 0 112 4 1 3 3 57 75 2 1 0 0 58 0 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 21 values pushed */
              0 1 3 0 3 1 0 112 4 1 3 3 0 89 2 1 0 0 58 0 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 27 values pushed */
              0 1 3 0 3 1 0 112 4 1 3 1 0 3 85 4 1 3 3 0 89 2 1 0 3
              0 77
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 8 values pushed */
          18 17 21 23 16 5 8 25
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="N" xMin="52" yMin="0" xMax="548" yMax="693">
      <contour>
        <pt x="167" y="557" on="1"/>
        <pt x="177" y="481" on="0"/>
        <pt x="191" y="340" on="0"/>
        <pt x="191" y="261" on="1"/>
        <pt x="191" y="0" on="1"/>
        <pt x="52" y="0" on="1"/>
        <pt x="52" y="693" on="1"/>
        <pt x="257" y="693" on="1"/>
        <pt x="433" y="138" on="1"/>
        <pt x="409" y="292" on="0"/>
        <pt x="409" y="428" on="1"/>
        <pt x="409" y="693" on="1"/>
        <pt x="548" y="693" on="1"/>
        <pt x="548" y="0" on="1"/>
        <pt x="349" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 6 values pushed */
          8 1 0 1 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 13 values pushed */
            2 1 1 1 57 75 3 1 0 0 58 0 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 13 values pushed */
              2 1 1 1 0 89 3 1 0 0 58 0 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 19 values pushed */
              2 1 1 0 0 1 85 2 1 1 1 0 89 3 1 0 1 0 77
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 7 values pushed */
          17 20 17 20 4 8 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="O" xMin="23" yMin="-17" xMax="577" yMax="711">
      <contour>
        <pt x="577" y="178" on="0"/>
        <pt x="434" y="-17" on="0"/>
        <pt x="300" y="-17" on="1"/>
        <pt x="165" y="-17" on="0"/>
        <pt x="23" y="176" on="0"/>
        <pt x="23" y="347" on="1"/>
        <pt x="23" y="516" on="0"/>
        <pt x="166" y="711" on="0"/>
        <pt x="300" y="711" on="1"/>
        <pt x="435" y="711" on="0"/>
        <pt x="577" y="518" on="0"/>
        <pt x="577" y="347" on="1"/>
      </contour>
      <contour>
        <pt x="409" y="475" on="0"/>
        <pt x="358" y="591" on="0"/>
        <pt x="300" y="591" on="1"/>
        <pt x="242" y="591" on="0"/>
        <pt x="191" y="475" on="0"/>
        <pt x="191" y="347" on="1"/>
        <pt x="191" y="219" on="0"/>
        <pt x="242" y="103" on="0"/>
        <pt x="300" y="103" on="1"/>
        <pt x="359" y="103" on="0"/>
        <pt x="409" y="219" on="0"/>
        <pt x="409" y="347" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 21 values pushed */
            0 2 2 1 91 0 1 1 65 75 0 3 3 0 91 0 0 0 66 0 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 19 values pushed */
              0 1 0 2 3 1 2 99 0 3 3 0 91 0 0 0 66 0 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 24 values pushed */
              0 1 0 2 3 1 2 99 0 3 0 0 3 87 0 3 3 0 91 0 0 3 0 79
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 7 values pushed */
          36 36 36 33 4 8 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="P" xMin="62" yMin="0" xMax="576" yMax="693">
      <contour>
        <pt x="576" y="350" on="0"/>
        <pt x="429" y="231" on="0"/>
        <pt x="302" y="231" on="1"/>
        <pt x="226" y="231" on="1"/>
        <pt x="226" y="0" on="1"/>
        <pt x="62" y="0" on="1"/>
        <pt x="62" y="693" on="1"/>
        <pt x="280" y="693" on="1"/>
        <pt x="424" y="693" on="0"/>
        <pt x="576" y="580" on="0"/>
        <pt x="576" y="467" on="1"/>
      </contour>
      <contour>
        <pt x="408" y="576" on="0"/>
        <pt x="283" y="576" on="1"/>
        <pt x="226" y="576" on="1"/>
        <pt x="226" y="349" on="1"/>
        <pt x="291" y="349" on="1"/>
        <pt x="347" y="349" on="0"/>
        <pt x="408" y="407" on="0"/>
        <pt x="408" y="467" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 24 values pushed */
            0 4 0 0 1 4 0 99 0 3 3 2 91 0 2 2 57 75 0 1 1 58 1 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 22 values pushed */
              0 2 0 3 4 2 3 99 0 4 0 0 1 4 0 99 0 1 1 58 1 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 29 values pushed */
              0 1 0 1 115 0 2 0 3 4 2 3 99 0 4 0 0 4 87 0 4 4 0 91 0
              0 4 0 79
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 8 values pushed */
          33 35 33 17 33 5 8 25
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="Q" xMin="32" yMin="-173" xMax="634" yMax="711">
      <contour>
        <pt x="574" y="114" on="0"/>
        <pt x="429" y="40" on="1"/>
        <pt x="513" y="26" on="0"/>
        <pt x="606" y="-46" on="0"/>
        <pt x="634" y="-127" on="1"/>
        <pt x="500" y="-173" on="1"/>
        <pt x="476" y="-116" on="0"/>
        <pt x="426" y="-49" on="0"/>
        <pt x="349" y="-14" on="0"/>
        <pt x="290" y="-14" on="1"/>
        <pt x="162" y="-14" on="0"/>
        <pt x="32" y="175" on="0"/>
        <pt x="32" y="347" on="1"/>
        <pt x="32" y="517" on="0"/>
        <pt x="170" y="711" on="0"/>
        <pt x="303" y="711" on="1"/>
        <pt x="437" y="711" on="0"/>
        <pt x="574" y="519" on="0"/>
        <pt x="574" y="347" on="1"/>
      </contour>
      <contour>
        <pt x="404" y="435" on="0"/>
        <pt x="386" y="540" on="0"/>
        <pt x="342" y="590" on="0"/>
        <pt x="303" y="590" on="1"/>
        <pt x="264" y="590" on="0"/>
        <pt x="220" y="539" on="0"/>
        <pt x="202" y="434" on="0"/>
        <pt x="202" y="347" on="1"/>
        <pt x="202" y="217" on="0"/>
        <pt x="247" y="103" on="0"/>
        <pt x="303" y="103" on="1"/>
        <pt x="343" y="103" on="0"/>
        <pt x="386" y="154" on="0"/>
        <pt x="404" y="259" on="0"/>
        <pt x="404" y="347" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 11 values pushed */
          1 1 0 3 1 74 5 4 2 0 71
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 21 values pushed */
            0 2 2 1 91 0 1 1 65 75 0 3 3 0 91 0 0 0 66 0 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 19 values pushed */
              0 1 0 2 3 1 2 99 0 3 3 0 91 0 0 0 66 0 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 24 values pushed */
              0 1 0 2 3 1 2 99 0 3 0 0 3 87 0 3 3 0 91 0 0 3 0 79
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 7 values pushed */
          37 37 36 40 4 8 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="R" xMin="58" yMin="0" xMax="604" yMax="693">
      <contour>
        <pt x="561" y="412" on="0"/>
        <pt x="486" y="317" on="0"/>
        <pt x="423" y="292" on="1"/>
        <pt x="604" y="0" on="1"/>
        <pt x="418" y="0" on="1"/>
        <pt x="268" y="265" on="1"/>
        <pt x="222" y="265" on="1"/>
        <pt x="222" y="0" on="1"/>
        <pt x="58" y="0" on="1"/>
        <pt x="58" y="693" on="1"/>
        <pt x="276" y="693" on="1"/>
        <pt x="419" y="693" on="0"/>
        <pt x="561" y="589" on="0"/>
        <pt x="561" y="482" on="1"/>
      </contour>
      <contour>
        <pt x="392" y="532" on="0"/>
        <pt x="335" y="578" on="0"/>
        <pt x="276" y="578" on="1"/>
        <pt x="222" y="578" on="1"/>
        <pt x="222" y="378" on="1"/>
        <pt x="283" y="378" on="1"/>
        <pt x="337" y="378" on="0"/>
        <pt x="392" y="428" on="0"/>
        <pt x="392" y="482" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 6 values pushed */
          2 1 1 5 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 25 values pushed */
            0 5 0 1 0 5 1 97 0 4 4 3 91 0 3 3 57 75 2 1 0 0 58 0 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 23 values pushed */
              0 3 0 4 5 3 4 99 0 5 0 1 0 5 1 97 2 1 0 0 58 0 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 30 values pushed */
              2 1 0 1 0 115 0 3 0 4 5 3 4 99 0 5 1 1 5 87 0 5 5 1 89
              0 1 5 1 77
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 9 values pushed */
          33 36 33 17 17 19 6 8 26
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="S" xMin="12" yMin="-17" xMax="568" yMax="711">
      <contour>
        <pt x="568" y="138" on="0"/>
        <pt x="500" y="38" on="0"/>
        <pt x="373" y="-17" on="0"/>
        <pt x="286" y="-17" on="1"/>
        <pt x="114" y="-17" on="0"/>
        <pt x="12" y="83" on="1"/>
        <pt x="95" y="175" on="1"/>
        <pt x="174" y="105" on="0"/>
        <pt x="282" y="105" on="1"/>
        <pt x="334" y="105" on="0"/>
        <pt x="397" y="150" on="0"/>
        <pt x="397" y="190" on="1"/>
        <pt x="397" y="228" on="0"/>
        <pt x="344" y="271" on="0"/>
        <pt x="272" y="293" on="1"/>
        <pt x="150" y="330" on="0"/>
        <pt x="48" y="430" on="0"/>
        <pt x="48" y="509" on="1"/>
        <pt x="48" y="571" on="0"/>
        <pt x="117" y="663" on="0"/>
        <pt x="236" y="711" on="0"/>
        <pt x="309" y="711" on="1"/>
        <pt x="462" y="711" on="0"/>
        <pt x="557" y="621" on="1"/>
        <pt x="480" y="532" on="1"/>
        <pt x="445" y="561" on="0"/>
        <pt x="364" y="590" on="0"/>
        <pt x="321" y="590" on="1"/>
        <pt x="273" y="590" on="0"/>
        <pt x="218" y="555" on="0"/>
        <pt x="218" y="522" on="1"/>
        <pt x="218" y="500" on="0"/>
        <pt x="243" y="470" on="0"/>
        <pt x="301" y="444" on="0"/>
        <pt x="359" y="426" on="1"/>
        <pt x="465" y="394" on="0"/>
        <pt x="568" y="293" on="0"/>
        <pt x="568" y="203" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 15 values pushed */
          23 1 3 2 24 6 2 1 3 5 1 0 1 3 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 21 values pushed */
            0 3 3 2 91 0 2 2 65 75 0 1 1 0 91 0 0 0 66 0 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 19 values pushed */
              0 2 0 3 1 2 3 99 0 1 1 0 91 0 0 0 66 0 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 24 values pushed */
              0 2 0 3 1 2 3 99 0 1 0 0 1 87 0 1 1 0 91 0 0 1 0 79
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 7 values pushed */
          36 43 35 34 4 8 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="T" xMin="22" yMin="0" xMax="583" yMax="693">
      <contour>
        <pt x="381" y="0" on="1"/>
        <pt x="217" y="0" on="1"/>
        <pt x="217" y="567" on="1"/>
        <pt x="22" y="567" on="1"/>
        <pt x="22" y="693" on="1"/>
        <pt x="583" y="693" on="1"/>
        <pt x="567" y="567" on="1"/>
        <pt x="381" y="567" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 17 values pushed */
            3 1 1 1 2 89 0 2 2 57 75 0 0 0 58 0 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 15 values pushed */
              0 2 3 1 1 0 2 1 97 0 0 0 58 0 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 22 values pushed */
              0 0 1 0 115 0 2 1 1 2 85 0 2 2 1 89 3 1 1 2 1 77
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 7 values pushed */
          17 17 17 16 4 8 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="U" xMin="42" yMin="-17" xMax="558" yMax="693">
      <contour>
        <pt x="558" y="232" on="1"/>
        <pt x="558" y="160" on="0"/>
        <pt x="500" y="47" on="0"/>
        <pt x="384" y="-17" on="0"/>
        <pt x="300" y="-17" on="1"/>
        <pt x="174" y="-17" on="0"/>
        <pt x="42" y="117" on="0"/>
        <pt x="42" y="232" on="1"/>
        <pt x="42" y="693" on="1"/>
        <pt x="207" y="693" on="1"/>
        <pt x="207" y="293" on="1"/>
        <pt x="207" y="226" on="0"/>
        <pt x="221" y="146" on="0"/>
        <pt x="262" y="105" on="0"/>
        <pt x="300" y="105" on="1"/>
        <pt x="338" y="105" on="0"/>
        <pt x="379" y="146" on="0"/>
        <pt x="393" y="226" on="0"/>
        <pt x="393" y="293" on="1"/>
        <pt x="393" y="693" on="1"/>
        <pt x="558" y="693" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 17 values pushed */
            3 1 1 1 57 75 0 2 2 0 92 0 0 0 66 0 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 17 values pushed */
              3 1 1 2 1 114 0 2 2 0 92 0 0 0 66 0 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 22 values pushed */
              3 1 1 2 1 114 0 2 0 0 2 87 0 2 2 0 92 0 0 2 0 80
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 7 values pushed */
          20 36 19 35 4 8 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="V" xMin="0" yMin="0" xMax="601" yMax="693">
      <contour>
        <pt x="433" y="693" on="1"/>
        <pt x="601" y="693" on="1"/>
        <pt x="401" y="0" on="1"/>
        <pt x="199" y="0" on="1"/>
        <pt x="0" y="693" on="1"/>
        <pt x="174" y="693" on="1"/>
        <pt x="303" y="128" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 6 values pushed */
          6 1 1 0 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 12 values pushed */
            2 1 0 0 57 75 0 1 1 58 1 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 12 values pushed */
              2 1 0 1 0 114 0 1 1 58 1 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 10 values pushed */
              2 1 0 1 0 114 0 1 1 105
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 6 values pushed */
          17 17 16 3 8 23
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="W" xMin="-3" yMin="0" xMax="603" yMax="693">
      <contour>
        <pt x="522" y="0" on="1"/>
        <pt x="352" y="0" on="1"/>
        <pt x="301" y="496" on="1"/>
        <pt x="245" y="0" on="1"/>
        <pt x="72" y="0" on="1"/>
        <pt x="-3" y="693" on="1"/>
        <pt x="150" y="693" on="1"/>
        <pt x="174" y="140" on="1"/>
        <pt x="231" y="613" on="1"/>
        <pt x="373" y="613" on="1"/>
        <pt x="426" y="140" on="1"/>
        <pt x="460" y="693" on="1"/>
        <pt x="603" y="693" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          10 7 2 3 0 3 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 18 values pushed */
            4 1 2 2 57 75 0 3 3 0 90 1 1 0 0 58 0 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 18 values pushed */
              4 1 2 3 2 114 0 3 3 0 90 1 1 0 0 58 0 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 23 values pushed */
              4 1 2 3 2 114 0 3 0 0 3 85 0 3 3 0 90 1 1 0 3 0 78
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 8 values pushed */
          18 18 17 18 16 5 8 25
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="X" xMin="4" yMin="0" xMax="597" yMax="693">
      <contour>
        <pt x="196" y="693" on="1"/>
        <pt x="300" y="471" on="1"/>
        <pt x="407" y="693" on="1"/>
        <pt x="580" y="693" on="1"/>
        <pt x="396" y="375" on="1"/>
        <pt x="597" y="0" on="1"/>
        <pt x="420" y="0" on="1"/>
        <pt x="298" y="264" on="1"/>
        <pt x="178" y="0" on="1"/>
        <pt x="4" y="0" on="1"/>
        <pt x="200" y="368" on="1"/>
        <pt x="19" y="693" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 9 values pushed */
          10 7 4 1 4 1 0 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 14 values pushed */
            4 3 2 0 0 57 75 2 1 1 1 58 1 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 14 values pushed */
              4 3 2 0 0 1 89 2 1 1 1 58 1 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 21 values pushed */
              4 3 2 0 1 1 0 85 4 3 2 0 0 1 89 2 1 1 0 1 77
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 12 values pushed */
          0 0 0 11 0 11 18 18 18 5 8 23
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="Y" xMin="-8" yMin="0" xMax="608" yMax="693">
      <contour>
        <pt x="382" y="0" on="1"/>
        <pt x="218" y="0" on="1"/>
        <pt x="218" y="259" on="1"/>
        <pt x="-8" y="693" on="1"/>
        <pt x="172" y="693" on="1"/>
        <pt x="303" y="395" on="1"/>
        <pt x="435" y="693" on="1"/>
        <pt x="608" y="693" on="1"/>
        <pt x="382" y="260" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          8 5 2 3 0 1 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 12 values pushed */
            2 1 1 1 57 75 0 0 0 58 0 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 12 values pushed */
              2 1 1 0 1 114 0 0 0 58 0 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 10 values pushed */
              2 1 1 0 1 114 0 0 0 105
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 6 values pushed */
          18 18 16 3 8 23
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="Z" xMin="39" yMin="0" xMax="562" yMax="693">
      <contour>
        <pt x="562" y="131" on="1"/>
        <pt x="545" y="0" on="1"/>
        <pt x="39" y="0" on="1"/>
        <pt x="39" y="123" on="1"/>
        <pt x="368" y="566" on="1"/>
        <pt x="75" y="566" on="1"/>
        <pt x="75" y="693" on="1"/>
        <pt x="554" y="693" on="1"/>
        <pt x="554" y="569" on="1"/>
        <pt x="232" y="131" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 10 values pushed */
          8 1 1 2 3 1 0 3 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 22 values pushed */
            0 1 1 2 89 0 2 2 57 75 4 1 3 3 0 89 0 0 0 58 0 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 20 values pushed */
              0 2 0 1 3 2 1 97 4 1 3 3 0 89 0 0 0 58 0 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 26 values pushed */
              0 2 0 1 3 2 1 97 4 1 3 0 0 3 85 4 1 3 3 0 89 0 0 3 0
              77
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 12 values pushed */
          0 0 0 9 0 9 17 18 17 5 8 23
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="a" xMin="35" yMin="-17" xMax="552" yMax="549">
      <contour>
        <pt x="517" y="124" on="0"/>
        <pt x="533" y="96" on="0"/>
        <pt x="552" y="89" on="1"/>
        <pt x="519" y="-15" on="1"/>
        <pt x="471" y="-10" on="0"/>
        <pt x="407" y="23" on="0"/>
        <pt x="389" y="55" on="1"/>
        <pt x="359" y="20" on="0"/>
        <pt x="267" y="-17" on="0"/>
        <pt x="215" y="-17" on="1"/>
        <pt x="133" y="-17" on="0"/>
        <pt x="35" y="76" on="0"/>
        <pt x="35" y="150" on="1"/>
        <pt x="35" y="236" on="0"/>
        <pt x="171" y="331" on="0"/>
        <pt x="294" y="331" on="1"/>
        <pt x="365" y="331" on="1"/>
        <pt x="365" y="350" on="1"/>
        <pt x="365" y="432" on="0"/>
        <pt x="260" y="432" on="1"/>
        <pt x="233" y="432" on="0"/>
        <pt x="152" y="417" on="0"/>
        <pt x="114" y="404" on="1"/>
        <pt x="78" y="509" on="1"/>
        <pt x="129" y="528" on="0"/>
        <pt x="240" y="549" on="0"/>
        <pt x="285" y="549" on="1"/>
        <pt x="517" y="549" on="0"/>
        <pt x="517" y="361" on="1"/>
        <pt x="517" y="153" on="1"/>
      </contour>
      <contour>
        <pt x="296" y="96" on="0"/>
        <pt x="351" y="127" on="0"/>
        <pt x="365" y="154" on="1"/>
        <pt x="365" y="241" on="1"/>
        <pt x="326" y="241" on="1"/>
        <pt x="198" y="241" on="0"/>
        <pt x="198" y="161" on="1"/>
        <pt x="198" y="130" on="0"/>
        <pt x="235" y="96" on="0"/>
        <pt x="269" y="96" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 20 values pushed */
          23 1 2 3 22 1 1 2 32 1 5 4 6 3 2 3 0 5 4 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 30 values pushed */
            0 1 0 4 5 1 4 99 0 2 2 3 91 0 3 3 68 75 6 1 5 5 0 91 0
            0 0 66 0 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 28 values pushed */
              0 3 0 2 1 3 2 99 0 1 0 4 5 1 4 99 6 1 5 5 0 91 0 0 0
              66 0 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 34 values pushed */
              0 3 0 2 1 3 2 99 0 1 0 4 5 1 4 99 6 1 5 0 0 5 87 6 1
              5 5 0 91 0 0 5 0 79
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 14 values pushed */
          30 30 30 39 30 38 38 37 34 36 40 7 8 25
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="ampersand" xMin="37" yMin="-17" xMax="578" yMax="710">
      <contour>
        <pt x="341" y="710" on="0"/>
        <pt x="433" y="674" on="0"/>
        <pt x="473" y="631" on="1"/>
        <pt x="388" y="558" on="1"/>
        <pt x="365" y="582" on="0"/>
        <pt x="325" y="602" on="0"/>
        <pt x="297" y="602" on="1"/>
        <pt x="262" y="602" on="0"/>
        <pt x="224" y="560" on="0"/>
        <pt x="224" y="523" on="1"/>
        <pt x="224" y="484" on="0"/>
        <pt x="275" y="433" on="0"/>
        <pt x="316" y="433" on="1"/>
        <pt x="578" y="433" on="1"/>
        <pt x="578" y="332" on="1"/>
        <pt x="512" y="332" on="1"/>
        <pt x="512" y="70" on="1"/>
        <pt x="476" y="32" on="0"/>
        <pt x="363" y="-17" on="0"/>
        <pt x="281" y="-17" on="1"/>
        <pt x="204" y="-17" on="0"/>
        <pt x="94" y="38" on="0"/>
        <pt x="37" y="136" on="0"/>
        <pt x="37" y="198" on="1"/>
        <pt x="37" y="278" on="0"/>
        <pt x="116" y="371" on="0"/>
        <pt x="190" y="389" on="1"/>
        <pt x="190" y="393" on="1"/>
        <pt x="72" y="424" on="0"/>
        <pt x="72" y="543" on="1"/>
        <pt x="72" y="590" on="0"/>
        <pt x="125" y="666" on="0"/>
        <pt x="220" y="710" on="0"/>
        <pt x="279" y="710" on="1"/>
      </contour>
      <contour>
        <pt x="307" y="332" on="1"/>
        <pt x="251" y="332" on="0"/>
        <pt x="192" y="261" on="0"/>
        <pt x="192" y="210" on="1"/>
        <pt x="192" y="159" on="0"/>
        <pt x="243" y="98" on="0"/>
        <pt x="290" y="98" on="1"/>
        <pt x="314" y="98" on="0"/>
        <pt x="354" y="113" on="0"/>
        <pt x="366" y="126" on="1"/>
        <pt x="366" y="332" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 22 values pushed */
          2 1 0 4 3 1 1 0 26 1 2 1 43 1 6 2 16 1 3 6 5 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 32 values pushed */
            0 1 8 5 2 2 6 1 2 99 0 0 0 4 91 7 1 4 4 65 75 0 6 6 3
            91 0 3 3 66 3 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 30 values pushed */
              7 1 4 0 0 1 4 0 99 0 1 8 5 2 2 6 1 2 99 0 6 6 3 91 0
              3 3 66 3 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 35 values pushed */
              7 1 4 0 0 1 4 0 99 0 1 8 5 2 2 6 1 2 99 0 6 3 3 6 87
              0 6 6 3 91 0 3 6 3 79
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 21 values pushed */
          35 34 0 0 41 39 34 44 35 44 0 33 0 32 35 17 36 37 9 8 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="circum" xMin="39" yMin="527" xMax="561" yMax="844">
      <contour>
        <pt x="561" y="527" on="1"/>
        <pt x="407" y="527" on="1"/>
        <pt x="299" y="726" on="1"/>
        <pt x="195" y="527" on="1"/>
        <pt x="39" y="527" on="1"/>
        <pt x="228" y="844" on="1"/>
        <pt x="372" y="844" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 22 values pushed */
          2 1 0 2 1 74 0 2 0 2 114 1 1 0 0 105 17 18 16 3 8 23
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="tilde" xMin="22" yMin="210" xMax="578" yMax="430">
      <contour>
        <pt x="240" y="430" on="0"/>
        <pt x="295" y="399" on="0"/>
        <pt x="327" y="371" on="1"/>
        <pt x="350" y="350" on="0"/>
        <pt x="383" y="330" on="0"/>
        <pt x="401" y="330" on="1"/>
        <pt x="428" y="330" on="0"/>
        <pt x="469" y="367" on="0"/>
        <pt x="490" y="408" on="1"/>
        <pt x="578" y="369" on="1"/>
        <pt x="543" y="292" on="0"/>
        <pt x="459" y="210" on="0"/>
        <pt x="397" y="210" on="1"/>
        <pt x="361" y="210" on="0"/>
        <pt x="308" y="240" on="0"/>
        <pt x="274" y="269" on="1"/>
        <pt x="249" y="290" on="0"/>
        <pt x="216" y="310" on="0"/>
        <pt x="199" y="310" on="1"/>
        <pt x="172" y="310" on="0"/>
        <pt x="131" y="272" on="0"/>
        <pt x="110" y="232" on="1"/>
        <pt x="22" y="272" on="1"/>
        <pt x="58" y="346" on="0"/>
        <pt x="141" y="430" on="0"/>
        <pt x="203" y="430" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 49 values pushed */
          9 8 2 0 3 22 21 2 1 2 2 74 0 0 2 1 0 87 4 1 3 0 2 1 3
          2 99 0 0 0 1 91 0 1 0 1 79 0 0 0 25 0 24 36 37 36 5 8 23
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="asterisk" xMin="78" yMin="103" xMax="523" yMax="531">
      <contour>
        <pt x="346" y="380" on="1"/>
        <pt x="482" y="444" on="1"/>
        <pt x="523" y="320" on="1"/>
        <pt x="374" y="292" on="1"/>
        <pt x="480" y="183" on="1"/>
        <pt x="371" y="104" on="1"/>
        <pt x="299" y="238" on="1"/>
        <pt x="230" y="103" on="1"/>
        <pt x="121" y="182" on="1"/>
        <pt x="225" y="293" on="1"/>
        <pt x="78" y="320" on="1"/>
        <pt x="117" y="444" on="1"/>
        <pt x="254" y="381" on="1"/>
        <pt x="232" y="531" on="1"/>
        <pt x="367" y="531" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 15 values pushed */
          12 11 10 9 8 7 6 5 4 3 2 1 12 0 71
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            PUSHB[ ]	/* 6 values pushed */
            0 0 0 60 0 76
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 4 values pushed */
            0 0 0 105
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 4 values pushed */
          29 1 8 21
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="at" xMin="-2" yMin="-94" xMax="599" yMax="711">
      <contour>
        <pt x="456" y="711" on="0"/>
        <pt x="599" y="496" on="0"/>
        <pt x="599" y="296" on="1"/>
        <pt x="599" y="162" on="0"/>
        <pt x="572" y="-6" on="0"/>
        <pt x="503" y="-94" on="0"/>
        <pt x="441" y="-94" on="1"/>
        <pt x="387" y="-94" on="0"/>
        <pt x="328" y="-17" on="0"/>
        <pt x="321" y="44" on="1"/>
        <pt x="317" y="44" on="1"/>
        <pt x="299" y="3" on="0"/>
        <pt x="227" y="-49" on="0"/>
        <pt x="177" y="-49" on="1"/>
        <pt x="93" y="-49" on="0"/>
        <pt x="15" y="75" on="0"/>
        <pt x="15" y="179" on="1"/>
        <pt x="15" y="306" on="0"/>
        <pt x="122" y="448" on="0"/>
        <pt x="228" y="448" on="1"/>
        <pt x="269" y="448" on="0"/>
        <pt x="356" y="426" on="0"/>
        <pt x="396" y="404" on="1"/>
        <pt x="396" y="104" on="1"/>
        <pt x="396" y="50" on="0"/>
        <pt x="415" y="4" on="0"/>
        <pt x="436" y="4" on="1"/>
        <pt x="455" y="4" on="0"/>
        <pt x="473" y="58" on="0"/>
        <pt x="478" y="171" on="0"/>
        <pt x="478" y="287" on="1"/>
        <pt x="478" y="398" on="0"/>
        <pt x="444" y="539" on="0"/>
        <pt x="357" y="613" on="0"/>
        <pt x="279" y="613" on="1"/>
        <pt x="223" y="613" on="0"/>
        <pt x="117" y="570" on="0"/>
        <pt x="61" y="521" on="1"/>
        <pt x="-2" y="595" on="1"/>
        <pt x="66" y="655" on="0"/>
        <pt x="205" y="711" on="0"/>
        <pt x="287" y="711" on="1"/>
      </contour>
      <contour>
        <pt x="198" y="349" on="0"/>
        <pt x="169" y="317" on="0"/>
        <pt x="157" y="245" on="0"/>
        <pt x="157" y="179" on="1"/>
        <pt x="157" y="109" on="0"/>
        <pt x="178" y="50" on="0"/>
        <pt x="206" y="50" on="1"/>
        <pt x="235" y="50" on="0"/>
        <pt x="259" y="90" on="0"/>
        <pt x="263" y="121" on="1"/>
        <pt x="263" y="340" on="1"/>
        <pt x="245" y="349" on="0"/>
        <pt x="225" y="349" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 20 values pushed */
          38 37 2 2 4 22 1 7 2 52 51 2 6 7 9 1 3 6 4 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 36 values pushed */
            0 2 9 1 7 6 2 7 99 0 6 0 1 0 6 1 99 0 3 0 0 3 0 95 0
            4 4 5 91 8 1 5 5 65 4 76
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 42 values pushed */
            8 1 5 0 4 2 5 4 99 0 2 9 1 7 6 2 7 99 0 3 1 0 3 87 0
            6 0 1 0 6 1 99 0 3 3 0 91 0 0 3 0 79
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 22 values pushed */
          42 42 0 0 42 54 42 53 49 47 0 41 0 40 38 37 36 37 37 10 8 25
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="b" xMin="70" yMin="-17" xMax="560" yMax="759">
      <contour>
        <pt x="253" y="511" on="0"/>
        <pt x="324" y="549" on="0"/>
        <pt x="364" y="549" on="1"/>
        <pt x="463" y="549" on="0"/>
        <pt x="560" y="401" on="0"/>
        <pt x="560" y="267" on="1"/>
        <pt x="560" y="184" on="0"/>
        <pt x="510" y="56" on="0"/>
        <pt x="414" y="-17" on="0"/>
        <pt x="347" y="-17" on="1"/>
        <pt x="307" y="-17" on="0"/>
        <pt x="239" y="17" on="0"/>
        <pt x="216" y="48" on="1"/>
        <pt x="210" y="0" on="1"/>
        <pt x="70" y="0" on="1"/>
        <pt x="70" y="742" on="1"/>
        <pt x="228" y="759" on="1"/>
        <pt x="228" y="477" on="1"/>
      </contour>
      <contour>
        <pt x="397" y="98" on="0"/>
        <pt x="397" y="265" on="1"/>
        <pt x="397" y="358" on="0"/>
        <pt x="355" y="432" on="0"/>
        <pt x="314" y="432" on="1"/>
        <pt x="265" y="432" on="0"/>
        <pt x="228" y="370" on="1"/>
        <pt x="228" y="146" on="1"/>
        <pt x="259" y="98" on="0"/>
        <pt x="306" y="98" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          14
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 20 values pushed */
            17 1 3 0 25 24 2 4 3 12 1 1 4 3 74 16 15 2 0 72
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 20 values pushed */
            17 1 3 0 25 24 2 4 3 12 1 2 4 3 74 16 15 2 0 72
          EIF[ ]	/* EndIf */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          14
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 23 values pushed */
            0 3 3 0 91 0 0 0 68 75 5 1 4 4 1 91 2 1 1 1 66 1 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            43
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 27 values pushed */
              0 3 3 0 91 0 0 0 68 75 0 2 2 58 75 5 1 4 4 1 91 0 1 1 66
              1 76
            ELSE[ ]	/* Else */
              MPPEM[ ]	/* MeasurePixelPerEm */
              PUSHB[ ]	/* 1 value pushed */
              45
              LT[ ]	/* LessThan */
              IF[ ]	/* If */
                NPUSHB[ ]	/* 25 values pushed */
                0 0 0 3 4 0 3 99 0 2 2 58 75 5 1 4 4 1 91 0 1 1 66 1 76
              ELSE[ ]	/* Else */
                NPUSHB[ ]	/* 34 values pushed */
                0 2 4 1 4 2 1 112 0 0 0 3 4 0 3 99 5 1 4 2 1 4 87 5 1
                4 4 1 91 0 1 4 1 79
              EIF[ ]	/* EndIf */
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 13 values pushed */
          18 18 18 27 18 26 39 19 37 33 6 8 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="backslash" xMin="29" yMin="-112" xMax="571" yMax="817">
      <contour>
        <pt x="152" y="817" on="1"/>
        <pt x="571" y="-55" on="1"/>
        <pt x="448" y="-112" on="1"/>
        <pt x="29" y="760" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 4 values pushed */
          2 0 1 48
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="bar" xMin="226" yMin="-105" xMax="373" yMax="810">
      <contour>
        <pt x="373" y="-105" on="1"/>
        <pt x="226" y="-105" on="1"/>
        <pt x="226" y="810" on="1"/>
        <pt x="373" y="810" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 21 values pushed */
          0 1 0 0 1 85 0 1 1 0 89 0 0 1 0 77 17 16 2 8 22
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="braceleft" xMin="105" yMin="-140" xMax="467" yMax="840">
      <contour>
        <pt x="467" y="730" on="1"/>
        <pt x="417" y="730" on="0"/>
        <pt x="370" y="703" on="0"/>
        <pt x="374" y="667" on="1"/>
        <pt x="389" y="519" on="1"/>
        <pt x="390" y="510" on="0"/>
        <pt x="390" y="494" on="1"/>
        <pt x="390" y="428" on="0"/>
        <pt x="309" y="361" on="0"/>
        <pt x="234" y="350" on="1"/>
        <pt x="313" y="338" on="0"/>
        <pt x="391" y="274" on="0"/>
        <pt x="391" y="208" on="1"/>
        <pt x="391" y="201" on="0"/>
        <pt x="389" y="181" on="1"/>
        <pt x="374" y="33" on="1"/>
        <pt x="370" y="-2" on="0"/>
        <pt x="418" y="-30" on="0"/>
        <pt x="467" y="-30" on="1"/>
        <pt x="467" y="-140" on="1"/>
        <pt x="339" y="-140" on="0"/>
        <pt x="226" y="-70" on="0"/>
        <pt x="226" y="12" on="1"/>
        <pt x="226" y="22" on="0"/>
        <pt x="228" y="44" on="1"/>
        <pt x="243" y="188" on="1"/>
        <pt x="244" y="201" on="1"/>
        <pt x="244" y="247" on="0"/>
        <pt x="171" y="286" on="0"/>
        <pt x="105" y="286" on="1"/>
        <pt x="105" y="414" on="1"/>
        <pt x="244" y="414" on="0"/>
        <pt x="244" y="499" on="1"/>
        <pt x="243" y="512" on="1"/>
        <pt x="228" y="655" on="1"/>
        <pt x="226" y="679" on="0"/>
        <pt x="226" y="689" on="1"/>
        <pt x="226" y="771" on="0"/>
        <pt x="340" y="840" on="0"/>
        <pt x="467" y="840" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 61 values pushed */
          32 1 4 0 9 1 3 4 26 12 2 1 3 3 74 0 5 0 0 4 5 0 99 0 4
          0 3 1 4 3 99 0 1 2 2 1 87 0 1 1 2 91 0 2 1 2 79 39 38 31
          30 29 28 20 19 18 17 16 6 8 21
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="braceright" xMin="133" yMin="-140" xMax="495" yMax="840">
      <contour>
        <pt x="261" y="840" on="0"/>
        <pt x="374" y="770" on="0"/>
        <pt x="374" y="688" on="1"/>
        <pt x="374" y="678" on="0"/>
        <pt x="372" y="656" on="1"/>
        <pt x="357" y="512" on="1"/>
        <pt x="356" y="499" on="1"/>
        <pt x="356" y="414" on="0"/>
        <pt x="495" y="414" on="1"/>
        <pt x="495" y="286" on="1"/>
        <pt x="356" y="286" on="0"/>
        <pt x="356" y="201" on="1"/>
        <pt x="357" y="188" on="1"/>
        <pt x="372" y="45" on="1"/>
        <pt x="374" y="21" on="0"/>
        <pt x="374" y="11" on="1"/>
        <pt x="374" y="-71" on="0"/>
        <pt x="260" y="-140" on="0"/>
        <pt x="133" y="-140" on="1"/>
        <pt x="133" y="-30" on="1"/>
        <pt x="183" y="-30" on="0"/>
        <pt x="230" y="-3" on="0"/>
        <pt x="226" y="33" on="1"/>
        <pt x="211" y="181" on="1"/>
        <pt x="210" y="190" on="0"/>
        <pt x="210" y="206" on="1"/>
        <pt x="210" y="272" on="0"/>
        <pt x="291" y="339" on="0"/>
        <pt x="367" y="350" on="1"/>
        <pt x="288" y="362" on="0"/>
        <pt x="210" y="426" on="0"/>
        <pt x="210" y="492" on="1"/>
        <pt x="210" y="510" on="0"/>
        <pt x="211" y="519" on="1"/>
        <pt x="226" y="667" on="1"/>
        <pt x="230" y="702" on="0"/>
        <pt x="182" y="730" on="0"/>
        <pt x="133" y="730" on="1"/>
        <pt x="133" y="840" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 62 values pushed */
          6 1 0 4 28 1 1 0 11 1 3 1 3 74 6 1 5 0 4 0 5 4 99 0 0
          0 1 3 0 1 99 0 3 2 2 3 87 0 3 3 2 91 0 2 3 2 79 0 0 0
          38 0 38 37 36 17 23 17 23 7 8 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="bracketleft" xMin="156" yMin="-123" xMax="464" yMax="823">
      <contour>
        <pt x="156" y="823" on="1"/>
        <pt x="464" y="823" on="1"/>
        <pt x="464" y="705" on="1"/>
        <pt x="305" y="705" on="1"/>
        <pt x="305" y="-6" on="1"/>
        <pt x="464" y="-6" on="1"/>
        <pt x="464" y="-123" on="1"/>
        <pt x="156" y="-123" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 31 values pushed */
          0 0 0 1 2 0 1 97 0 2 3 3 2 85 0 2 2 3 89 0 3 2 3 77 17
          17 17 16 4 8 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="bracketright" xMin="136" yMin="-123" xMax="444" yMax="823">
      <contour>
        <pt x="444" y="-123" on="1"/>
        <pt x="136" y="-123" on="1"/>
        <pt x="136" y="-5" on="1"/>
        <pt x="295" y="-5" on="1"/>
        <pt x="295" y="705" on="1"/>
        <pt x="136" y="705" on="1"/>
        <pt x="136" y="823" on="1"/>
        <pt x="444" y="823" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 31 values pushed */
          0 3 0 2 1 3 2 97 0 1 0 0 1 85 0 1 1 0 89 0 0 1 0 77 17
          17 17 16 4 8 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="c" xMin="69" yMin="-17" xMax="540" yMax="549">
      <contour>
        <pt x="382" y="108" on="0"/>
        <pt x="438" y="131" on="0"/>
        <pt x="470" y="153" on="1"/>
        <pt x="540" y="53" on="1"/>
        <pt x="502" y="21" on="0"/>
        <pt x="402" y="-17" on="0"/>
        <pt x="343" y="-17" on="1"/>
        <pt x="258" y="-17" on="0"/>
        <pt x="135" y="53" on="0"/>
        <pt x="69" y="179" on="0"/>
        <pt x="69" y="262" on="1"/>
        <pt x="69" y="345" on="0"/>
        <pt x="137" y="475" on="0"/>
        <pt x="262" y="549" on="0"/>
        <pt x="346" y="549" on="1"/>
        <pt x="405" y="549" on="0"/>
        <pt x="499" y="516" on="0"/>
        <pt x="540" y="482" on="1"/>
        <pt x="472" y="387" on="1"/>
        <pt x="414" y="427" on="0"/>
        <pt x="353" y="427" on="1"/>
        <pt x="234" y="427" on="0"/>
        <pt x="234" y="262" on="1"/>
        <pt x="234" y="179" on="0"/>
        <pt x="296" y="108" on="0"/>
        <pt x="352" y="108" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 15 values pushed */
          17 1 2 1 18 2 2 3 2 3 1 0 3 3 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 22 values pushed */
            0 2 2 1 91 0 1 1 68 75 4 1 3 3 0 91 0 0 0 66 0 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 20 values pushed */
              0 1 0 2 3 1 2 99 4 1 3 3 0 91 0 0 0 66 0 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 26 values pushed */
              0 1 0 2 3 1 2 99 4 1 3 0 0 3 87 4 1 3 3 0 91 0 0 3 0
              79
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 12 values pushed */
          0 0 0 25 0 24 36 38 37 5 8 23
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="colon" xMin="195" yMin="-17" xMax="404" yMax="539">
      <contour>
        <pt x="195" y="477" on="0"/>
        <pt x="256" y="539" on="0"/>
        <pt x="300" y="539" on="1"/>
        <pt x="344" y="539" on="0"/>
        <pt x="404" y="477" on="0"/>
        <pt x="404" y="434" on="1"/>
        <pt x="404" y="391" on="0"/>
        <pt x="344" y="330" on="0"/>
        <pt x="300" y="330" on="1"/>
        <pt x="256" y="330" on="0"/>
        <pt x="195" y="391" on="0"/>
        <pt x="195" y="434" on="1"/>
      </contour>
      <contour>
        <pt x="195" y="131" on="0"/>
        <pt x="256" y="192" on="0"/>
        <pt x="300" y="192" on="1"/>
        <pt x="344" y="192" on="0"/>
        <pt x="404" y="131" on="0"/>
        <pt x="404" y="89" on="1"/>
        <pt x="404" y="45" on="0"/>
        <pt x="344" y="-17" on="0"/>
        <pt x="300" y="-17" on="1"/>
        <pt x="256" y="-17" on="0"/>
        <pt x="195" y="45" on="0"/>
        <pt x="195" y="89" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 21 values pushed */
            0 1 1 0 91 0 0 0 60 75 0 2 2 3 91 0 3 3 66 3 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 19 values pushed */
              0 0 0 1 2 0 1 99 0 2 2 3 91 0 3 3 66 3 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 24 values pushed */
              0 0 0 1 2 0 1 99 0 2 3 3 2 87 0 2 2 3 91 0 3 2 3 79
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 7 values pushed */
          36 36 36 33 4 8 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="comma" xMin="188" yMin="-203" xMax="409" yMax="206">
      <contour>
        <pt x="347" y="206" on="0"/>
        <pt x="409" y="144" on="0"/>
        <pt x="409" y="98" on="1"/>
        <pt x="409" y="70" on="0"/>
        <pt x="391" y="15" on="0"/>
        <pt x="366" y="-40" on="1"/>
        <pt x="294" y="-203" on="1"/>
        <pt x="188" y="-203" on="1"/>
        <pt x="239" y="9" on="1"/>
        <pt x="217" y="23" on="0"/>
        <pt x="192" y="70" on="0"/>
        <pt x="192" y="99" on="1"/>
        <pt x="192" y="144" on="0"/>
        <pt x="254" y="206" on="0"/>
        <pt x="300" y="206" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 6 values pushed */
          8 1 0 1 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          27
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 12 values pushed */
            2 1 1 1 0 89 0 0 0 62 0 76
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 18 values pushed */
            2 1 1 0 0 1 87 2 1 1 1 0 89 0 0 1 0 77
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 10 values pushed */
          0 0 0 14 0 13 22 3 8 21
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="d" xMin="40" yMin="-17" xMax="530" yMax="759">
      <contour>
        <pt x="530" y="742" on="1"/>
        <pt x="530" y="0" on="1"/>
        <pt x="390" y="0" on="1"/>
        <pt x="382" y="58" on="1"/>
        <pt x="358" y="24" on="0"/>
        <pt x="284" y="-17" on="0"/>
        <pt x="235" y="-17" on="1"/>
        <pt x="139" y="-17" on="0"/>
        <pt x="40" y="135" on="0"/>
        <pt x="40" y="267" on="1"/>
        <pt x="40" y="349" on="0"/>
        <pt x="92" y="477" on="0"/>
        <pt x="188" y="549" on="0"/>
        <pt x="252" y="549" on="1"/>
        <pt x="324" y="549" on="0"/>
        <pt x="372" y="499" on="1"/>
        <pt x="372" y="759" on="1"/>
      </contour>
      <contour>
        <pt x="251" y="433" on="0"/>
        <pt x="203" y="352" on="0"/>
        <pt x="203" y="266" on="1"/>
        <pt x="203" y="174" on="0"/>
        <pt x="246" y="99" on="0"/>
        <pt x="285" y="99" on="1"/>
        <pt x="335" y="99" on="0"/>
        <pt x="372" y="160" on="1"/>
        <pt x="372" y="389" on="1"/>
        <pt x="355" y="411" on="0"/>
        <pt x="318" y="433" on="0"/>
        <pt x="294" y="433" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 20 values pushed */
          15 1 4 2 25 24 2 3 4 3 1 0 3 3 74 16 0 2 2 72
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          14
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 23 values pushed */
            5 1 4 4 2 91 0 2 2 68 75 0 3 3 0 91 1 1 0 0 58 0 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            43
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 27 values pushed */
              5 1 4 4 2 91 0 2 2 68 75 0 0 0 58 75 0 3 3 1 91 0 1 1 66
              1 76
            ELSE[ ]	/* Else */
              MPPEM[ ]	/* MeasurePixelPerEm */
              PUSHB[ ]	/* 1 value pushed */
              45
              LT[ ]	/* LessThan */
              IF[ ]	/* If */
                NPUSHB[ ]	/* 25 values pushed */
                0 2 5 1 4 3 2 4 99 0 0 0 58 75 0 3 3 1 91 0 1 1 66 1 76
              ELSE[ ]	/* Else */
                NPUSHB[ ]	/* 33 values pushed */
                0 0 3 1 3 0 1 112 0 2 5 1 4 3 2 4 99 0 3 0 1 3 87 0 3
                3 1 91 0 1 3 1 79
              EIF[ ]	/* EndIf */
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 13 values pushed */
          17 17 17 28 17 27 39 37 35 17 6 8 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="dollar" xMin="42" yMin="-162" xMax="558" yMax="856">
      <contour>
        <pt x="349" y="708" on="1"/>
        <pt x="463" y="698" on="0"/>
        <pt x="546" y="629" on="1"/>
        <pt x="469" y="548" on="1"/>
        <pt x="416" y="592" on="0"/>
        <pt x="349" y="597" on="1"/>
        <pt x="349" y="422" on="1"/>
        <pt x="457" y="387" on="0"/>
        <pt x="558" y="290" on="0"/>
        <pt x="558" y="204" on="1"/>
        <pt x="558" y="118" on="0"/>
        <pt x="448" y="-1" on="0"/>
        <pt x="349" y="-13" on="1"/>
        <pt x="349" y="-162" on="1"/>
        <pt x="268" y="-162" on="1"/>
        <pt x="268" y="-16" on="1"/>
        <pt x="198" y="-11" on="0"/>
        <pt x="82" y="41" on="0"/>
        <pt x="42" y="79" on="1"/>
        <pt x="118" y="167" on="1"/>
        <pt x="153" y="136" on="0"/>
        <pt x="225" y="103" on="0"/>
        <pt x="268" y="100" on="1"/>
        <pt x="268" y="308" on="1"/>
        <pt x="161" y="344" on="0"/>
        <pt x="67" y="440" on="0"/>
        <pt x="67" y="511" on="1"/>
        <pt x="67" y="593" on="0"/>
        <pt x="175" y="697" on="0"/>
        <pt x="268" y="707" on="1"/>
        <pt x="268" y="856" on="1"/>
        <pt x="349" y="856" on="1"/>
      </contour>
      <contour>
        <pt x="239" y="591" on="0"/>
        <pt x="208" y="555" on="0"/>
        <pt x="208" y="530" on="1"/>
        <pt x="208" y="503" on="0"/>
        <pt x="231" y="470" on="0"/>
        <pt x="268" y="453" on="1"/>
        <pt x="268" y="596" on="1"/>
      </contour>
      <contour>
        <pt x="349" y="103" on="1"/>
        <pt x="411" y="117" on="0"/>
        <pt x="411" y="185" on="1"/>
        <pt x="411" y="216" on="0"/>
        <pt x="385" y="258" on="0"/>
        <pt x="349" y="276" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 53 values pushed */
          44 39 38 37 29 23 19 6 5 3 2 0 12 1 2 18 15 12 3 0 1 2 74 0 1
          2 0 2 1 0 112 0 2 1 0 2 85 0 2 2 0 89 0 0 2 0 77 24 23 29
          3 8 23
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="e" xMin="46" yMin="-17" xMax="554" yMax="549">
      <contour>
        <pt x="222" y="98" on="0"/>
        <pt x="335" y="98" on="1"/>
        <pt x="403" y="98" on="0"/>
        <pt x="471" y="142" on="1"/>
        <pt x="534" y="56" on="1"/>
        <pt x="495" y="22" on="0"/>
        <pt x="387" y="-17" on="0"/>
        <pt x="322" y="-17" on="1"/>
        <pt x="233" y="-17" on="0"/>
        <pt x="109" y="54" on="0"/>
        <pt x="46" y="181" on="0"/>
        <pt x="46" y="265" on="1"/>
        <pt x="46" y="345" on="0"/>
        <pt x="107" y="474" on="0"/>
        <pt x="224" y="549" on="0"/>
        <pt x="305" y="549" on="1"/>
        <pt x="381" y="549" on="0"/>
        <pt x="493" y="484" on="0"/>
        <pt x="554" y="361" on="0"/>
        <pt x="554" y="276" on="1"/>
        <pt x="554" y="243" on="0"/>
        <pt x="551" y="219" on="1"/>
        <pt x="207" y="219" on="1"/>
      </contour>
      <contour>
        <pt x="262" y="443" on="0"/>
        <pt x="210" y="380" on="0"/>
        <pt x="205" y="315" on="1"/>
        <pt x="400" y="315" on="1"/>
        <pt x="398" y="443" on="0"/>
        <pt x="305" y="443" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 10 values pushed */
          3 1 0 3 4 1 1 0 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 30 values pushed */
            0 4 0 3 0 4 3 97 6 1 5 5 2 91 0 2 2 68 75 0 0 0 1 91 0
            1 1 66 1 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 28 values pushed */
              0 2 6 1 5 4 2 5 99 0 4 0 3 0 4 3 97 0 0 0 1 91 0 1 1
              66 1 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 33 values pushed */
              0 2 6 1 5 4 2 5 99 0 4 0 3 0 4 3 97 0 0 1 1 0 87 0 0
              0 1 91 0 1 0 1 79
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 14 values pushed */
          23 23 23 28 23 27 19 21 38 36 32 7 8 25
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="eight" xMin="43" yMin="-17" xMax="557" yMax="711">
      <contour>
        <pt x="530" y="479" on="0"/>
        <pt x="479" y="409" on="0"/>
        <pt x="423" y="377" on="1"/>
        <pt x="557" y="309" on="0"/>
        <pt x="557" y="188" on="1"/>
        <pt x="557" y="133" on="0"/>
        <pt x="497" y="39" on="0"/>
        <pt x="380" y="-17" on="0"/>
        <pt x="297" y="-17" on="1"/>
        <pt x="216" y="-17" on="0"/>
        <pt x="101" y="38" on="0"/>
        <pt x="43" y="129" on="0"/>
        <pt x="43" y="184" on="1"/>
        <pt x="43" y="242" on="0"/>
        <pt x="110" y="331" on="0"/>
        <pt x="170" y="357" on="1"/>
        <pt x="115" y="392" on="0"/>
        <pt x="70" y="463" on="0"/>
        <pt x="70" y="519" on="1"/>
        <pt x="70" y="577" on="0"/>
        <pt x="130" y="664" on="0"/>
        <pt x="235" y="711" on="0"/>
        <pt x="301" y="711" on="1"/>
        <pt x="368" y="711" on="0"/>
        <pt x="472" y="666" on="0"/>
        <pt x="530" y="583" on="0"/>
        <pt x="530" y="527" on="1"/>
      </contour>
      <contour>
        <pt x="220" y="483" on="0"/>
        <pt x="268" y="435" on="0"/>
        <pt x="321" y="415" on="1"/>
        <pt x="354" y="439" on="0"/>
        <pt x="380" y="487" on="0"/>
        <pt x="380" y="518" on="1"/>
        <pt x="380" y="557" on="0"/>
        <pt x="340" y="603" on="0"/>
        <pt x="301" y="603" on="1"/>
        <pt x="262" y="603" on="0"/>
        <pt x="220" y="560" on="0"/>
        <pt x="220" y="519" on="1"/>
      </contour>
      <contour>
        <pt x="399" y="223" on="0"/>
        <pt x="372" y="266" on="0"/>
        <pt x="318" y="297" on="0"/>
        <pt x="267" y="315" on="1"/>
        <pt x="201" y="273" on="0"/>
        <pt x="201" y="194" on="1"/>
        <pt x="201" y="149" on="0"/>
        <pt x="252" y="96" on="0"/>
        <pt x="301" y="96" on="1"/>
        <pt x="350" y="96" on="0"/>
        <pt x="399" y="149" on="0"/>
        <pt x="399" y="189" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 9 values pushed */
          42 29 15 2 4 3 2 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 21 values pushed */
            0 2 2 1 91 0 1 1 65 75 0 3 3 0 91 0 0 0 66 0 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 19 values pushed */
              0 1 0 2 3 1 2 99 0 3 3 0 91 0 0 0 66 0 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 24 values pushed */
              0 1 0 2 3 1 2 99 0 3 0 0 3 87 0 3 3 0 91 0 0 3 0 79
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 7 values pushed */
          42 43 44 39 4 8 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="equal" xMin="73" yMin="145" xMax="527" yMax="478">
      <contour>
        <pt x="527" y="354" on="1"/>
        <pt x="73" y="354" on="1"/>
        <pt x="73" y="478" on="1"/>
        <pt x="527" y="478" on="1"/>
      </contour>
      <contour>
        <pt x="527" y="145" on="1"/>
        <pt x="73" y="145" on="1"/>
        <pt x="73" y="268" on="1"/>
        <pt x="527" y="268" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 31 values pushed */
          0 1 0 0 3 1 0 97 0 3 2 2 3 85 0 3 3 2 89 0 2 3 2 77 17
          17 17 16 4 8 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="exclam" xMin="210" yMin="-17" xMax="390" yMax="693">
      <contour>
        <pt x="364" y="255" on="1"/>
        <pt x="237" y="255" on="1"/>
        <pt x="216" y="693" on="1"/>
        <pt x="384" y="693" on="1"/>
      </contour>
      <contour>
        <pt x="338" y="164" on="0"/>
        <pt x="390" y="111" on="0"/>
        <pt x="390" y="74" on="1"/>
        <pt x="390" y="36" on="0"/>
        <pt x="338" y="-17" on="0"/>
        <pt x="300" y="-17" on="1"/>
        <pt x="263" y="-17" on="0"/>
        <pt x="210" y="36" on="0"/>
        <pt x="210" y="74" on="1"/>
        <pt x="210" y="111" on="0"/>
        <pt x="263" y="164" on="0"/>
        <pt x="300" y="164" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 22 values pushed */
            0 0 0 1 89 0 1 1 57 75 4 1 3 3 2 91 0 2 2 66 2 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 20 values pushed */
              0 1 0 0 3 1 0 97 4 1 3 3 2 91 0 2 2 66 2 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 26 values pushed */
              0 1 0 0 3 1 0 97 4 1 3 2 2 3 87 4 1 3 3 2 91 0 2 3 2
              79
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 12 values pushed */
          4 4 4 15 4 14 37 17 16 5 8 23
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="f" xMin="76" yMin="0" xMax="590" yMax="759">
      <contour>
        <pt x="510" y="759" on="0"/>
        <pt x="590" y="725" on="1"/>
        <pt x="546" y="622" on="1"/>
        <pt x="495" y="642" on="0"/>
        <pt x="433" y="642" on="1"/>
        <pt x="386" y="642" on="0"/>
        <pt x="345" y="608" on="0"/>
        <pt x="345" y="569" on="1"/>
        <pt x="345" y="498" on="1"/>
        <pt x="518" y="498" on="1"/>
        <pt x="500" y="388" on="1"/>
        <pt x="345" y="388" on="1"/>
        <pt x="345" y="0" on="1"/>
        <pt x="188" y="0" on="1"/>
        <pt x="188" y="388" on="1"/>
        <pt x="76" y="388" on="1"/>
        <pt x="76" y="498" on="1"/>
        <pt x="188" y="498" on="1"/>
        <pt x="188" y="574" on="1"/>
        <pt x="188" y="656" on="0"/>
        <pt x="303" y="759" on="0"/>
        <pt x="408" y="759" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 10 values pushed */
          1 1 0 6 2 1 1 0 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          16
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 27 values pushed */
            5 1 1 4 1 2 3 1 2 97 0 0 0 6 91 7 1 6 6 59 75 0 3 3 58
            3 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 25 values pushed */
              7 1 6 0 0 1 6 0 99 5 1 1 4 1 2 3 1 2 97 0 3 3 58 3 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 33 values pushed */
              0 3 2 3 115 7 1 6 0 0 1 6 0 99 5 1 1 2 2 1 85 5 1 1 1
              2 89 4 1 2 1 2 77
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 15 values pushed */
          0 0 0 21 0 20 17 17 17 17 19 35 8 8 26
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="five" xMin="39" yMin="-17" xMax="541" yMax="693">
      <contour>
        <pt x="497" y="580" on="1"/>
        <pt x="244" y="580" on="1"/>
        <pt x="244" y="430" on="1"/>
        <pt x="293" y="453" on="0"/>
        <pt x="346" y="453" on="1"/>
        <pt x="400" y="453" on="0"/>
        <pt x="489" y="398" on="0"/>
        <pt x="541" y="296" on="0"/>
        <pt x="541" y="228" on="1"/>
        <pt x="541" y="158" on="0"/>
        <pt x="473" y="46" on="0"/>
        <pt x="349" y="-17" on="0"/>
        <pt x="269" y="-17" on="1"/>
        <pt x="196" y="-17" on="0"/>
        <pt x="79" y="38" on="0"/>
        <pt x="39" y="87" on="1"/>
        <pt x="130" y="170" on="1"/>
        <pt x="155" y="138" on="0"/>
        <pt x="220" y="104" on="0"/>
        <pt x="257" y="104" on="1"/>
        <pt x="312" y="104" on="0"/>
        <pt x="378" y="171" on="0"/>
        <pt x="378" y="225" on="1"/>
        <pt x="378" y="344" on="0"/>
        <pt x="284" y="344" on="1"/>
        <pt x="241" y="344" on="0"/>
        <pt x="200" y="321" on="1"/>
        <pt x="93" y="321" on="1"/>
        <pt x="93" y="693" on="1"/>
        <pt x="515" y="693" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 14 values pushed */
          2 1 4 1 16 1 3 5 15 1 2 3 3 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 37 values pushed */
            0 5 4 3 4 5 3 112 0 1 0 4 5 1 4 99 0 0 0 6 89 0 6 6 57
            75 0 3 3 2 91 0 2 2 66 2 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 35 values pushed */
              0 5 4 3 4 5 3 112 0 6 0 0 1 6 0 97 0 1 0 4 5 1 4 99 0
              3 3 2 91 0 2 2 66 2 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 40 values pushed */
              0 5 4 3 4 5 3 112 0 6 0 0 1 6 0 97 0 1 0 4 5 1 4 99 0
              3 2 2 3 87 0 3 3 2 91 0 2 3 2 79
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 10 values pushed */
          17 17 35 37 38 34 16 7 8 27
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="four" xMin="45" yMin="0" xMax="553" yMax="711">
      <contour>
        <pt x="553" y="146" on="1"/>
        <pt x="484" y="146" on="1"/>
        <pt x="484" y="0" on="1"/>
        <pt x="333" y="0" on="1"/>
        <pt x="332" y="146" on="1"/>
        <pt x="45" y="146" on="1"/>
        <pt x="45" y="250" on="1"/>
        <pt x="237" y="711" on="1"/>
        <pt x="371" y="661" on="1"/>
        <pt x="208" y="264" on="1"/>
        <pt x="332" y="264" on="1"/>
        <pt x="350" y="431" on="1"/>
        <pt x="484" y="431" on="1"/>
        <pt x="484" y="264" on="1"/>
        <pt x="553" y="264" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 11 values pushed */
          6 1 0 3 1 74 8 7 2 4 72
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          45
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 21 values pushed */
            5 1 3 2 1 0 1 3 0 97 0 4 4 1 89 0 1 1 58 1 76
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 26 values pushed */
            0 4 3 1 4 85 5 1 3 2 1 0 1 3 0 97 0 4 4 1 89 0 1 4 1
            77
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 9 values pushed */
          17 17 20 17 17 16 6 8 26
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="g" xMin="31" yMin="-222" xMax="578" yMax="616">
      <contour>
        <pt x="578" y="500" on="1"/>
        <pt x="526" y="479" on="0"/>
        <pt x="425" y="479" on="1"/>
        <pt x="477" y="456" on="0"/>
        <pt x="528" y="392" on="0"/>
        <pt x="528" y="342" on="1"/>
        <pt x="528" y="291" on="0"/>
        <pt x="472" y="210" on="0"/>
        <pt x="370" y="164" on="0"/>
        <pt x="303" y="164" on="1"/>
        <pt x="270" y="164" on="0"/>
        <pt x="241" y="170" on="1"/>
        <pt x="233" y="166" on="0"/>
        <pt x="224" y="149" on="0"/>
        <pt x="224" y="140" on="1"/>
        <pt x="224" y="125" on="0"/>
        <pt x="247" y="108" on="0"/>
        <pt x="282" y="108" on="1"/>
        <pt x="370" y="108" on="1"/>
        <pt x="430" y="108" on="0"/>
        <pt x="522" y="68" on="0"/>
        <pt x="572" y="-2" on="0"/>
        <pt x="572" y="-46" on="1"/>
        <pt x="572" y="-129" on="0"/>
        <pt x="427" y="-222" on="0"/>
        <pt x="288" y="-222" on="1"/>
        <pt x="189" y="-222" on="0"/>
        <pt x="76" y="-181" on="0"/>
        <pt x="31" y="-107" on="0"/>
        <pt x="31" y="-51" on="1"/>
        <pt x="171" y="-51" on="1"/>
        <pt x="171" y="-76" on="0"/>
        <pt x="190" y="-104" on="0"/>
        <pt x="242" y="-118" on="0"/>
        <pt x="292" y="-118" on="1"/>
        <pt x="362" y="-118" on="0"/>
        <pt x="415" y="-86" on="0"/>
        <pt x="415" y="-57" on="1"/>
        <pt x="415" y="-33" on="0"/>
        <pt x="376" y="-4" on="0"/>
        <pt x="338" y="-4" on="1"/>
        <pt x="254" y="-4" on="1"/>
        <pt x="172" y="-4" on="0"/>
        <pt x="90" y="55" on="0"/>
        <pt x="90" y="101" on="1"/>
        <pt x="90" y="131" on="0"/>
        <pt x="121" y="184" on="0"/>
        <pt x="149" y="202" on="1"/>
        <pt x="99" y="229" on="0"/>
        <pt x="55" y="302" on="0"/>
        <pt x="55" y="354" on="1"/>
        <pt x="55" y="413" on="0"/>
        <pt x="115" y="501" on="0"/>
        <pt x="223" y="548" on="0"/>
        <pt x="292" y="548" on="1"/>
        <pt x="372" y="546" on="0"/>
        <pt x="484" y="581" on="0"/>
        <pt x="542" y="616" on="1"/>
      </contour>
      <contour>
        <pt x="258" y="445" on="0"/>
        <pt x="215" y="397" on="0"/>
        <pt x="215" y="356" on="1"/>
        <pt x="215" y="313" on="0"/>
        <pt x="259" y="265" on="0"/>
        <pt x="296" y="265" on="1"/>
        <pt x="335" y="265" on="0"/>
        <pt x="377" y="312" on="0"/>
        <pt x="377" y="358" on="1"/>
        <pt x="377" y="445" on="0"/>
        <pt x="296" y="445" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 11 values pushed */
          47 11 2 1 8 1 74 57 1 7 72
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 56 values pushed */
            0 0 7 9 7 0 9 112 0 4 6 5 6 4 5 112 0 8 0 1 2 8 1 99 10
            1 9 9 7 91 0 7 7 68 75 0 2 2 6 91 0 6 6 58 75 0 5 5 3 91
            0 3 3 62 3 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 54 values pushed */
              0 0 7 9 7 0 9 112 0 4 6 5 6 4 5 112 0 7 10 1 9 8 7 9 99
              0 8 0 1 2 8 1 99 0 2 2 6 91 0 6 6 58 75 0 5 5 3 91 0 3
              3 62 3 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 52 values pushed */
              0 0 7 9 7 0 9 112 0 4 6 5 6 4 5 112 0 7 10 1 9 8 7 9 99
              0 8 0 1 2 8 1 99 0 2 0 6 4 2 6 99 0 5 5 3 91 0 3 3 62
              3 76
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 18 values pushed */
          58 58 58 68 58 67 39 43 52 35 19 37 54 38 17 11 8 29
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="grave" xMin="163" yMin="622" xMax="442" yMax="835">
      <contour>
        <pt x="163" y="716" on="1"/>
        <pt x="224" y="835" on="1"/>
        <pt x="442" y="702" on="1"/>
        <pt x="399" y="622" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 4 values pushed */
          3 1 1 48
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="greater" xMin="70" yMin="15" xMax="531" yMax="613">
      <contour>
        <pt x="531" y="371" on="1"/>
        <pt x="531" y="257" on="1"/>
        <pt x="141" y="15" on="1"/>
        <pt x="70" y="123" on="1"/>
        <pt x="394" y="314" on="1"/>
        <pt x="70" y="499" on="1"/>
        <pt x="140" y="613" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 4 values pushed */
          6 2 1 48
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="h" xMin="70" yMin="0" xMax="530" yMax="758">
      <contour>
        <pt x="228" y="478" on="1"/>
        <pt x="295" y="549" on="0"/>
        <pt x="384" y="549" on="1"/>
        <pt x="454" y="549" on="0"/>
        <pt x="530" y="466" on="0"/>
        <pt x="530" y="390" on="1"/>
        <pt x="530" y="0" on="1"/>
        <pt x="372" y="0" on="1"/>
        <pt x="372" y="346" on="1"/>
        <pt x="372" y="394" on="0"/>
        <pt x="350" y="432" on="0"/>
        <pt x="321" y="432" on="1"/>
        <pt x="297" y="432" on="0"/>
        <pt x="252" y="399" on="0"/>
        <pt x="228" y="367" on="1"/>
        <pt x="228" y="0" on="1"/>
        <pt x="70" y="0" on="1"/>
        <pt x="70" y="742" on="1"/>
        <pt x="228" y="758" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 15 values pushed */
          0 1 2 0 14 1 1 2 2 74 18 17 2 0 72
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 17 values pushed */
            0 2 2 0 91 0 0 0 68 75 3 1 1 1 58 1 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 15 values pushed */
              0 0 0 2 1 0 2 99 3 1 1 1 58 1 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 22 values pushed */
              3 1 1 2 1 115 0 0 2 2 0 87 0 0 0 2 91 0 2 0 2 79
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 7 values pushed */
          19 35 19 33 4 8 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="hyphen" xMin="108" yMin="252" xMax="492" yMax="374">
      <contour>
        <pt x="108" y="374" on="1"/>
        <pt x="492" y="374" on="1"/>
        <pt x="492" y="252" on="1"/>
        <pt x="108" y="252" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 21 values pushed */
          0 0 1 1 0 85 0 0 0 1 89 0 1 0 1 77 17 16 2 8 22
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="i" xMin="86" yMin="0" xMax="530" yMax="809">
      <contour>
        <pt x="340" y="809" on="0"/>
        <pt x="392" y="758" on="0"/>
        <pt x="392" y="720" on="1"/>
        <pt x="392" y="681" on="0"/>
        <pt x="340" y="631" on="0"/>
        <pt x="299" y="631" on="1"/>
        <pt x="258" y="631" on="0"/>
        <pt x="205" y="682" on="0"/>
        <pt x="205" y="720" on="1"/>
        <pt x="205" y="758" on="0"/>
        <pt x="258" y="809" on="0"/>
        <pt x="299" y="809" on="1"/>
      </contour>
      <contour>
        <pt x="394" y="108" on="1"/>
        <pt x="530" y="108" on="1"/>
        <pt x="530" y="0" on="1"/>
        <pt x="86" y="0" on="1"/>
        <pt x="86" y="108" on="1"/>
        <pt x="236" y="108" on="1"/>
        <pt x="236" y="423" on="1"/>
        <pt x="91" y="423" on="1"/>
        <pt x="91" y="531" on="1"/>
        <pt x="394" y="531" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          16
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 33 values pushed */
            0 0 0 1 91 7 1 1 1 67 75 0 5 5 6 89 0 6 6 60 75 4 1 2 2
            3 89 0 3 3 58 3 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            43
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 31 values pushed */
              7 1 1 0 0 6 1 0 99 0 5 5 6 89 0 6 6 60 75 4 1 2 2 3 89
              0 3 3 58 3 76
            ELSE[ ]	/* Else */
              MPPEM[ ]	/* MeasurePixelPerEm */
              PUSHB[ ]	/* 1 value pushed */
              45
              LT[ ]	/* LessThan */
              IF[ ]	/* If */
                NPUSHB[ ]	/* 29 values pushed */
                7 1 1 0 0 6 1 0 99 0 6 0 5 2 6 5 97 4 1 2 2 3 89 0 3
                3 58 3 76
              ELSE[ ]	/* Else */
                NPUSHB[ ]	/* 35 values pushed */
                7 1 1 0 0 6 1 0 99 0 6 0 5 2 6 5 97 4 1 2 3 3 2 85 4
                1 2 2 3 89 0 3 2 3 77
              EIF[ ]	/* EndIf */
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 20 values pushed */
          0 0 21 20 19 18 17 16 15 14 13 12 0 11 0 10 36 8 8 21
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="j" xMin="70" yMin="-222" xMax="472" yMax="809">
      <contour>
        <pt x="410" y="809" on="0"/>
        <pt x="463" y="758" on="0"/>
        <pt x="463" y="720" on="1"/>
        <pt x="463" y="682" on="0"/>
        <pt x="410" y="631" on="0"/>
        <pt x="370" y="631" on="1"/>
        <pt x="328" y="631" on="0"/>
        <pt x="276" y="681" on="0"/>
        <pt x="276" y="720" on="1"/>
        <pt x="276" y="758" on="0"/>
        <pt x="329" y="809" on="0"/>
        <pt x="370" y="809" on="1"/>
      </contour>
      <contour>
        <pt x="472" y="154" on="1"/>
        <pt x="472" y="41" on="0"/>
        <pt x="388" y="-108" on="0"/>
        <pt x="223" y="-197" on="0"/>
        <pt x="94" y="-222" on="1"/>
        <pt x="70" y="-101" on="1"/>
        <pt x="155" y="-82" on="0"/>
        <pt x="260" y="-26" on="0"/>
        <pt x="314" y="69" on="0"/>
        <pt x="314" y="144" on="1"/>
        <pt x="314" y="423" on="1"/>
        <pt x="124" y="423" on="1"/>
        <pt x="124" y="531" on="1"/>
        <pt x="472" y="531" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 5 values pushed */
          17 16 2 2 71
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          16
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 22 values pushed */
            0 0 0 1 91 4 1 1 1 67 75 0 2 2 3 89 0 3 3 60 2 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            43
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 20 values pushed */
              4 1 1 0 0 3 1 0 99 0 2 2 3 89 0 3 3 60 2 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 25 values pushed */
              4 1 1 0 0 3 1 0 99 0 3 2 2 3 85 0 3 3 2 89 0 2 3 2 77
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 14 values pushed */
          0 0 25 24 23 22 0 11 0 10 36 5 8 21
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="k" xMin="70" yMin="0" xMax="588" yMax="759">
      <contour>
        <pt x="228" y="0" on="1"/>
        <pt x="70" y="0" on="1"/>
        <pt x="70" y="742" on="1"/>
        <pt x="228" y="759" on="1"/>
      </contour>
      <contour>
        <pt x="399" y="296" on="1"/>
        <pt x="588" y="0" on="1"/>
        <pt x="408" y="0" on="1"/>
        <pt x="234" y="291" on="1"/>
        <pt x="409" y="531" on="1"/>
        <pt x="574" y="531" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 11 values pushed */
          7 1 0 2 1 74 3 2 2 2 72
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 12 values pushed */
            0 2 2 60 75 1 1 0 0 58 0 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 12 values pushed */
              0 2 2 0 89 1 1 0 0 58 0 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 17 values pushed */
              0 2 0 0 2 85 0 2 2 0 89 1 1 0 2 0 77
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 6 values pushed */
          18 20 16 3 8 23
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="l" xMin="33" yMin="-17" xMax="528" yMax="742">
      <contour>
        <pt x="347" y="167" on="1"/>
        <pt x="347" y="108" on="0"/>
        <pt x="415" y="108" on="1"/>
        <pt x="452" y="108" on="0"/>
        <pt x="491" y="124" on="1"/>
        <pt x="528" y="18" on="1"/>
        <pt x="464" y="-17" on="0"/>
        <pt x="375" y="-17" on="1"/>
        <pt x="282" y="-17" on="0"/>
        <pt x="189" y="90" on="0"/>
        <pt x="189" y="187" on="1"/>
        <pt x="189" y="634" on="1"/>
        <pt x="33" y="634" on="1"/>
        <pt x="33" y="742" on="1"/>
        <pt x="347" y="742" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 10 values pushed */
          4 1 0 2 5 1 1 0 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          16
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 21 values pushed */
            0 2 2 3 89 0 3 3 59 75 0 0 0 1 91 0 1 1 66 1 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 19 values pushed */
              0 3 0 2 0 3 2 97 0 0 0 1 91 0 1 1 66 1 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 24 values pushed */
              0 3 0 2 0 3 2 97 0 0 1 1 0 87 0 0 0 1 91 0 1 0 1 79
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 7 values pushed */
          17 19 35 33 4 8 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="less" xMin="70" yMin="15" xMax="531" yMax="613">
      <contour>
        <pt x="531" y="504" on="1"/>
        <pt x="206" y="314" on="1"/>
        <pt x="531" y="128" on="1"/>
        <pt x="459" y="15" on="1"/>
        <pt x="70" y="257" on="1"/>
        <pt x="70" y="370" on="1"/>
        <pt x="461" y="613" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 4 values pushed */
          6 3 1 48
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="m" xMin="27" yMin="0" xMax="573" yMax="549">
      <contour>
        <pt x="520" y="549" on="0"/>
        <pt x="573" y="474" on="0"/>
        <pt x="573" y="393" on="1"/>
        <pt x="573" y="0" on="1"/>
        <pt x="438" y="0" on="1"/>
        <pt x="438" y="375" on="1"/>
        <pt x="438" y="404" on="0"/>
        <pt x="427" y="426" on="0"/>
        <pt x="412" y="426" on="1"/>
        <pt x="384" y="426" on="0"/>
        <pt x="357" y="391" on="1"/>
        <pt x="357" y="0" on="1"/>
        <pt x="245" y="0" on="1"/>
        <pt x="245" y="375" on="1"/>
        <pt x="245" y="404" on="0"/>
        <pt x="234" y="426" on="0"/>
        <pt x="219" y="426" on="1"/>
        <pt x="191" y="426" on="0"/>
        <pt x="164" y="391" on="1"/>
        <pt x="164" y="0" on="1"/>
        <pt x="27" y="0" on="1"/>
        <pt x="27" y="531" on="1"/>
        <pt x="142" y="531" on="1"/>
        <pt x="153" y="480" on="1"/>
        <pt x="179" y="516" on="0"/>
        <pt x="230" y="549" on="0"/>
        <pt x="264" y="549" on="1"/>
        <pt x="295" y="549" on="0"/>
        <pt x="337" y="518" on="0"/>
        <pt x="346" y="486" on="1"/>
        <pt x="400" y="549" on="0"/>
        <pt x="463" y="549" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 12 values pushed */
          29 23 2 1 5 18 10 2 0 1 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          14
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 22 values pushed */
            3 1 1 1 5 91 8 7 6 3 5 5 60 75 4 2 2 0 0 58 0 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            43
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 26 values pushed */
              0 5 5 60 75 3 1 1 1 6 91 8 7 2 6 6 68 75 4 2 2 0 0 58 0
              76
            ELSE[ ]	/* Else */
              MPPEM[ ]	/* MeasurePixelPerEm */
              PUSHB[ ]	/* 1 value pushed */
              45
              LT[ ]	/* LessThan */
              IF[ ]	/* If */
                NPUSHB[ ]	/* 24 values pushed */
                8 7 2 6 3 1 1 0 6 1 99 0 5 5 0 89 4 2 2 0 0 58 0 76
              ELSE[ ]	/* Else */
                NPUSHB[ ]	/* 29 values pushed */
                0 5 1 0 5 85 8 7 2 6 3 1 1 0 6 1 99 0 5 5 0 89 4 2 2
                0 5 0 77
              EIF[ ]	/* EndIf */
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 16 values pushed */
          0 0 0 31 0 30 35 17 18 35 18 35 19 9 8 27
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="n" xMin="70" yMin="0" xMax="530" yMax="549">
      <contour>
        <pt x="70" y="531" on="1"/>
        <pt x="208" y="531" on="1"/>
        <pt x="219" y="470" on="1"/>
        <pt x="255" y="510" on="0"/>
        <pt x="334" y="549" on="0"/>
        <pt x="384" y="549" on="1"/>
        <pt x="453" y="549" on="0"/>
        <pt x="530" y="465" on="0"/>
        <pt x="530" y="390" on="1"/>
        <pt x="530" y="0" on="1"/>
        <pt x="372" y="0" on="1"/>
        <pt x="372" y="344" on="1"/>
        <pt x="372" y="394" on="0"/>
        <pt x="350" y="432" on="0"/>
        <pt x="321" y="432" on="1"/>
        <pt x="297" y="432" on="0"/>
        <pt x="252" y="401" on="0"/>
        <pt x="228" y="371" on="1"/>
        <pt x="228" y="0" on="1"/>
        <pt x="70" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 10 values pushed */
          2 1 3 0 17 1 2 3 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          14
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 18 values pushed */
            0 3 3 0 91 1 1 0 0 60 75 4 1 2 2 58 2 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            43
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 22 values pushed */
              0 0 0 60 75 0 3 3 1 91 0 1 1 68 75 4 1 2 2 58 2 76
            ELSE[ ]	/* Else */
              MPPEM[ ]	/* MeasurePixelPerEm */
              PUSHB[ ]	/* 1 value pushed */
              45
              LT[ ]	/* LessThan */
              IF[ ]	/* If */
                NPUSHB[ ]	/* 20 values pushed */
                0 1 0 3 2 1 3 99 0 0 0 2 89 4 1 2 2 58 2 76
              ELSE[ ]	/* Else */
                NPUSHB[ ]	/* 25 values pushed */
                0 0 3 2 0 85 0 1 0 3 2 1 3 99 0 0 0 2 89 4 1 2 0 2 77
              EIF[ ]	/* EndIf */
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 8 values pushed */
          19 35 19 35 16 5 8 25
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="nine" xMin="44" yMin="-30" xMax="551" yMax="711">
      <contour>
        <pt x="420" y="711" on="0"/>
        <pt x="551" y="561" on="0"/>
        <pt x="551" y="434" on="1"/>
        <pt x="551" y="301" on="0"/>
        <pt x="461" y="117" on="0"/>
        <pt x="276" y="1" on="0"/>
        <pt x="129" y="-30" on="1"/>
        <pt x="96" y="81" on="1"/>
        <pt x="220" y="112" on="0"/>
        <pt x="358" y="215" on="0"/>
        <pt x="381" y="296" on="1"/>
        <pt x="349" y="268" on="0"/>
        <pt x="281" y="239" on="0"/>
        <pt x="240" y="239" on="1"/>
        <pt x="186" y="239" on="0"/>
        <pt x="96" y="295" on="0"/>
        <pt x="44" y="396" on="0"/>
        <pt x="44" y="461" on="1"/>
        <pt x="44" y="535" on="0"/>
        <pt x="110" y="648" on="0"/>
        <pt x="224" y="711" on="0"/>
        <pt x="296" y="711" on="1"/>
      </contour>
      <contour>
        <pt x="203" y="406" on="0"/>
        <pt x="250" y="350" on="0"/>
        <pt x="289" y="350" on="1"/>
        <pt x="340" y="350" on="0"/>
        <pt x="388" y="390" on="1"/>
        <pt x="389" y="465" on="0"/>
        <pt x="374" y="553" on="0"/>
        <pt x="334" y="598" on="0"/>
        <pt x="295" y="598" on="1"/>
        <pt x="251" y="598" on="0"/>
        <pt x="203" y="533" on="0"/>
        <pt x="203" y="466" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 15 values pushed */
          26 1 2 3 10 1 0 2 2 74 7 6 2 0 71
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 19 values pushed */
            0 2 0 0 2 0 95 0 3 3 1 91 4 1 1 1 65 3 76
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 25 values pushed */
            4 1 1 0 3 2 1 3 99 0 2 0 0 2 87 0 2 2 0 91 0 0 2 0 79
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 14 values pushed */
          0 0 31 29 25 23 0 21 0 20 44 5 8 21
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="numbersign" xMin="35" yMin="0" xMax="566" yMax="693">
      <contour>
        <pt x="466" y="249" on="1"/>
        <pt x="529" y="249" on="1"/>
        <pt x="529" y="145" on="1"/>
        <pt x="452" y="145" on="1"/>
        <pt x="433" y="0" on="1"/>
        <pt x="303" y="0" on="1"/>
        <pt x="322" y="145" on="1"/>
        <pt x="226" y="145" on="1"/>
        <pt x="207" y="0" on="1"/>
        <pt x="77" y="0" on="1"/>
        <pt x="95" y="145" on="1"/>
        <pt x="35" y="145" on="1"/>
        <pt x="35" y="249" on="1"/>
        <pt x="109" y="249" on="1"/>
        <pt x="135" y="446" on="1"/>
        <pt x="72" y="446" on="1"/>
        <pt x="72" y="551" on="1"/>
        <pt x="149" y="551" on="1"/>
        <pt x="167" y="693" on="1"/>
        <pt x="298" y="693" on="1"/>
        <pt x="279" y="551" on="1"/>
        <pt x="375" y="551" on="1"/>
        <pt x="394" y="693" on="1"/>
        <pt x="524" y="693" on="1"/>
        <pt x="505" y="551" on="1"/>
        <pt x="566" y="551" on="1"/>
        <pt x="566" y="446" on="1"/>
        <pt x="491" y="446" on="1"/>
      </contour>
      <contour>
        <pt x="335" y="249" on="1"/>
        <pt x="361" y="446" on="1"/>
        <pt x="265" y="446" on="1"/>
        <pt x="239" y="249" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          25
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 40 values pushed */
            16 15 6 3 0 5 3 2 1 2 0 1 97 11 1 9 9 57 75 14 13 2 7 7 8
            89 12 10 2 8 8 60 75 4 1 2 2 58 2 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            43
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 38 values pushed */
              12 10 2 8 14 13 2 7 0 8 7 98 16 15 6 3 0 5 3 2 1 2 0 1 97
              11 1 9 9 57 75 4 1 2 2 58 2 76
            ELSE[ ]	/* Else */
              MPPEM[ ]	/* MeasurePixelPerEm */
              PUSHB[ ]	/* 1 value pushed */
              45
              LT[ ]	/* LessThan */
              IF[ ]	/* If */
                NPUSHB[ ]	/* 38 values pushed */
                11 1 9 8 9 114 12 10 2 8 14 13 2 7 0 8 7 98 16 15 6 3 0 5 3
                2 1 2 0 1 97 4 1 2 2 58 2 76
              ELSE[ ]	/* Else */
                NPUSHB[ ]	/* 48 values pushed */
                11 1 9 8 9 114 4 1 2 1 2 115 12 10 2 8 14 13 2 7 0 8 7 98 16
                15 6 3 0 1 1 0 85 16 15 6 3 0 0 1 89 5 3 2 1 0 1 77
              EIF[ ]	/* EndIf */
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 30 values pushed */
          28 28 28 31 28 31 30 29 27 26 25 24 23 22 21 20 19 18 17 17 17 17 17 17 17
          17 16 17 8 29
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="o" xMin="42" yMin="-17" xMax="558" yMax="549">
      <contour>
        <pt x="421" y="549" on="0"/>
        <pt x="558" y="396" on="0"/>
        <pt x="558" y="267" on="1"/>
        <pt x="558" y="133" on="0"/>
        <pt x="422" y="-17" on="0"/>
        <pt x="300" y="-17" on="1"/>
        <pt x="178" y="-17" on="0"/>
        <pt x="42" y="132" on="0"/>
        <pt x="42" y="266" on="1"/>
        <pt x="42" y="351" on="0"/>
        <pt x="103" y="478" on="0"/>
        <pt x="220" y="549" on="0"/>
        <pt x="300" y="549" on="1"/>
      </contour>
      <contour>
        <pt x="251" y="432" on="0"/>
        <pt x="205" y="353" on="0"/>
        <pt x="205" y="266" on="1"/>
        <pt x="205" y="178" on="0"/>
        <pt x="251" y="99" on="0"/>
        <pt x="300" y="99" on="1"/>
        <pt x="349" y="99" on="0"/>
        <pt x="395" y="179" on="0"/>
        <pt x="395" y="267" on="1"/>
        <pt x="395" y="353" on="0"/>
        <pt x="349" y="432" on="0"/>
        <pt x="300" y="432" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 23 values pushed */
            5 1 3 3 1 91 4 1 1 1 68 75 0 2 2 0 91 0 0 0 66 0 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 21 values pushed */
              4 1 1 5 1 3 2 1 3 99 0 2 2 0 91 0 0 0 66 0 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 26 values pushed */
              4 1 1 5 1 3 2 1 3 99 0 2 0 0 2 87 0 2 2 0 91 0 0 2 0
              79
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 18 values pushed */
          13 13 0 0 13 24 13 23 19 17 0 12 0 11 36 6 8 21
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="one" xMin="58" yMin="0" xMax="551" yMax="693">
      <contour>
        <pt x="551" y="120" on="1"/>
        <pt x="551" y="0" on="1"/>
        <pt x="101" y="0" on="1"/>
        <pt x="101" y="120" on="1"/>
        <pt x="268" y="120" on="1"/>
        <pt x="268" y="538" on="1"/>
        <pt x="125" y="448" on="1"/>
        <pt x="58" y="557" on="1"/>
        <pt x="282" y="693" on="1"/>
        <pt x="422" y="693" on="1"/>
        <pt x="422" y="120" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          7 6 5 3 1 2 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 18 values pushed */
            0 2 2 57 75 4 3 2 1 1 0 90 0 0 0 58 0 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 18 values pushed */
              0 2 1 2 114 4 3 2 1 1 0 90 0 0 0 58 0 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 25 values pushed */
              0 2 1 2 114 4 3 2 1 0 0 1 85 4 3 2 1 1 0 90 0 0 1 0 78
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 12 values pushed */
          0 0 0 10 0 10 20 17 17 5 8 23
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="p" xMin="70" yMin="-222" xMax="558" yMax="549">
      <contour>
        <pt x="464" y="549" on="0"/>
        <pt x="558" y="402" on="0"/>
        <pt x="558" y="267" on="1"/>
        <pt x="558" y="185" on="0"/>
        <pt x="509" y="56" on="0"/>
        <pt x="417" y="-17" on="0"/>
        <pt x="354" y="-17" on="1"/>
        <pt x="277" y="-17" on="0"/>
        <pt x="228" y="38" on="1"/>
        <pt x="228" y="-205" on="1"/>
        <pt x="70" y="-222" on="1"/>
        <pt x="70" y="531" on="1"/>
        <pt x="210" y="531" on="1"/>
        <pt x="217" y="472" on="1"/>
        <pt x="248" y="511" on="0"/>
        <pt x="325" y="549" on="0"/>
        <pt x="364" y="549" on="1"/>
      </contour>
      <contour>
        <pt x="265" y="432" on="0"/>
        <pt x="228" y="370" on="1"/>
        <pt x="228" y="146" on="1"/>
        <pt x="245" y="122" on="0"/>
        <pt x="282" y="99" on="0"/>
        <pt x="306" y="99" on="1"/>
        <pt x="350" y="99" on="0"/>
        <pt x="395" y="178" on="0"/>
        <pt x="395" y="265" on="1"/>
        <pt x="395" y="359" on="0"/>
        <pt x="355" y="432" on="0"/>
        <pt x="315" y="432" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 20 values pushed */
          13 1 4 1 19 18 2 3 4 8 1 0 3 3 74 10 9 2 0 71
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          14
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 24 values pushed */
            6 1 4 4 1 91 5 2 2 1 1 60 75 0 3 3 0 91 0 0 0 66 0 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            43
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 28 values pushed */
              0 1 1 60 75 6 1 4 4 2 91 5 1 2 2 68 75 0 3 3 0 91 0 0 0
              66 0 76
            ELSE[ ]	/* Else */
              MPPEM[ ]	/* MeasurePixelPerEm */
              PUSHB[ ]	/* 1 value pushed */
              45
              LT[ ]	/* LessThan */
              IF[ ]	/* If */
                NPUSHB[ ]	/* 29 values pushed */
                0 1 2 4 2 1 4 112 5 1 2 6 1 4 3 2 4 99 0 3 3 0 91 0 0
                0 66 0 76
              ELSE[ ]	/* Else */
                NPUSHB[ ]	/* 34 values pushed */
                0 1 2 4 2 1 4 112 5 1 2 6 1 4 3 2 4 99 0 3 0 0 3 87 0
                3 3 0 91 0 0 3 0 79
              EIF[ ]	/* EndIf */
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 19 values pushed */
          17 17 0 0 17 28 17 27 23 21 0 16 0 15 20 37 7 8 22
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="parenleft" xMin="101" yMin="-158" xMax="450" yMax="858">
      <contour>
        <pt x="261" y="266" on="0"/>
        <pt x="296" y="134" on="0"/>
        <pt x="377" y="5" on="0"/>
        <pt x="450" y="-75" on="1"/>
        <pt x="359" y="-158" on="1"/>
        <pt x="232" y="-49" on="0"/>
        <pt x="101" y="194" on="0"/>
        <pt x="101" y="350" on="1"/>
        <pt x="101" y="506" on="0"/>
        <pt x="232" y="749" on="0"/>
        <pt x="359" y="858" on="1"/>
        <pt x="450" y="775" on="1"/>
        <pt x="348" y="663" on="0"/>
        <pt x="261" y="472" on="0"/>
        <pt x="261" y="350" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 4 values pushed */
          10 4 1 48
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="parenright" xMin="150" yMin="-158" xMax="499" yMax="858">
      <contour>
        <pt x="339" y="472" on="0"/>
        <pt x="252" y="663" on="0"/>
        <pt x="150" y="775" on="1"/>
        <pt x="241" y="858" on="1"/>
        <pt x="368" y="749" on="0"/>
        <pt x="499" y="506" on="0"/>
        <pt x="499" y="350" on="1"/>
        <pt x="499" y="194" on="0"/>
        <pt x="368" y="-49" on="0"/>
        <pt x="241" y="-158" on="1"/>
        <pt x="150" y="-75" on="1"/>
        <pt x="223" y="5" on="0"/>
        <pt x="304" y="134" on="0"/>
        <pt x="339" y="266" on="0"/>
        <pt x="339" y="350" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 4 values pushed */
          9 3 1 48
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="percent" xMin="3" yMin="-29" xMax="596" yMax="716">
      <contour>
        <pt x="509" y="681" on="1"/>
        <pt x="168" y="-29" on="1"/>
        <pt x="85" y="6" on="1"/>
        <pt x="425" y="716" on="1"/>
      </contour>
      <contour>
        <pt x="213" y="711" on="0"/>
        <pt x="289" y="625" on="0"/>
        <pt x="289" y="554" on="1"/>
        <pt x="289" y="482" on="0"/>
        <pt x="213" y="397" on="0"/>
        <pt x="147" y="397" on="1"/>
        <pt x="79" y="397" on="0"/>
        <pt x="3" y="482" on="0"/>
        <pt x="3" y="554" on="1"/>
        <pt x="3" y="624" on="0"/>
        <pt x="80" y="711" on="0"/>
        <pt x="147" y="711" on="1"/>
      </contour>
      <contour>
        <pt x="123" y="633" on="0"/>
        <pt x="107" y="595" on="0"/>
        <pt x="107" y="554" on="1"/>
        <pt x="107" y="515" on="0"/>
        <pt x="124" y="475" on="0"/>
        <pt x="147" y="475" on="1"/>
        <pt x="170" y="475" on="0"/>
        <pt x="186" y="513" on="0"/>
        <pt x="186" y="554" on="1"/>
        <pt x="186" y="597" on="0"/>
        <pt x="170" y="633" on="0"/>
        <pt x="147" y="633" on="1"/>
      </contour>
      <contour>
        <pt x="520" y="307" on="0"/>
        <pt x="596" y="222" on="0"/>
        <pt x="596" y="150" on="1"/>
        <pt x="596" y="78" on="0"/>
        <pt x="520" y="-6" on="0"/>
        <pt x="454" y="-6" on="1"/>
        <pt x="386" y="-6" on="0"/>
        <pt x="310" y="78" on="0"/>
        <pt x="310" y="150" on="1"/>
        <pt x="310" y="220" on="0"/>
        <pt x="387" y="307" on="0"/>
        <pt x="454" y="307" on="1"/>
      </contour>
      <contour>
        <pt x="430" y="230" on="0"/>
        <pt x="414" y="191" on="0"/>
        <pt x="414" y="150" on="1"/>
        <pt x="414" y="112" on="0"/>
        <pt x="431" y="72" on="0"/>
        <pt x="454" y="72" on="1"/>
        <pt x="477" y="72" on="0"/>
        <pt x="493" y="110" on="0"/>
        <pt x="493" y="150" on="1"/>
        <pt x="493" y="193" on="0"/>
        <pt x="477" y="230" on="0"/>
        <pt x="454" y="230" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 14 values pushed */
          2 1 4 6 1 74 3 1 1 72 1 1 4 71
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 41 values pushed */
            0 2 0 0 5 2 0 99 10 1 5 11 1 7 6 5 7 99 9 1 3 3 1 91 8
            1 1 1 65 75 0 6 6 4 91 0 4 4 58 4 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 39 values pushed */
              8 1 1 9 1 3 2 1 3 99 0 2 0 0 5 2 0 99 10 1 5 11 1 7 6
              5 7 99 0 6 6 4 91 0 4 4 58 4 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 44 values pushed */
              8 1 1 9 1 3 2 1 3 99 0 2 0 0 5 2 0 99 10 1 5 11 1 7 6
              5 7 99 0 6 4 4 6 87 0 6 6 4 91 0 4 6 4 79
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 34 values pushed */
          40 40 28 28 16 16 4 4 40 51 40 50 46 44 28 39 28 38 34 32 16 27 16 26 22
          20 4 15 4 14 40 12 8 21
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="period" xMin="189" yMin="-17" xMax="411" yMax="206">
      <contour>
        <pt x="189" y="140" on="0"/>
        <pt x="254" y="206" on="0"/>
        <pt x="300" y="206" on="1"/>
        <pt x="346" y="206" on="0"/>
        <pt x="411" y="140" on="0"/>
        <pt x="411" y="95" on="1"/>
        <pt x="411" y="49" on="0"/>
        <pt x="346" y="-17" on="0"/>
        <pt x="300" y="-17" on="1"/>
        <pt x="254" y="-17" on="0"/>
        <pt x="189" y="49" on="0"/>
        <pt x="189" y="95" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          45
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 11 values pushed */
            0 0 0 1 91 0 1 1 66 1 76
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 16 values pushed */
            0 0 1 1 0 87 0 0 0 1 91 0 1 0 1 79
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 5 values pushed */
          36 33 2 8 22
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="plus" xMin="83" yMin="96" xMax="517" yMax="529">
      <contour>
        <pt x="365" y="373" on="1"/>
        <pt x="517" y="373" on="1"/>
        <pt x="517" y="252" on="1"/>
        <pt x="365" y="252" on="1"/>
        <pt x="365" y="96" on="1"/>
        <pt x="234" y="96" on="1"/>
        <pt x="234" y="252" on="1"/>
        <pt x="83" y="252" on="1"/>
        <pt x="83" y="373" on="1"/>
        <pt x="234" y="373" on="1"/>
        <pt x="234" y="529" on="1"/>
        <pt x="365" y="529" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 21 values pushed */
            4 1 0 3 1 1 2 0 1 97 0 2 2 5 89 0 5 5 60 2 76
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 26 values pushed */
            0 5 0 2 5 85 4 1 0 3 1 1 2 0 1 97 0 5 5 2 89 0 2 5 2
            77
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 9 values pushed */
          17 17 17 17 17 16 6 8 26
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="q" xMin="42" yMin="-222" xMax="530" yMax="549">
      <contour>
        <pt x="294" y="549" on="0"/>
        <pt x="361" y="518" on="0"/>
        <pt x="385" y="488" on="1"/>
        <pt x="392" y="531" on="1"/>
        <pt x="530" y="531" on="1"/>
        <pt x="530" y="-222" on="1"/>
        <pt x="372" y="-205" on="1"/>
        <pt x="372" y="45" on="1"/>
        <pt x="320" y="-17" on="0"/>
        <pt x="236" y="-17" on="1"/>
        <pt x="137" y="-17" on="0"/>
        <pt x="42" y="133" on="0"/>
        <pt x="42" y="267" on="1"/>
        <pt x="42" y="349" on="0"/>
        <pt x="92" y="477" on="0"/>
        <pt x="188" y="549" on="0"/>
        <pt x="255" y="549" on="1"/>
      </contour>
      <contour>
        <pt x="251" y="433" on="0"/>
        <pt x="205" y="353" on="0"/>
        <pt x="205" y="266" on="1"/>
        <pt x="205" y="173" on="0"/>
        <pt x="246" y="100" on="0"/>
        <pt x="286" y="100" on="1"/>
        <pt x="337" y="100" on="0"/>
        <pt x="372" y="160" on="1"/>
        <pt x="372" y="389" on="1"/>
        <pt x="356" y="411" on="0"/>
        <pt x="319" y="433" on="0"/>
        <pt x="296" y="433" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 20 values pushed */
          2 1 4 0 25 24 2 3 4 7 1 1 3 3 74 6 5 2 1 71
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          14
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 24 values pushed */
            6 1 4 4 0 91 5 2 2 0 0 60 75 0 3 3 1 91 0 1 1 66 1 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            43
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 28 values pushed */
              0 0 0 60 75 6 1 4 4 2 91 5 1 2 2 68 75 0 3 3 1 91 0 1 1
              66 1 76
            ELSE[ ]	/* Else */
              MPPEM[ ]	/* MeasurePixelPerEm */
              PUSHB[ ]	/* 1 value pushed */
              45
              LT[ ]	/* LessThan */
              IF[ ]	/* If */
                NPUSHB[ ]	/* 29 values pushed */
                0 0 2 4 2 0 4 112 5 1 2 6 1 4 3 2 4 99 0 3 3 1 91 0 1
                1 66 1 76
              ELSE[ ]	/* Else */
                NPUSHB[ ]	/* 34 values pushed */
                0 0 2 4 2 0 4 112 5 1 2 6 1 4 3 2 4 99 0 3 1 1 3 87 0
                3 3 1 91 0 1 3 1 79
              EIF[ ]	/* EndIf */
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 19 values pushed */
          17 17 0 0 17 28 17 27 23 21 0 16 0 15 36 19 7 8 22
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="question" xMin="56" yMin="-17" xMax="526" yMax="711">
      <contour>
        <pt x="369" y="711" on="0"/>
        <pt x="473" y="665" on="0"/>
        <pt x="526" y="589" on="0"/>
        <pt x="526" y="543" on="1"/>
        <pt x="526" y="502" on="0"/>
        <pt x="497" y="444" on="0"/>
        <pt x="455" y="407" on="0"/>
        <pt x="421" y="384" on="1"/>
        <pt x="380" y="357" on="0"/>
        <pt x="340" y="312" on="0"/>
        <pt x="340" y="276" on="1"/>
        <pt x="340" y="255" on="1"/>
        <pt x="196" y="255" on="1"/>
        <pt x="196" y="281" on="1"/>
        <pt x="196" y="328" on="0"/>
        <pt x="226" y="392" on="0"/>
        <pt x="268" y="431" on="0"/>
        <pt x="300" y="453" on="1"/>
        <pt x="332" y="475" on="0"/>
        <pt x="361" y="506" on="0"/>
        <pt x="361" y="529" on="1"/>
        <pt x="361" y="556" on="0"/>
        <pt x="317" y="586" on="0"/>
        <pt x="281" y="586" on="1"/>
        <pt x="247" y="586" on="0"/>
        <pt x="183" y="555" on="0"/>
        <pt x="156" y="525" on="1"/>
        <pt x="56" y="603" on="1"/>
        <pt x="148" y="711" on="0"/>
        <pt x="296" y="711" on="1"/>
      </contour>
      <contour>
        <pt x="307" y="164" on="0"/>
        <pt x="361" y="111" on="0"/>
        <pt x="361" y="74" on="1"/>
        <pt x="361" y="37" on="0"/>
        <pt x="308" y="-17" on="0"/>
        <pt x="270" y="-17" on="1"/>
        <pt x="233" y="-17" on="0"/>
        <pt x="180" y="36" on="0"/>
        <pt x="180" y="74" on="1"/>
        <pt x="180" y="111" on="0"/>
        <pt x="233" y="164" on="0"/>
        <pt x="270" y="164" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 10 values pushed */
          27 1 1 2 26 1 0 1 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 31 values pushed */
            0 0 1 4 1 0 4 112 0 1 1 2 91 5 1 2 2 65 75 6 1 4 4 3 91
            0 3 3 66 3 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 29 values pushed */
              0 0 1 4 1 0 4 112 5 1 2 0 1 0 2 1 99 6 1 4 4 3 91 0 3
              3 66 3 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 35 values pushed */
              0 0 1 4 1 0 4 112 5 1 2 0 1 0 2 1 99 6 1 4 3 3 4 87 6
              1 4 4 3 91 0 3 4 3 79
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 19 values pushed */
          30 30 0 0 30 41 30 40 36 34 0 29 0 28 42 27 7 8 22
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="quotedbl" xMin="129" yMin="462" xMax="471" yMax="742">
      <contour>
        <pt x="129" y="742" on="1"/>
        <pt x="279" y="742" on="1"/>
        <pt x="260" y="462" on="1"/>
        <pt x="148" y="462" on="1"/>
      </contour>
      <contour>
        <pt x="320" y="742" on="1"/>
        <pt x="471" y="742" on="1"/>
        <pt x="452" y="462" on="1"/>
        <pt x="339" y="462" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          16
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 13 values pushed */
            3 1 1 1 0 89 2 1 0 0 59 1 76
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 19 values pushed */
            2 1 0 1 1 0 85 2 1 0 0 1 89 3 1 1 0 1 77
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 7 values pushed */
          17 17 17 16 4 8 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="quotesingle" xMin="225" yMin="462" xMax="374" yMax="742">
      <contour>
        <pt x="225" y="742" on="1"/>
        <pt x="374" y="742" on="1"/>
        <pt x="356" y="462" on="1"/>
        <pt x="244" y="462" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          16
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 11 values pushed */
            0 1 1 0 89 0 0 0 59 1 76
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 16 values pushed */
            0 0 1 1 0 85 0 0 0 1 89 0 1 0 1 77
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 5 values pushed */
          17 16 2 8 22
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="r" xMin="75" yMin="0" xMax="563" yMax="547">
      <contour>
        <pt x="523" y="547" on="0"/>
        <pt x="563" y="531" on="1"/>
        <pt x="534" y="309" on="1"/>
        <pt x="434" y="309" on="1"/>
        <pt x="434" y="407" on="1"/>
        <pt x="390" y="399" on="0"/>
        <pt x="322" y="319" on="0"/>
        <pt x="303" y="258" on="1"/>
        <pt x="303" y="106" on="1"/>
        <pt x="408" y="106" on="1"/>
        <pt x="408" y="0" on="1"/>
        <pt x="75" y="0" on="1"/>
        <pt x="75" y="106" on="1"/>
        <pt x="145" y="106" on="1"/>
        <pt x="145" y="426" on="1"/>
        <pt x="75" y="426" on="1"/>
        <pt x="75" y="531" on="1"/>
        <pt x="266" y="531" on="1"/>
        <pt x="294" y="412" on="1"/>
        <pt x="323" y="480" on="0"/>
        <pt x="411" y="547" on="0"/>
        <pt x="475" y="547" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          16
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 15 values pushed */
            18 4 2 0 4 7 1 1 0 2 74 1 1 5 72
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 16 values pushed */
            18 4 2 0 4 7 1 1 0 2 74 1 1 5 1 73
          EIF[ ]	/* EndIf */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          16
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 36 values pushed */
            0 4 4 5 91 7 6 2 5 5 60 75 0 0 0 5 91 7 6 2 5 5 60 75 3
            1 1 1 2 89 0 2 2 58 2 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            43
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 33 values pushed */
              0 4 4 5 89 0 5 5 60 75 0 0 0 6 91 7 1 6 6 68 75 3 1 1 1
              2 89 0 2 2 58 2 76
            ELSE[ ]	/* Else */
              MPPEM[ ]	/* MeasurePixelPerEm */
              PUSHB[ ]	/* 1 value pushed */
              45
              LT[ ]	/* LessThan */
              IF[ ]	/* If */
                NPUSHB[ ]	/* 29 values pushed */
                0 5 0 4 0 5 4 97 7 1 6 0 0 1 6 0 97 3 1 1 1 2 89 0 2
                2 58 2 76
              ELSE[ ]	/* Else */
                NPUSHB[ ]	/* 35 values pushed */
                0 5 0 4 0 5 4 97 7 1 6 0 0 1 6 0 97 3 1 1 2 2 1 85 3
                1 1 1 2 89 0 2 1 2 77
              EIF[ ]	/* EndIf */
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 15 values pushed */
          0 0 0 21 0 20 17 17 17 17 21 18 8 8 26
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="s" xMin="48" yMin="-17" xMax="535" yMax="549">
      <contour>
        <pt x="324" y="96" on="0"/>
        <pt x="371" y="121" on="0"/>
        <pt x="371" y="146" on="1"/>
        <pt x="371" y="164" on="0"/>
        <pt x="352" y="186" on="0"/>
        <pt x="300" y="207" on="0"/>
        <pt x="245" y="222" on="1"/>
        <pt x="165" y="243" on="0"/>
        <pt x="81" y="318" on="0"/>
        <pt x="81" y="384" on="1"/>
        <pt x="81" y="457" on="0"/>
        <pt x="202" y="549" on="0"/>
        <pt x="311" y="549" on="1"/>
        <pt x="437" y="549" on="0"/>
        <pt x="526" y="484" on="1"/>
        <pt x="463" y="391" on="1"/>
        <pt x="390" y="436" on="0"/>
        <pt x="316" y="436" on="1"/>
        <pt x="277" y="436" on="0"/>
        <pt x="240" y="416" on="0"/>
        <pt x="240" y="395" on="1"/>
        <pt x="240" y="381" on="0"/>
        <pt x="259" y="362" on="0"/>
        <pt x="312" y="342" on="0"/>
        <pt x="365" y="327" on="1"/>
        <pt x="422" y="311" on="0"/>
        <pt x="495" y="273" on="0"/>
        <pt x="535" y="209" on="0"/>
        <pt x="535" y="159" on="1"/>
        <pt x="535" y="103" on="0"/>
        <pt x="467" y="23" on="0"/>
        <pt x="353" y="-17" on="0"/>
        <pt x="284" y="-17" on="1"/>
        <pt x="210" y="-17" on="0"/>
        <pt x="90" y="25" on="0"/>
        <pt x="48" y="63" on="1"/>
        <pt x="127" y="152" on="1"/>
        <pt x="199" y="96" on="0"/>
        <pt x="283" y="96" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 15 values pushed */
          14 1 1 0 36 15 2 3 1 35 1 2 3 3 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 22 values pushed */
            0 1 1 0 91 0 0 0 68 75 4 1 3 3 2 91 0 2 2 66 2 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 20 values pushed */
              0 0 0 1 3 0 1 99 4 1 3 3 2 91 0 2 2 66 2 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 26 values pushed */
              0 0 0 1 3 0 1 99 4 1 3 2 2 3 87 4 1 3 3 2 91 0 2 3 2
              79
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 12 values pushed */
          0 0 0 38 0 37 45 35 43 5 8 23
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="semicolon" xMin="191" yMin="-198" xMax="404" yMax="539">
      <contour>
        <pt x="344" y="539" on="0"/>
        <pt x="404" y="477" on="0"/>
        <pt x="404" y="434" on="1"/>
        <pt x="404" y="391" on="0"/>
        <pt x="344" y="330" on="0"/>
        <pt x="300" y="330" on="1"/>
        <pt x="256" y="330" on="0"/>
        <pt x="195" y="391" on="0"/>
        <pt x="195" y="434" on="1"/>
        <pt x="195" y="477" on="0"/>
        <pt x="256" y="539" on="0"/>
        <pt x="300" y="539" on="1"/>
      </contour>
      <contour>
        <pt x="345" y="197" on="0"/>
        <pt x="404" y="137" on="0"/>
        <pt x="404" y="93" on="1"/>
        <pt x="404" y="67" on="0"/>
        <pt x="386" y="11" on="0"/>
        <pt x="363" y="-40" on="1"/>
        <pt x="294" y="-198" on="1"/>
        <pt x="191" y="-198" on="1"/>
        <pt x="240" y="7" on="1"/>
        <pt x="219" y="21" on="0"/>
        <pt x="195" y="67" on="0"/>
        <pt x="195" y="94" on="1"/>
        <pt x="195" y="138" on="0"/>
        <pt x="255" y="197" on="0"/>
        <pt x="300" y="197" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 6 values pushed */
          20 1 2 3 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          12
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 23 values pushed */
            0 0 0 1 91 4 1 1 1 60 75 5 1 3 3 2 89 0 2 2 62 2 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            14
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 20 values pushed */
              5 1 3 0 2 3 2 93 0 0 0 1 91 4 1 1 1 60 0 76
            ELSE[ ]	/* Else */
              MPPEM[ ]	/* MeasurePixelPerEm */
              PUSHB[ ]	/* 1 value pushed */
              21
              LT[ ]	/* LessThan */
              IF[ ]	/* If */
                NPUSHB[ ]	/* 23 values pushed */
                0 0 0 1 91 4 1 1 1 60 75 5 1 3 3 2 89 0 2 2 62 2 76
              ELSE[ ]	/* Else */
                MPPEM[ ]	/* MeasurePixelPerEm */
                PUSHB[ ]	/* 1 value pushed */
                43
                LT[ ]	/* LessThan */
                IF[ ]	/* If */
                  NPUSHB[ ]	/* 20 values pushed */
                  5 1 3 0 2 3 2 93 0 0 0 1 91 4 1 1 1 60 0 76
                ELSE[ ]	/* Else */
                  NPUSHB[ ]	/* 27 values pushed */
                  4 1 1 0 0 3 1 0 99 5 1 3 2 2 3 87 5 1 3 3 2 89 0 2 3
                  2 77
                EIF[ ]	/* EndIf */
              EIF[ ]	/* EndIf */
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 18 values pushed */
          12 12 0 0 12 26 12 25 19 18 0 11 0 10 36 6 8 21
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="seven" xMin="68" yMin="-16" xMax="532" yMax="693">
      <contour>
        <pt x="114" y="31" on="1"/>
        <pt x="372" y="574" on="1"/>
        <pt x="68" y="574" on="1"/>
        <pt x="68" y="693" on="1"/>
        <pt x="532" y="693" on="1"/>
        <pt x="532" y="586" on="1"/>
        <pt x="264" y="-16" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 10 values pushed */
          5 1 0 1 1 74 6 1 0 71
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 11 values pushed */
            0 0 0 1 89 0 1 1 57 0 76
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 16 values pushed */
            0 1 0 0 1 85 0 1 1 0 89 0 0 1 0 77
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 5 values pushed */
          17 17 2 8 22
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="six" xMin="50" yMin="-17" xMax="554" yMax="711">
      <contour>
        <pt x="415" y="465" on="0"/>
        <pt x="503" y="411" on="0"/>
        <pt x="554" y="306" on="0"/>
        <pt x="554" y="235" on="1"/>
        <pt x="554" y="165" on="0"/>
        <pt x="493" y="50" on="0"/>
        <pt x="382" y="-17" on="0"/>
        <pt x="308" y="-17" on="1"/>
        <pt x="178" y="-17" on="0"/>
        <pt x="50" y="168" on="0"/>
        <pt x="50" y="313" on="1"/>
        <pt x="50" y="430" on="0"/>
        <pt x="123" y="610" on="0"/>
        <pt x="259" y="711" on="0"/>
        <pt x="351" y="711" on="1"/>
        <pt x="436" y="711" on="0"/>
        <pt x="501" y="666" on="1"/>
        <pt x="441" y="570" on="1"/>
        <pt x="401" y="598" on="0"/>
        <pt x="353" y="598" on="1"/>
        <pt x="295" y="598" on="0"/>
        <pt x="220" y="495" on="0"/>
        <pt x="215" y="402" on="1"/>
        <pt x="245" y="433" on="0"/>
        <pt x="322" y="465" on="0"/>
        <pt x="360" y="465" on="1"/>
      </contour>
      <contour>
        <pt x="353" y="96" on="0"/>
        <pt x="396" y="168" on="0"/>
        <pt x="396" y="226" on="1"/>
        <pt x="396" y="295" on="0"/>
        <pt x="357" y="356" on="0"/>
        <pt x="319" y="356" on="1"/>
        <pt x="291" y="356" on="0"/>
        <pt x="237" y="328" on="0"/>
        <pt x="215" y="303" on="1"/>
        <pt x="216" y="196" on="0"/>
        <pt x="259" y="96" on="0"/>
        <pt x="310" y="96" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 18 values pushed */
          16 1 2 1 17 1 3 2 22 1 4 3 34 1 5 4 4 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 31 values pushed */
            6 1 3 0 4 5 3 4 99 0 2 2 1 91 0 1 1 65 75 7 1 5 5 0 91
            0 0 0 66 0 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 29 values pushed */
              0 1 0 2 3 1 2 99 6 1 3 0 4 5 3 4 99 7 1 5 5 0 91 0 0
              0 66 0 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 35 values pushed */
              0 1 0 2 3 1 2 99 6 1 3 0 4 5 3 4 99 7 1 5 0 0 5 87 7
              1 5 5 0 91 0 0 5 0 79
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 20 values pushed */
          26 26 0 0 26 37 26 36 32 30 0 25 0 24 35 37 38 8 8 23
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="slash" xMin="29" yMin="-112" xMax="571" yMax="817">
      <contour>
        <pt x="29" y="-55" on="1"/>
        <pt x="449" y="817" on="1"/>
        <pt x="571" y="760" on="1"/>
        <pt x="152" y="-112" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 4 values pushed */
          3 1 1 48
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name=".space"/>
    <!-- contains no outline data -->
    <TTGlyph name="t" xMin="58" yMin="-17" xMax="548" yMax="665">
      <contour>
        <pt x="473" y="-17" on="0"/>
        <pt x="374" y="-17" on="1"/>
        <pt x="272" y="-17" on="0"/>
        <pt x="169" y="87" on="0"/>
        <pt x="169" y="181" on="1"/>
        <pt x="169" y="422" on="1"/>
        <pt x="58" y="422" on="1"/>
        <pt x="58" y="531" on="1"/>
        <pt x="169" y="531" on="1"/>
        <pt x="169" y="646" on="1"/>
        <pt x="327" y="665" on="1"/>
        <pt x="327" y="531" on="1"/>
        <pt x="498" y="531" on="1"/>
        <pt x="482" y="422" on="1"/>
        <pt x="327" y="422" on="1"/>
        <pt x="327" y="181" on="1"/>
        <pt x="327" y="142" on="0"/>
        <pt x="363" y="108" on="0"/>
        <pt x="403" y="108" on="1"/>
        <pt x="453" y="108" on="0"/>
        <pt x="496" y="132" on="1"/>
        <pt x="548" y="31" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 15 values pushed */
          20 1 5 1 21 1 0 5 2 74 10 9 2 2 72
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 23 values pushed */
            4 1 1 1 2 89 3 1 2 2 60 75 0 5 5 0 91 0 0 0 66 0 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 21 values pushed */
              3 1 2 4 1 1 5 2 1 97 0 5 5 0 91 0 0 0 66 0 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 26 values pushed */
              3 1 2 4 1 1 5 2 1 97 0 5 0 0 5 87 0 5 5 0 91 0 0 5 0
              79
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 9 values pushed */
          35 17 19 17 19 32 6 8 26
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="three" xMin="18" yMin="-17" xMax="530" yMax="711">
      <contour>
        <pt x="344" y="711" on="0"/>
        <pt x="451" y="663" on="0"/>
        <pt x="508" y="582" on="0"/>
        <pt x="508" y="533" on="1"/>
        <pt x="508" y="469" on="0"/>
        <pt x="433" y="387" on="0"/>
        <pt x="366" y="367" on="1"/>
        <pt x="530" y="345" on="0"/>
        <pt x="530" y="195" on="1"/>
        <pt x="530" y="136" on="0"/>
        <pt x="465" y="39" on="0"/>
        <pt x="343" y="-17" on="0"/>
        <pt x="262" y="-17" on="1"/>
        <pt x="186" y="-17" on="0"/>
        <pt x="62" y="37" on="0"/>
        <pt x="18" y="87" on="1"/>
        <pt x="107" y="170" on="1"/>
        <pt x="164" y="104" on="0"/>
        <pt x="251" y="104" on="1"/>
        <pt x="304" y="104" on="0"/>
        <pt x="368" y="158" on="0"/>
        <pt x="368" y="206" on="1"/>
        <pt x="368" y="310" on="0"/>
        <pt x="251" y="310" on="1"/>
        <pt x="188" y="310" on="1"/>
        <pt x="206" y="418" on="1"/>
        <pt x="250" y="418" on="1"/>
        <pt x="298" y="418" on="0"/>
        <pt x="355" y="465" on="0"/>
        <pt x="355" y="509" on="1"/>
        <pt x="355" y="548" on="0"/>
        <pt x="299" y="593" on="0"/>
        <pt x="254" y="593" on="1"/>
        <pt x="179" y="593" on="0"/>
        <pt x="116" y="533" on="1"/>
        <pt x="35" y="617" on="1"/>
        <pt x="132" y="711" on="0"/>
        <pt x="272" y="711" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 22 values pushed */
          35 1 4 5 34 1 3 4 6 1 2 3 16 1 1 2 15 1 0 1 5 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 30 values pushed */
            0 3 0 2 1 3 2 99 0 4 4 5 91 6 1 5 5 65 75 0 1 1 0 91 0
            0 0 66 0 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 28 values pushed */
              6 1 5 0 4 3 5 4 99 0 3 0 2 1 3 2 99 0 1 1 0 91 0 0 0
              66 0 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 33 values pushed */
              6 1 5 0 4 3 5 4 99 0 3 0 2 1 3 2 99 0 1 0 0 1 87 0 1
              1 0 91 0 0 1 0 79
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 14 values pushed */
          0 0 0 37 0 36 36 33 35 36 43 7 8 25
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="two" xMin="40" yMin="0" xMax="531" yMax="711">
      <contour>
        <pt x="352" y="711" on="0"/>
        <pt x="460" y="657" on="0"/>
        <pt x="515" y="566" on="0"/>
        <pt x="515" y="512" on="1"/>
        <pt x="515" y="455" on="0"/>
        <pt x="463" y="349" on="0"/>
        <pt x="344" y="218" on="0"/>
        <pt x="235" y="121" on="1"/>
        <pt x="531" y="121" on="1"/>
        <pt x="514" y="0" on="1"/>
        <pt x="54" y="0" on="1"/>
        <pt x="54" y="112" on="1"/>
        <pt x="177" y="231" on="0"/>
        <pt x="299" y="364" on="0"/>
        <pt x="354" y="457" on="0"/>
        <pt x="354" y="498" on="1"/>
        <pt x="354" y="541" on="0"/>
        <pt x="306" y="589" on="0"/>
        <pt x="261" y="589" on="1"/>
        <pt x="222" y="589" on="0"/>
        <pt x="164" y="556" on="0"/>
        <pt x="136" y="519" on="1"/>
        <pt x="40" y="592" on="1"/>
        <pt x="81" y="649" on="0"/>
        <pt x="196" y="711" on="0"/>
        <pt x="276" y="711" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 14 values pushed */
          22 1 2 3 21 1 0 2 11 1 1 0 3 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 22 values pushed */
            0 2 2 3 91 4 1 3 3 65 75 0 0 0 1 89 0 1 1 58 1 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 20 values pushed */
              4 1 3 0 2 0 3 2 99 0 0 0 1 89 0 1 1 58 1 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 25 values pushed */
              4 1 3 0 2 0 3 2 99 0 0 1 1 0 85 0 0 0 1 89 0 1 0 1 77
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 12 values pushed */
          0 0 0 25 0 24 39 17 23 5 8 23
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="u" xMin="70" yMin="-17" xMax="530" yMax="531">
      <contour>
        <pt x="228" y="168" on="1"/>
        <pt x="228" y="131" on="0"/>
        <pt x="255" y="100" on="0"/>
        <pt x="282" y="100" on="1"/>
        <pt x="306" y="100" on="0"/>
        <pt x="356" y="131" on="0"/>
        <pt x="372" y="158" on="1"/>
        <pt x="372" y="531" on="1"/>
        <pt x="530" y="531" on="1"/>
        <pt x="530" y="0" on="1"/>
        <pt x="392" y="0" on="1"/>
        <pt x="385" y="62" on="1"/>
        <pt x="359" y="24" on="0"/>
        <pt x="271" y="-17" on="0"/>
        <pt x="222" y="-17" on="1"/>
        <pt x="147" y="-17" on="0"/>
        <pt x="70" y="70" on="0"/>
        <pt x="70" y="148" on="1"/>
        <pt x="70" y="531" on="1"/>
        <pt x="228" y="531" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 10 values pushed */
          6 1 0 1 11 1 2 0 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          14
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 18 values pushed */
            4 1 1 1 60 75 0 0 0 2 92 3 1 2 2 58 2 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            43
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 22 values pushed */
              4 1 1 1 60 75 0 2 2 58 75 0 0 0 3 92 0 3 3 66 3 76
            ELSE[ ]	/* Else */
              MPPEM[ ]	/* MeasurePixelPerEm */
              PUSHB[ ]	/* 1 value pushed */
              45
              LT[ ]	/* LessThan */
              IF[ ]	/* If */
                NPUSHB[ ]	/* 22 values pushed */
                4 1 1 1 2 89 0 2 2 58 75 0 0 0 3 92 0 3 3 66 3 76
              ELSE[ ]	/* Else */
                NPUSHB[ ]	/* 25 values pushed */
                0 0 2 3 0 87 4 1 1 0 2 3 1 2 97 0 0 0 3 92 0 3 0 3 80
              EIF[ ]	/* EndIf */
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 8 values pushed */
          19 35 17 19 34 5 8 25
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="underscore" xMin="50" yMin="-186" xMax="550" yMax="-62">
      <contour>
        <pt x="50" y="-62" on="1"/>
        <pt x="550" y="-62" on="1"/>
        <pt x="550" y="-186" on="1"/>
        <pt x="50" y="-186" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 21 values pushed */
          0 0 1 1 0 85 0 0 0 1 89 0 1 0 1 77 17 16 2 8 22
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name=".newline"/>
    <!-- contains no outline data -->
    <TTGlyph name="v" xMin="29" yMin="0" xMax="571" yMax="531">
      <contour>
        <pt x="394" y="0" on="1"/>
        <pt x="208" y="0" on="1"/>
        <pt x="29" y="531" on="1"/>
        <pt x="200" y="531" on="1"/>
        <pt x="303" y="121" on="1"/>
        <pt x="411" y="531" on="1"/>
        <pt x="571" y="531" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 6 values pushed */
          4 1 0 1 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 12 values pushed */
            2 1 1 1 60 75 0 0 0 58 0 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 12 values pushed */
              2 1 1 0 1 114 0 0 0 58 0 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 10 values pushed */
              2 1 1 0 1 114 0 0 0 105
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 6 values pushed */
          18 17 16 3 8 23
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="w" xMin="3" yMin="0" xMax="597" yMax="531">
      <contour>
        <pt x="347" y="0" on="1"/>
        <pt x="301" y="357" on="1"/>
        <pt x="253" y="0" on="1"/>
        <pt x="82" y="0" on="1"/>
        <pt x="3" y="531" on="1"/>
        <pt x="148" y="531" on="1"/>
        <pt x="183" y="99" on="1"/>
        <pt x="238" y="464" on="1"/>
        <pt x="372" y="464" on="1"/>
        <pt x="421" y="99" on="1"/>
        <pt x="457" y="531" on="1"/>
        <pt x="597" y="531" on="1"/>
        <pt x="521" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 8 values pushed */
          9 6 1 3 0 2 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 19 values pushed */
            3 1 1 1 60 75 0 2 2 0 90 5 4 2 0 0 58 0 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 19 values pushed */
              3 1 1 2 1 114 0 2 2 0 90 5 4 2 0 0 58 0 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 24 values pushed */
              3 1 1 2 1 114 0 2 0 0 2 85 0 2 2 0 90 5 4 2 0 2 0 78
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 13 values pushed */
          0 0 0 12 0 12 18 18 17 18 6 8 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="x" xMin="22" yMin="0" xMax="578" yMax="531">
      <contour>
        <pt x="22" y="0" on="1"/>
        <pt x="204" y="279" on="1"/>
        <pt x="39" y="531" on="1"/>
        <pt x="216" y="531" on="1"/>
        <pt x="301" y="361" on="1"/>
        <pt x="383" y="531" on="1"/>
        <pt x="551" y="531" on="1"/>
        <pt x="395" y="285" on="1"/>
        <pt x="578" y="0" on="1"/>
        <pt x="399" y="0" on="1"/>
        <pt x="294" y="199" on="1"/>
        <pt x="193" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 9 values pushed */
          10 7 4 1 4 2 0 1 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 14 values pushed */
            1 1 0 0 60 75 4 3 2 2 2 58 2 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 14 values pushed */
              1 1 0 0 2 89 4 3 2 2 2 58 2 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 20 values pushed */
              1 1 0 2 2 0 85 1 1 0 0 2 89 4 3 2 2 0 2 77
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 12 values pushed */
          0 0 0 11 0 11 18 18 18 5 8 23
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="y" xMin="28" yMin="-223" xMax="572" yMax="531">
      <contour>
        <pt x="395" y="0" on="1"/>
        <pt x="359" y="-107" on="0"/>
        <pt x="217" y="-216" on="0"/>
        <pt x="98" y="-223" on="1"/>
        <pt x="80" y="-111" on="1"/>
        <pt x="156" y="-101" on="0"/>
        <pt x="229" y="-53" on="0"/>
        <pt x="251" y="0" on="1"/>
        <pt x="196" y="0" on="1"/>
        <pt x="28" y="531" on="1"/>
        <pt x="195" y="531" on="1"/>
        <pt x="298" y="101" on="1"/>
        <pt x="410" y="531" on="1"/>
        <pt x="572" y="531" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 10 values pushed */
          11 1 1 2 4 1 0 1 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 17 values pushed */
            3 1 2 2 60 75 0 1 1 58 75 0 0 0 62 0 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 17 values pushed */
              0 1 1 58 75 3 1 2 2 0 91 0 0 0 62 0 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 20 values pushed */
              0 1 2 0 2 1 0 112 3 1 2 2 0 91 0 0 0 62 0 76
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 7 values pushed */
          18 17 20 18 4 8 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="z" xMin="72" yMin="0" xMax="524" yMax="531">
      <contour>
        <pt x="524" y="120" on="1"/>
        <pt x="509" y="0" on="1"/>
        <pt x="72" y="0" on="1"/>
        <pt x="72" y="112" on="1"/>
        <pt x="336" y="412" on="1"/>
        <pt x="94" y="412" on="1"/>
        <pt x="94" y="531" on="1"/>
        <pt x="519" y="531" on="1"/>
        <pt x="519" y="420" on="1"/>
        <pt x="259" y="120" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 10 values pushed */
          8 1 1 2 3 1 0 3 2 74
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 22 values pushed */
            0 1 1 2 89 0 2 2 60 75 4 1 3 3 0 89 0 0 0 58 0 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 20 values pushed */
              0 2 0 1 3 2 1 97 4 1 3 3 0 89 0 0 0 58 0 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 26 values pushed */
              0 2 0 1 3 2 1 97 4 1 3 0 0 3 85 4 1 3 3 0 89 0 0 3 0
              77
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 12 values pushed */
          0 0 0 9 0 9 17 18 17 5 8 23
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <TTGlyph name="zero" xMin="50" yMin="-17" xMax="550" yMax="711">
      <contour>
        <pt x="423" y="711" on="0"/>
        <pt x="550" y="521" on="0"/>
        <pt x="550" y="348" on="1"/>
        <pt x="550" y="174" on="0"/>
        <pt x="423" y="-17" on="0"/>
        <pt x="300" y="-17" on="1"/>
        <pt x="177" y="-17" on="0"/>
        <pt x="50" y="174" on="0"/>
        <pt x="50" y="348" on="1"/>
        <pt x="50" y="521" on="0"/>
        <pt x="177" y="711" on="0"/>
        <pt x="300" y="711" on="1"/>
      </contour>
      <contour>
        <pt x="250" y="596" on="0"/>
        <pt x="203" y="481" on="0"/>
        <pt x="203" y="348" on="1"/>
        <pt x="203" y="211" on="0"/>
        <pt x="250" y="97" on="0"/>
        <pt x="300" y="97" on="1"/>
        <pt x="351" y="97" on="0"/>
        <pt x="396" y="211" on="0"/>
        <pt x="396" y="348" on="1"/>
        <pt x="396" y="483" on="0"/>
        <pt x="349" y="596" on="0"/>
        <pt x="300" y="596" on="1"/>
      </contour>
      <contour>
        <pt x="327" y="410" on="0"/>
        <pt x="365" y="372" on="0"/>
        <pt x="365" y="345" on="1"/>
        <pt x="365" y="317" on="0"/>
        <pt x="327" y="279" on="0"/>
        <pt x="299" y="279" on="1"/>
        <pt x="271" y="279" on="0"/>
        <pt x="234" y="317" on="0"/>
        <pt x="234" y="345" on="1"/>
        <pt x="234" y="372" on="0"/>
        <pt x="271" y="410" on="0"/>
        <pt x="299" y="410" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          43
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 32 values pushed */
            8 1 5 0 4 2 5 4 99 7 1 3 3 1 91 6 1 1 1 65 75 0 2 2 0
            91 0 0 0 66 0 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            45
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 30 values pushed */
              6 1 1 7 1 3 5 1 3 99 8 1 5 0 4 2 5 4 99 0 2 2 0 91 0
              0 0 66 0 76
            ELSE[ ]	/* Else */
              NPUSHB[ ]	/* 35 values pushed */
              6 1 1 7 1 3 5 1 3 99 8 1 5 0 4 2 5 4 99 0 2 0 0 2 87
              0 2 2 0 91 0 0 2 0 79
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 26 values pushed */
          24 24 12 12 0 0 24 35 24 34 30 28 12 23 12 22 18 16 0 11 0 10 36 9 8
          21
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>
    <!-- extra TTGlyphs -->
  </glyf>
  <name>
    <namerecord nameID="0" platformID="3" platEncID="1" langID="0x409">
      Digitized data copyright © 2012-2015, The Mozilla Foundation and Telefonica S.A.
    </namerecord>
    <namerecord nameID="1" platformID="3" platEncID="1" langID="0x409">
      Colored Console
    </namerecord>
    <namerecord nameID="2" platformID="3" platEncID="1" langID="0x409">
      Bold
    </namerecord>
    <namerecord nameID="3" platformID="3" platEncID="1" langID="0x409">
      3.206;CTDB;ColoredConsole-Bold
    </namerecord>
    <namerecord nameID="4" platformID="3" platEncID="1" langID="0x409">
      Colored Console Bold
    </namerecord>
    <namerecord nameID="5" platformID="3" platEncID="1" langID="0x409">
      Version 3.206
    </namerecord>
    <namerecord nameID="6" platformID="3" platEncID="1" langID="0x409">
      ColoredConsole-Bold
    </namerecord>
  </name>
  <post>
    <formatType value="3.0"/>
    <italicAngle value="0.0"/>
    <underlinePosition value="-75"/>
    <underlineThickness value="50"/>
    <isFixedPitch value="1"/>
    <minMemType42 value="0"/>
    <maxMemType42 value="0"/>
    <minMemType1 value="0"/>
    <maxMemType1 value="0"/>
  </post>
  <GSUB>
    <Version value="0x00010000"/>
    <ScriptList>
      <!-- ScriptCount=1 -->
      <ScriptRecord index="0">
        <ScriptTag value="latn"/>
        <Script>
          <DefaultLangSys>
            <ReqFeatureIndex value="0"/>
            <!-- FeatureCount=1 -->
            <FeatureIndex index="0" value="0"/>
          </DefaultLangSys>
          <!-- LangSysCount=0 -->
        </Script>
      </ScriptRecord>
    </ScriptList>
    <FeatureList>
      <!-- FeatureCount=1 -->
      <FeatureRecord index="0">
        <FeatureTag value="liga"/>
        <Feature>
          <!-- LookupCount=1 -->
          <LookupListIndex index="0" value="0"/>
        </Feature>
      </FeatureRecord>
    </FeatureList>
    <LookupList>
      <!-- LookupCount=1 -->
      <Lookup index="0">
        <LookupType value="4"/>
        <LookupFlag value="0"/>
        <!-- SubTableCount=1 -->
        <LigatureSubst index="0" Format="1">
          <!-- LigatureSets -->
        </LigatureSubst>
      </Lookup>
    </LookupList>
  </GSUB>
  <COLR>
    <version value="0"/>
    <!-- ColorGlyphs -->
  </COLR>
  <CPAL>
    <version value="0"/>
    <numPaletteEntries value="0"/>
    <palette index="0">
      <!-- colors -->
    </palette>
  </CPAL>
</ttFont>
